DOC --- Automatically generated by command emacspeak-generate-documentation
$Id$
------------------------------------------------------------

** dtk-exp Select Dectalk TTS server. 

------------------------------------------------------------

** dtk-add-cleanup-pattern	Key Sequence:C-e d a

 Add this pattern to the list of repeating patterns that
are cleaned up.  Optional interactive prefix arg deletes
this pattern if previously added.  Cleaning up repeated
patterns results in emacspeak speaking the pattern followed
by a repeat count instead of speaking all the characters
making up the pattern.  Thus, by adding the repeating
pattern `.' (this is already added by default) emacspeak
will say ``aw fifteen dot'' when speaking the string
``...............'' instead of ``period period period period
'' 

------------------------------------------------------------

** dtk-async-server	Key Sequence:C-e d A

 Select and start an async  speech server interactively.
Async servers allow external programs like self-voicing Web browsers to use
the Emacspeak TTS server abstraction.
Argument PROGRAM specifies the speech server program. 

------------------------------------------------------------

** dtk-local-server	Key Sequence:C-e d L

 Select and start an local  speech server interactively.
Local server lets Emacspeak on a remote host connect back via SSH  port forwarding for instance.
Argument PROGRAM specifies the speech server program.
Port  defaults to  dtk-local-server-port 

------------------------------------------------------------

** dtk-pause Temporarily pause / resume speech. 

------------------------------------------------------------

** dtk-reset-state	Key Sequence:C-e d R

 Restore sanity to the Dectalk.
Typically used after the Dectalk has been power   cycled. 

------------------------------------------------------------

** dtk-resume Resume paused speech.
This command resumes  speech that has been suspended by executing
command `dtk-pause' bound to M-x dtk-pause.
If speech has not been paused,
and option `dtk-resume-should-toggle' is set,
 then this command will pause ongoing speech. 

------------------------------------------------------------

** dtk-select-server	Key Sequence:C-e d d

 Select a speech server interactively.
Argument PROGRAM specifies the speech server program. When called
interactively, The selected server is started
immediately. Optional arg device sets up environment variable
ALSA_DEFAULT to specified device before starting the server. 

------------------------------------------------------------

** dtk-set-character-scale	Key Sequence:C-e d f

 Set scale FACTOR for   speech rate.
Speech rate is scaled by this factor
when speaking characters.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** dtk-set-chunk-separator-syntax	Key Sequence:C-e d RET

 Interactively set how text is split in chunks.
See the Emacs documentation on syntax tables for details on how characters are
classified into various syntactic classes.
Argument S specifies the syntax class. 

------------------------------------------------------------

** dtk-set-language	Key Sequence:C-e d S

 Set language according to the argument lang. 

------------------------------------------------------------

** dtk-set-next-language	Key Sequence:C-e d N

 Switch to the next available language 

------------------------------------------------------------

** dtk-set-predefined-speech-rate	Key Sequence:C-e d 9 C-e d 8 C-e d 7 C-e d 6 C-e d 5 C-e d 4 C-e d 3 C-e d 2 C-e d 1 C-e d 0

 Set speech rate to one of nine predefined levels.
Interactive PREFIX arg says to set the rate globally.
Formula used is:
rate = dtk-speech-rate-base + dtk-speech-rate-step * level. 

------------------------------------------------------------

** dtk-set-preferred-language Set the alias of the preferred language:
For example if alias="en" lang="en_GB",
then the following call:
 dtk-set-language("en")
will set "en_GB".
 

------------------------------------------------------------

** dtk-set-previous-language	Key Sequence:C-e d P

 Switch to the previous available language 

------------------------------------------------------------

** dtk-set-punctuations	Key Sequence:C-e d p

 Set punctuation mode to MODE.
Possible values are `some', `all', or `none'.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** dtk-set-punctuations-to-all Set punctuation  mode to all.
Interactive PREFIX arg sets punctuation mode globally. 

------------------------------------------------------------

** dtk-set-punctuations-to-some Set punctuation  mode to some.
Interactive PREFIX arg sets punctuation mode globally. 

------------------------------------------------------------

** dtk-set-rate	Key Sequence:C-e d r

 Set speaking RATE for the tts.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** dtk-stop	Key Sequence:C-e s

 Stop speech now. 

------------------------------------------------------------

** dtk-toggle-allcaps-beep	Key Sequence:C-e d C

 Toggle allcaps-beep.
when set, allcaps words  are  indicated by a
short beep.  Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.
Note that allcaps-beep is a very useful thing when programming.
However it is irritating to have it on when reading documents. 

------------------------------------------------------------

** dtk-toggle-capitalization	Key Sequence:C-e d c

 Toggle capitalization.
when set, capitalization is indicated by a
short beep.  Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result. 

------------------------------------------------------------

** dtk-toggle-debug	Key Sequence:C-e d b

 Toggle state of the debug FLAG.
When debugging is on, you can switch to the buffer
*speaker* to examine the output from the process
that talks to the speech device by using command C-e d C-M-b.
Note: *speaker* is a hidden buffer, ie it has a leading space in its name. 

------------------------------------------------------------

** dtk-toggle-punctuation-mode	Key Sequence:C-e d ,

 Toggle punctuation mode between "some" and "all".
Interactive PREFIX arg makes the new setting global. 

------------------------------------------------------------

** dtk-toggle-quiet	Key Sequence:C-e d q

 Toggles state of  dtk-quiet.
Turning on this switch silences speech.
Optional interactive prefix arg causes this setting to become global. 

------------------------------------------------------------

** dtk-toggle-speak-nonprinting-chars	Key Sequence:C-e d n

 Toggle speak-nonprinting-chars.
Switches behavior of how characters with the high bit set are handled.
Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result. 

------------------------------------------------------------

** dtk-toggle-split-caps	Key Sequence:C-e d s

 Toggle split caps mode.
Split caps mode is useful when reading
Hungarian notation in program source code.  Interactive PREFIX arg
means toggle the global default value, and then set the current local
value to the result. 

------------------------------------------------------------

** dtk-toggle-splitting-on-white-space	Key Sequence:C-e d SPC

 Toggle splitting of speech on white space.
This affects the internal state of emacspeak that decides if we split
text purely by clause boundaries, or also include
whitespace.  By default, emacspeak sends a clause at a time
to the speech device.  This produces fluent speech for
normal use.  However in modes such as `shell-mode' and some
programming language modes, clause markers appear
infrequently, and this can result in large amounts of text
being sent to the speech device at once, making the system
unresponsive when asked to stop talking.  Splitting on white
space makes emacspeak's stop command responsive.  However,
when splitting on white space, the speech sounds choppy
since the synthesizer is getting a word at a time. 

------------------------------------------------------------

** dtk-toggle-strip-octals	Key Sequence:C-e d o

 Toggle stripping of octals.
Interactive prefix arg means
 toggle the global default value, and then set the current local
value to the result. 

------------------------------------------------------------

** tts-cycle-device Cycle through available ALSA devices.
Optional interactive prefix arg restarts current TTS server. 

------------------------------------------------------------

** tts-restart	Key Sequence:C-e C-s

 Use this to nuke the currently running TTS server and restart it. 

------------------------------------------------------------

** tts-show-debug-buffer	Key Sequence:C-e d C-M-b

 Select TTS debugging buffer. 

------------------------------------------------------------

** tts-speak-version	Key Sequence:C-e d V

 Speak version. 

------------------------------------------------------------

** dtk-unicode-customize-char Add a custom replacement string for CHAR.

When called interactively, CHAR defaults to the character after point. 

------------------------------------------------------------

** dtk-unicode-uncustomize-char Delete custom replacement for CHAR.

When called interactively, CHAR defaults to the character after point. 

------------------------------------------------------------

** emacspeak-alsaplayer-add-to-queue Add specified resource to queue. 

------------------------------------------------------------

** emacspeak-alsaplayer-amark-add Set AMark `name' at current position in current audio stream.
Interactive prefix arg prompts for position.
As the default, use current position. 

------------------------------------------------------------

** emacspeak-alsaplayer-amark-jump Jump to specified AMark. 

------------------------------------------------------------

** emacspeak-alsaplayer-backward-10-seconds Skip backward by  10 seconds. 

------------------------------------------------------------

** emacspeak-alsaplayer-backward-minute Skip backwards by  minutes. 

------------------------------------------------------------

** emacspeak-alsaplayer-backward-ten-minutes Skip backwards by  chunks of minutes. 

------------------------------------------------------------

** emacspeak-alsaplayer-cd Change default directory, and silence its pronunciation. 

------------------------------------------------------------

** emacspeak-alsaplayer-clear Clear or resume alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-clip Invoke mp3splt to clip selected range. 

------------------------------------------------------------

** emacspeak-alsaplayer-find-and-add-to-queue Find  specified resource and add to queue. 

------------------------------------------------------------

** emacspeak-alsaplayer-forward-10-seconds Skip forward by  seconds. 

------------------------------------------------------------

** emacspeak-alsaplayer-forward-minute Skip forward by  minutes. 

------------------------------------------------------------

** emacspeak-alsaplayer-forward-ten-minutes Skip forward by  chunks of ten minutes. 

------------------------------------------------------------

** emacspeak-alsaplayer-info Speak current path and copy it to kill ring. 

------------------------------------------------------------

** emacspeak-alsaplayer-jump Jump to specified track. 

------------------------------------------------------------

** emacspeak-alsaplayer-launch Launch Alsaplayer.
user is placed in a buffer associated with the newly created
Alsaplayer session. 

------------------------------------------------------------

** emacspeak-alsaplayer-mark-position Mark currently displayed position. 

------------------------------------------------------------

** emacspeak-alsaplayer-mode Major mode for alsaplayer interaction. 


key             binding
---             -------



In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `emacspeak-alsaplayer-mode-hook', as the final step
during initialization. 

------------------------------------------------------------

** emacspeak-alsaplayer-next Next  alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-pause Pause or resume alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-previous Previous  alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-quit Quit  alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-relative Relative seek  alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-replace-queue Replace currently playing music. 

------------------------------------------------------------

** emacspeak-alsaplayer-seek Absolute seek  alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-speed Set speed in alsaplayer. 

------------------------------------------------------------

** emacspeak-alsaplayer-start Start  alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-status Show alsaplayer status 

------------------------------------------------------------

** emacspeak-alsaplayer-stop Stop  alsaplayer 

------------------------------------------------------------

** emacspeak-alsaplayer-volume Set volume. 

------------------------------------------------------------

** emacspeak-alsaplayer-where Speak current position and copy it to kill ring. 

------------------------------------------------------------

** emacspeak-amark-add Add an AMark to the buffer local list of AMarks. AMarks are
bookmarks in audio content. If there is an existing amark of the
given name, it is updated with path and position. 

------------------------------------------------------------

** emacspeak-amark-find Return matching AMark if found in buffer-local AMark list. 

------------------------------------------------------------

** emacspeak-amark-load Locate AMarks file from current directory, and load it. 

------------------------------------------------------------

** emacspeak-amark-save Save buffer-local AMarks in current directory. 

------------------------------------------------------------

** emacspeak-list-buffers-next-line Speech enabled buffer menu navigation 

------------------------------------------------------------

** emacspeak-list-buffers-previous-line Speech enabled buffer menu navigation 

------------------------------------------------------------

** emacspeak-list-buffers-speak-buffer-line Speak information about this buffer 

------------------------------------------------------------

** emacspeak-list-buffers-speak-buffer-name Speak the name of the buffer on this line 

------------------------------------------------------------

** emacspeak-custom-goto-group Jump to custom group when in a customization buffer. 

------------------------------------------------------------

** emacspeak-custom-goto-toolbar Jump to custom toolbar when in a customization buffer. 

------------------------------------------------------------

** emacspeak-dired-label-fields Labels the fields of the listing in the dired buffer.
Currently is a no-op  unless
unless `dired-listing-switches' contains -l 

------------------------------------------------------------

** emacspeak-dired-show-file-type Displays type of current file by running command file.
Like Emacs' built-in dired-show-file-type but allows user to customize
options passed to command `file'. 

------------------------------------------------------------

** emacspeak-dired-speak-file-access-time Speak access time  of the current file. 

------------------------------------------------------------

** emacspeak-dired-speak-file-modification-time Speak modification time  of the current file. 

------------------------------------------------------------

** emacspeak-dired-speak-file-permissions Speak the permissions of the current file. 

------------------------------------------------------------

** emacspeak-dired-speak-file-size Speak the size of the current file.
On a directory line, run du -s on the directory to speak its size. 

------------------------------------------------------------

** emacspeak-dired-speak-header-line Speak the header line of the dired buffer.  

------------------------------------------------------------

** emacspeak-dired-speak-symlink-target Speaks the target of the symlink on the current line. 

------------------------------------------------------------

** emacspeak-eterm-copy-region-to-register :around advice: `ad-Advice-emacspeak-eterm-copy-region-to-register'

Copy text from terminal to an Emacs REGISTER.
This copies  region delimited by the emacspeak eterm marker 
set by command M-x emacspeak-eterm-set-marker and the 
emacspeak eterm pointer to a register.

(fn REGISTER) 

------------------------------------------------------------

** emacspeak-eterm-define-window Prompt for a window ID.
The window is then define to be
the rectangle delimited by point and eterm mark.  This is to
be used when emacspeak is set to review mode inside an
eterm. 

------------------------------------------------------------

** emacspeak-eterm-describe-window Describe an eterm  window.
Description indicates eterm window coordinates and whether it is stretchable 

------------------------------------------------------------

** emacspeak-eterm-goto-line Move emacspeak eterm pointer to a specified LINE. 

------------------------------------------------------------

** emacspeak-eterm-kill-ring-save-region Copy text from terminal to kill ring.
This copies  region delimited by the emacspeak eterm marker 
set by command M-x emacspeak-eterm-set-marker and the 
emacspeak eterm pointer. 

------------------------------------------------------------

** emacspeak-eterm-maybe-send-raw Send a raw character through if in the terminal buffer.
Execute end of line if
in a non eterm buffer if executed via C-e C-e 

------------------------------------------------------------

** emacspeak-eterm-paste-register :around advice: `ad-Advice-emacspeak-eterm-paste-register'

Paste contents of REGISTER at current location.
If the specified register contains text, then that text is
sent to the terminal as if it were typed by the user.

(fn REGISTER) 

------------------------------------------------------------

** emacspeak-eterm-pointer-backward-word Move the pointer backward  by words. 
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move. 

------------------------------------------------------------

** emacspeak-eterm-pointer-down Move the pointer down a line.
Argument COUNT specifies number of lines by which to move. 

------------------------------------------------------------

** emacspeak-eterm-pointer-forward-word Move the pointer forward by words. 
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move. 

------------------------------------------------------------

** emacspeak-eterm-pointer-left Move the pointer left.
Argument COUNT specifies number of columns by which to move. 

------------------------------------------------------------

** emacspeak-eterm-pointer-right Move the pointer right.
Argument COUNT specifies number of columns by which to move. 

------------------------------------------------------------

** emacspeak-eterm-pointer-to-bottom Move the pointer to the bottom  of the screen. 

------------------------------------------------------------

** emacspeak-eterm-pointer-to-cursor Move the pointer to the cursor. 

------------------------------------------------------------

** emacspeak-eterm-pointer-to-left-edge Move the pointer to the right edge. 

------------------------------------------------------------

** emacspeak-eterm-pointer-to-next-color-change Move the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip. 

------------------------------------------------------------

** emacspeak-eterm-pointer-to-previous-color-change Move the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip. 

------------------------------------------------------------

** emacspeak-eterm-pointer-to-right-edge Move the pointer to the right edge. 

------------------------------------------------------------

** emacspeak-eterm-pointer-to-top Move the pointer to the top of the screen. 

------------------------------------------------------------

** emacspeak-eterm-pointer-up Move the pointer up a line.
Argument COUNT .specifies number of lines by which to move. 

------------------------------------------------------------

** emacspeak-eterm-remote-term Start a terminal-emulator in a new buffer. 

------------------------------------------------------------

** emacspeak-eterm-search-backward Search backward on the terminal. 

------------------------------------------------------------

** emacspeak-eterm-search-forward Search forward on the terminal. 

------------------------------------------------------------

** emacspeak-eterm-set-filter-window Prompt for the id of a predefined window,
and set the `filter' window to it.
Non-nil interactive prefix arg `unsets' the filter window;
this is equivalent to having the entire terminal as the filter window (this is
what eterm starts up with).
Setting the filter window results in emacspeak  only monitoring screen
activity within the filter window. 

------------------------------------------------------------

** emacspeak-eterm-set-focus-window Prompt for the id of a predefined window,
and set the `focus' window to it.
Non-nil interactive prefix arg `unsets' the focus window;
this is equivalent to having the entire terminal as the focus window (this is
what eterm starts up with).
Setting the focus window results in emacspeak  monitoring screen
and speaking that window upon seeing screen activity. 

------------------------------------------------------------

** emacspeak-eterm-set-marker Set Emacspeak eterm marker.
This sets  the emacspeak eterm marker to the position pointed 
to by the emacspeak eterm pointer. 

------------------------------------------------------------

** emacspeak-eterm-speak-cursor Speak cursor position. 

------------------------------------------------------------

** emacspeak-eterm-speak-pointer Speak current pointer position. 

------------------------------------------------------------

** emacspeak-eterm-speak-pointer-char Speak char under eterm pointer.
Pronounces character phonetically unless  called with a PREFIX arg. 

------------------------------------------------------------

** emacspeak-eterm-speak-pointer-line Speak the line the pointer is on. 

------------------------------------------------------------

** emacspeak-eterm-speak-pointer-word Speak the word  the pointer is on. 

------------------------------------------------------------

** emacspeak-eterm-speak-predefined-window Speak a predefined eterm window between 1 and 10. 

------------------------------------------------------------

** emacspeak-eterm-speak-screen Speak the screen.  Default is to speak from the emacspeak pointer  to point.
Optional prefix arg FLAG causes region above
the Emacspeak pointer to be spoken. 

------------------------------------------------------------

** emacspeak-eterm-speak-window Speak an eterm window.
Argument ID specifies the window. 

------------------------------------------------------------

** emacspeak-eterm-toggle-filter-window Toggle active state of filter window. 

------------------------------------------------------------

** emacspeak-eterm-toggle-focus-window Toggle active state of focus window. 

------------------------------------------------------------

** emacspeak-eterm-toggle-pointer-mode Toggle emacspeak eterm pointer mode.
With optional interactive prefix  arg, turn it on.
When emacspeak eterm is in pointer mode, the eterm read pointer
stays where it is rather than automatically moving to the terminal cursor when
there is terminal activity. 

------------------------------------------------------------

** emacspeak-eterm-toggle-review Toggle state of eterm review. 
In review mode, you can move around the terminal and listen to the contnets 
without sending input to the terminal itself. 

------------------------------------------------------------

** emacspeak-eterm-yank-window Yank contents of  an eterm window at point. 

------------------------------------------------------------

** emacspeak-toggle-eterm-autospeak Toggle state of eterm autospeak.
When eterm autospeak is turned on and the terminal is in line mode,
all output to the terminal is automatically spoken. 
  Interactive prefix arg means toggle  the global default value, and then set the
  current local  value to the result.  

------------------------------------------------------------

** emacspeak-feeds-add-feed	Key Sequence:C-e M-u

 Add specified feed to our feed store. 

------------------------------------------------------------

** emacspeak-feeds-archive-feeds Archive list of subscribed fees to personal resource directory.
Archiving is useful when synchronizing feeds across multiple machines. 

------------------------------------------------------------

** emacspeak-feeds-atom-display Display ATOM feed. 

------------------------------------------------------------

** emacspeak-feeds-browse	Key Sequence:C-e C-u

 Browse specified  feed. 

------------------------------------------------------------

** emacspeak-feeds-fastload-feeds Fast load list of feeds from archive.
This directly  updates emacspeak-feeds from the archive, rather than adding those entries to the current set of subscribed feeds. 

------------------------------------------------------------

** emacspeak-feeds-find-feeds Browse feeds matching specified query. 

------------------------------------------------------------

** emacspeak-feeds-lookup-and-view Lookup feed URL for a site and browse result. 

------------------------------------------------------------

** emacspeak-feeds-opml-display Display OPML feed. 

------------------------------------------------------------

** emacspeak-feeds-restoere-feeds Restore list of subscribed fees from  personal resource directory.
Archiving is useful when synchronizing feeds across multiple machines. 

------------------------------------------------------------

** emacspeak-feeds-rss-display Display RSS feed. 

------------------------------------------------------------

** emacspeak-fix-all-recent-commands Fix recently loaded interactive commands.
This command looks through `load-history' and fixes commands if necessary.
Memoizes call in emacspeak-load-history-pointer to memoize this call.  

------------------------------------------------------------

** emacspeak-fix-commands-loaded-from Fix all commands loaded from a specified module. 

------------------------------------------------------------

** emacspeak-keymap-choose-new-emacspeak-prefix Interactively select a new prefix key to use for all emacspeak
commands.  The default is to use `C-e'  This command
lets you switch the prefix to something else.  This is a useful thing
to do if you run emacspeak on a remote machine from inside a terminal
that is running inside a local emacspeak session.  You can have the
remote emacspeak use a different control key to give your fingers some
relief. 

------------------------------------------------------------

** emacspeak-outline-speak-backward-heading	Key Sequence:C-c b

 Analogous to outline-backward-same-level
except that the outline section is  spoken 

------------------------------------------------------------

** emacspeak-outline-speak-forward-heading	Key Sequence:C-c f

 Analogous to outline-forward-same-level,
except that the outline section is  spoken 

------------------------------------------------------------

** emacspeak-outline-speak-next-heading	Key Sequence:C-c n

 Analogous to outline-next-visible-heading,
except that the outline section is  spoken 

------------------------------------------------------------

** emacspeak-outline-speak-previous-heading	Key Sequence:C-c p

 Analogous to outline-previous-visible-heading,
except that the outline section is  spoken 

------------------------------------------------------------

** emacspeak-outline-speak-this-heading	Key Sequence:C-c SPC

 Speak current outline section starting from point 

------------------------------------------------------------

** emacspeak-pronounce-clear-dictionaries Clear all current pronunciation dictionaries. 

------------------------------------------------------------

** emacspeak-pronounce-define-local-pronunciation Define buffer local pronunciation.
Argument WORD specifies the word which should be pronounced as specified by PRONUNCIATION. 

------------------------------------------------------------

** emacspeak-pronounce-define-pronunciation Interactively define entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded. 

------------------------------------------------------------

** emacspeak-pronounce-define-template-pronunciation Interactively define template entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded. 

------------------------------------------------------------

** emacspeak-pronounce-dispatch	Key Sequence:C-e M-d

 Provides the user interface front-end to Emacspeak's pronunciation dictionaries. 

------------------------------------------------------------

** emacspeak-pronounce-edit-pronunciations Prompt for and launch a pronunciation editor on the
specified pronunciation dictionary key. 

------------------------------------------------------------

** emacspeak-pronounce-load-dictionaries Load pronunciation dictionaries.
Optional argument FILENAME specifies the dictionary file. 

------------------------------------------------------------

** emacspeak-pronounce-refresh-pronunciations Refresh pronunciation table for current buffer.
Activates pronunciation dictionaries if not already active. 

------------------------------------------------------------

** emacspeak-pronounce-save-dictionaries Writes out the persistent emacspeak pronunciation dictionaries. 

------------------------------------------------------------

** emacspeak-pronounce-toggle-use-of-dictionaries Toggle use of pronunciation dictionaries in current buffer.
Pronunciations can be defined on a per file, per directory and/or per
mode basis.
Pronunciations are activated on a per buffer basis.
Turning on the use of pronunciation dictionaries results in emacspeak
composing a pronunciation table based on the currently defined
pronunciation dictionaries.
After this, the pronunciations will be applied whenever text in the
buffer is spoken.
Optional argument state can be used from Lisp programs to
explicitly turn pronunciations on or off. 

------------------------------------------------------------

** emacspeak-pronounce-yank-word Yank word at point into minibuffer. 

------------------------------------------------------------

** emacspeak-backward-char Backward-char redefined to speak char moved to.  

------------------------------------------------------------

** emacspeak-forward-char Forward-char redefined to speak char moved to.  

------------------------------------------------------------

** emacspeak-self-insert-command Insert a character.
Speaks the character if emacspeak-character-echo is true.
See  command emacspeak-toggle-word-echo bound to
C-e d w.
Speech flushes as you type. 

------------------------------------------------------------

** emacspeak-audio-setup	Key Sequence:C-e (

 Call appropriate audio environment set command. 

------------------------------------------------------------

** emacspeak-play-all-icons Plays all defined icons and speaks their names. 

------------------------------------------------------------

** emacspeak-set-auditory-icon-player	Key Sequence:C-e M-a

 Select  player used for producing auditory icons.
Recommended choices:

emacspeak-serve-auditory-icon for  the wave device.
emacspeak-queue-auditory-icon when using software TTS. 

------------------------------------------------------------

** emacspeak-sounds-reset-local-player Ask Emacspeak to use a local audio player.
This lets me have Emacspeak switch to using audioplay on
solaris after I've used it for a while from a remote session
where it would use the more primitive speech-server based
audio player. 

------------------------------------------------------------

** emacspeak-sounds-reset-sound Reload sound drivers. 

------------------------------------------------------------

** emacspeak-sounds-select-theme	Key Sequence:C-e )

 Select theme for auditory icons. 

------------------------------------------------------------

** emacspeak-toggle-auditory-icons	Key Sequence:C-e C-a

 Toggle use of auditory icons.
Optional interactive PREFIX arg toggles global value. 

------------------------------------------------------------

** emacspeak-blink-matching-open Move cursor momentarily to the beginning of the sexp before point.
Also display match context in minibuffer. 

------------------------------------------------------------

** emacspeak-completion-pick-completion Pick completion and return safely where we came from. 

------------------------------------------------------------

** emacspeak-completions-move-to-completion-group Move to group of choices beginning with character last
typed. If no such group exists, then we try to search for that
char, or dont move.  

------------------------------------------------------------

** emacspeak-dial-dtk	Key Sequence:C-e d t

 Prompt for and dial a phone NUMBER with the Dectalk. 

------------------------------------------------------------

** emacspeak-execute-repeatedly Execute COMMAND repeatedly. 

------------------------------------------------------------

** emacspeak-goto-percent	Key Sequence:C-e M-%

 Move to end  PERCENT of buffer like in View mode.
Display is centered at point.
Also set the mark at the position where point was. 

------------------------------------------------------------

** emacspeak-mark-backward-mark	Key Sequence:<C-up>

 Cycle backward through the mark ring. 

------------------------------------------------------------

** emacspeak-owindow-next-line	Key Sequence:ESC <down>

 Move to the next line in the other window and speak it.
Numeric prefix arg COUNT can specify number of lines to move. 

------------------------------------------------------------

** emacspeak-owindow-previous-line	Key Sequence:ESC <up>

 Move to the next line in the other window and speak it.
Numeric prefix arg COUNT specifies number of lines to move. 

------------------------------------------------------------

** emacspeak-owindow-scroll-down	Key Sequence:ESC <prior>

 Scroll down  the window that command `other-window' would move to.
Speak the window contents after scrolling. 

------------------------------------------------------------

** emacspeak-owindow-scroll-up	Key Sequence:ESC <next>

 Scroll up the window that command `other-window' would move to.
Speak the window contents after scrolling. 

------------------------------------------------------------

** emacspeak-owindow-speak-line	Key Sequence:ESC <select>

 Speak the current line in the other window. 

------------------------------------------------------------

** emacspeak-read-next-line	Key Sequence:C-e <down>

 Read next line, specified by an offset, without moving.
Default is to read the next line.  

------------------------------------------------------------

** emacspeak-read-next-word Read next word, specified as a numeric  arg, without moving.
Default is to read the next word.  

------------------------------------------------------------

** emacspeak-read-previous-line	Key Sequence:C-e <up>

 Read previous line, specified by an offset, without moving.
Default is to read the previous line.  

------------------------------------------------------------

** emacspeak-read-previous-word Read previous word, specified as a prefix arg, without moving.
Default is to read the previous word.  

------------------------------------------------------------

** emacspeak-search	Key Sequence:<search>

 Call search defined in <search>. 

------------------------------------------------------------

** emacspeak-shell-command Run shell command and speak its output. 

------------------------------------------------------------

** emacspeak-silence	Key Sequence:<silence>

 Silence is golden. Stop speech, and pause/resume any media
streams.
Runs `emacspeak-silence-hook' which can be used to configure
which media players get silenced or paused/resumed. 

------------------------------------------------------------

** emacspeak-speak-and-skip-extent-upto-char Search forward from point until we hit char.
Speak text between point and the char we hit. 

------------------------------------------------------------

** emacspeak-speak-and-skip-extent-upto-this-char Speak extent delimited by point and last character typed. 

------------------------------------------------------------

** emacspeak-speak-browse-buffer	Key Sequence:C-e ,

 Browse current buffer.
Default is to speak chunk having current personality.
Interactive prefix arg `browse'  repeatedly browses  through
  chunks having same personality as the current text chunk. 

------------------------------------------------------------

** emacspeak-speak-buffer	Key Sequence:C-e b

 Speak current buffer  contents.
With prefix ARG, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.
 If voice lock mode is on, the paragraphs in the buffer are
voice annotated first,  see command `emacspeak-speak-voice-annotate-paragraphs'. 

------------------------------------------------------------

** emacspeak-speak-buffer-filename	Key Sequence:C-e f

 Speak name of file being visited in current buffer.
Speak default directory if invoked in a dired buffer,
or when the buffer is not visiting any file.
Interactive prefix arg `filename' speaks only the final path
component.
The result is put in the kill ring for convenience. 

------------------------------------------------------------

** emacspeak-speak-buffer-interactively	Key Sequence:C-e B

 Speak the start of, rest of, or the entire buffer.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire buffer. 

------------------------------------------------------------

** emacspeak-speak-char	Key Sequence:C-e c

 Speak character under point.
Pronounces character phonetically unless  called with a PREFIX arg. 

------------------------------------------------------------

** emacspeak-speak-char-name tell me what this is 

------------------------------------------------------------

** emacspeak-speak-completions-if-available Speak completions if available. 

------------------------------------------------------------

** emacspeak-speak-continuously	Key Sequence:C-e RET

 Speak a buffer continuously.
First prompts using the minibuffer for the kind of action to
perform after speaking each chunk.  E.G.  speak a line at a time
etc.  Speaking commences at current buffer position.  Pressing
C-g breaks out, leaving point on last chunk that
was spoken.  Any other key continues to speak the buffer. 

------------------------------------------------------------

** emacspeak-speak-current-column	Key Sequence:C-e =

 Speak the current column. 

------------------------------------------------------------

** emacspeak-speak-current-field	Key Sequence:C-e .

 Speak current field. 

------------------------------------------------------------

** emacspeak-speak-current-kill	Key Sequence:C-e k

 Speak the current kill entry.
This is the text that will be yanked in by the next C-y.
Prefix numeric arg, COUNT, specifies that the text that will be yanked as a
result of a
C-y  followed by count-1 M-y
be spoken.
 The kill number that is spoken says what numeric prefix arg to give
to command yank. 

------------------------------------------------------------

** emacspeak-speak-current-mark	Key Sequence:C-e C-@

 Speak the line containing the mark.
With no argument, speaks the
line containing the mark--this is where `exchange-point-and-mark'
C-x C-x would jump.  Numeric prefix arg 'COUNT' speaks
line containing mark 'n' where 'n' is one less than the number of
times one has to jump using `set-mark-command' to get to this marked
position.  The location of the mark is indicated by an aural highlight
achieved by a change in voice personality. 

------------------------------------------------------------

** emacspeak-speak-current-percentage	Key Sequence:C-e %

 Announce the percentage into the current buffer. 

------------------------------------------------------------

** emacspeak-speak-current-window Speak contents of current window.
Speaks entire window irrespective of point. 

------------------------------------------------------------

** emacspeak-speak-date-as-seconds Read time value as a human-readable string, return seconds.
Seconds value is also placed in the kill-ring. 

------------------------------------------------------------

** emacspeak-speak-display-char Display char under point using current speech display table.
Behavior is the same as command `emacspeak-speak-char'
bound to C-e c
for characters in the range 0--127.
Optional argument PREFIX  specifies that the character should be spoken phonetically. 

------------------------------------------------------------

** emacspeak-speak-face-interval-and-move Speaks region delimited by text in current face, and moves past the chunk. 

------------------------------------------------------------

** emacspeak-speak-front-of-buffer Speak   the buffer from start to   point 

------------------------------------------------------------

** emacspeak-speak-header-line	Key Sequence:C-e SPC

 Speak header line if set. 

------------------------------------------------------------

** emacspeak-speak-help	Key Sequence:C-e h

 Speak help buffer if one present.
With prefix arg, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point. 

------------------------------------------------------------

** emacspeak-speak-help-interactively Speak the start of, rest of, or the entire help.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire help. 

------------------------------------------------------------

** emacspeak-speak-hostname	Key Sequence:C-e M-h

 Speak host name. 

------------------------------------------------------------

** emacspeak-speak-line	Key Sequence:C-e l

 Speaks current line.  With prefix ARG, speaks the rest of the line
from point.  Negative prefix optional arg speaks from start of line to
point.  Voicifies if option `voice-lock-mode' is on.  Indicates
indentation with a tone if audio indentation is in use.  Indicates
position of point with an aural highlight if option
`emacspeak-show-point' is turned on --see command
`emacspeak-show-point' bound to M-x emacspeak-show-point.  Lines that
start hidden blocks of text, e.g.  outline header lines, or header
lines of blocks created by command `emacspeak-hide-or-expose-block'
are indicated with auditory icon ellipses. 

------------------------------------------------------------

** emacspeak-speak-line-interactively	Key Sequence:C-e L

 Speak the start of, rest of, or the entire line.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire line. 

------------------------------------------------------------

** emacspeak-speak-line-number	Key Sequence:C-e C-l

 Print the current buffer line number and narrowed line number of point. 

------------------------------------------------------------

** emacspeak-speak-line-set-column-filter	Key Sequence:C-e |

 Set up filter for selectively speaking or ignoring portions of lines.
The filter is specified as a list of pairs.
For example, to filter  columns 1 -- 10 and 20 -- 25,
specify filter as
((0 9) (20 25)). Filter settings are persisted across sessions.  A
persisted filter is used as the default when prompting for a filter.
This allows one to accumulate a set of filters for specific files like
/var/adm/messages and /var/adm/maillog over time.
Option emacspeak-speak-line-invert-filter determines
the sense of the filter.  

------------------------------------------------------------

** emacspeak-speak-load-directory-settings Load a directory specific Emacspeak settings file.
This is typically used to load up settings that are specific to
an electronic book consisting of many files in the same
directory. 

------------------------------------------------------------

** emacspeak-speak-message-again	Key Sequence:C-e a

 Speak the last message from Emacs once again.
The message is also placed in the kill ring for convenient yanking
if `emacspeak-speak-message-again-should-copy-to-kill-ring' is set. 

------------------------------------------------------------

** emacspeak-speak-message-at-time	Key Sequence:C-e @

 Set up ring-at-time to speak message at specified time.
Provides simple stop watch functionality in addition to other things.
See documentation for command run-at-time for details on time-spec. 

------------------------------------------------------------

** emacspeak-speak-microseconds-since-epoch Speaks time value specified as microseconds  since epoch, e.g. as from float-time. 

------------------------------------------------------------

** emacspeak-speak-milliseconds-since-epoch Speaks time value specified as milliseconds  since epoch, e.g. as from float-time. 

------------------------------------------------------------

** emacspeak-speak-minibuffer Speak the minibuffer contents
 With prefix arg, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point. 

------------------------------------------------------------

** emacspeak-speak-minor-mode-line	Key Sequence:C-e M

 Speak the minor mode-information. 

------------------------------------------------------------

** emacspeak-speak-mode-line	Key Sequence:C-e m

 Speak the mode-line.
Speaks header-line if that is set when called non-interactively.
Interactive prefix arg speaks buffer info. 

------------------------------------------------------------

** emacspeak-speak-next-face-chunk Moves to the front of next chunk having current face.
Speak that chunk after moving. 

------------------------------------------------------------

** emacspeak-speak-next-field	Key Sequence:C-e >

 Move to and speak next field. 

------------------------------------------------------------

** emacspeak-speak-next-personality-chunk Moves to the front of next chunk having current personality.
Speak that chunk after moving. 

------------------------------------------------------------

** emacspeak-speak-next-window	Key Sequence:C-e C-n

 Speak the next window. 

------------------------------------------------------------

** emacspeak-speak-other-buffer	Key Sequence:C-e M-b

 Speak specified buffer.
Useful to listen to a buffer without switching  contexts. 

------------------------------------------------------------

** emacspeak-speak-other-window Speak contents of `other' window.
Speaks entire window irrespective of point.
Semantics  of `other' is the same as for the builtin Emacs command
`other-window'.
Optional argument ARG  specifies `other' window to speak. 

------------------------------------------------------------

** emacspeak-speak-page	Key Sequence:C-e [

 Speak a page.
With prefix ARG, speaks rest of current page.
Negative prefix arg will read from start of current page to point.
If option  `voice-lock-mode' is on, then it will use any defined personality. 

------------------------------------------------------------

** emacspeak-speak-page-interactively	Key Sequence:C-e ]

 Speak the start of, rest of, or the entire page.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire page. 

------------------------------------------------------------

** emacspeak-speak-paragraph	Key Sequence:C-e { C-e p

 Speak paragraph.
With prefix arg, speaks rest of current paragraph.
Negative prefix arg will read from start of current paragraph to point.
If voice-lock-mode is on, then it will use any defined personality.  

------------------------------------------------------------

** emacspeak-speak-paragraph-interactively	Key Sequence:C-e P

 Speak the start of, rest of, or the entire paragraph.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire paragraph. 

------------------------------------------------------------

** emacspeak-speak-preceding-char Speak character before point. 

------------------------------------------------------------

** emacspeak-speak-predefined-window	Key Sequence:C-e 9 C-e 8 C-e 7 C-e 6 C-e 5 C-e 4 C-e 3 C-e 2 C-e 1 C-e 0

 Speak one of the first 10 windows on the screen.
Speaks entire window irrespective of point.
In general, you'll never have Emacs split the screen into more than
two or three.
Argument ARG determines the 'other' window to speak.
Semantics  of `other' is the same as for the builtin Emacs command
`other-window'. 

------------------------------------------------------------

** emacspeak-speak-previous-face-chunk Moves to the front of previous chunk having current face.
Speak that chunk after moving. 

------------------------------------------------------------

** emacspeak-speak-previous-field	Key Sequence:C-e <

 Move to previous field and speak it. 

------------------------------------------------------------

** emacspeak-speak-previous-personality-chunk Moves to the front of previous chunk having current personality.
Speak that chunk after moving. 

------------------------------------------------------------

** emacspeak-speak-previous-window	Key Sequence:C-e C-p

 Speak the previous window. 

------------------------------------------------------------

** emacspeak-speak-rectangle	Key Sequence:C-e R

 Speak a rectangle of text.
Rectangle is delimited by point and mark.
When call from a program,
arguments specify the START and END of the rectangle. 

------------------------------------------------------------

** emacspeak-speak-region	Key Sequence:C-e r

 Speak region.
Argument START  and END specify region to speak. 

------------------------------------------------------------

** emacspeak-speak-rest-of-buffer	Key Sequence:C-e n

 Speak remainder of the buffer starting at point 

------------------------------------------------------------

** emacspeak-speak-seconds-since-epoch Speaks time value specified as seconds  since epoch, e.g. as from float-time. 

------------------------------------------------------------

** emacspeak-speak-sentence Speak current sentence.
With prefix ARG, speaks the rest of the sentence  from point.
Negative prefix arg speaks from start of sentence to point. 

------------------------------------------------------------

** emacspeak-speak-set-display-table Sets up buffer specific speech display table that controls how
special characters are spoken. Interactive prefix argument causes
setting to be global. 

------------------------------------------------------------

** emacspeak-speak-set-mode-punctuations	Key Sequence:C-e d m

 Set punctuation mode for all buffers in current mode. 

------------------------------------------------------------

** emacspeak-speak-sexp Speak current sexp.
With prefix ARG, speaks the rest of the sexp  from point.
Negative prefix arg speaks from start of sexp to point.
If option  `voice-lock-mode' is on, then uses the personality. 

------------------------------------------------------------

** emacspeak-speak-sexp-interactively	Key Sequence:C-e "

 Speak the start of, rest of, or the entire sexp.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire sexp. 

------------------------------------------------------------

** emacspeak-speak-show-active-network-interfaces	Key Sequence:C-e I

 Shows all active network interfaces in the echo area.
With interactive prefix argument ADDRESS it prompts for a
specific interface and shows its address. The address is
also copied to the kill ring for convenient yanking. 

------------------------------------------------------------

** emacspeak-speak-skim-buffer Skim the current buffer  a paragraph at a time. 

------------------------------------------------------------

** emacspeak-speak-skim-next-paragraph Skim next paragraph. 

------------------------------------------------------------

** emacspeak-speak-skim-paragraph Skim paragraph.
Skimming a paragraph results in the speech speeding up after
the first clause.
Speech is scaled by the value of dtk-speak-skim-scale 

------------------------------------------------------------

** emacspeak-speak-spaces-at-point	Key Sequence:C-e C-M-@

 Speak the white space at point. 

------------------------------------------------------------

** emacspeak-speak-spell-current-word Spell word at  point. 

------------------------------------------------------------

** emacspeak-speak-text-range Speak text range identified by this PROPERTY. 

------------------------------------------------------------

** emacspeak-speak-this-face-chunk Speak chunk of text around point that has current face. 

------------------------------------------------------------

** emacspeak-speak-this-personality-chunk Speak chunk of text around point that has current
personality. 

------------------------------------------------------------

** emacspeak-speak-time	Key Sequence:C-e t

 Speak the time.
Optional interactive prefix arg `C-u'invokes world clock.
Timezone is specified using minibuffer completion.
Second interactive prefix sets clock to new timezone. 

------------------------------------------------------------

** emacspeak-speak-version	Key Sequence:C-e V

 Announce version information for running emacspeak. 

------------------------------------------------------------

** emacspeak-speak-voice-annotate-paragraphs Locate paragraphs and voice annotate the first word.
Here, paragraph is taken to mean a chunk of text preceded by a blank line.
Useful to do this before you listen to an entire buffer. 

------------------------------------------------------------

** emacspeak-speak-window-information	Key Sequence:C-e C-w

 Speaks information about current window. 

------------------------------------------------------------

** emacspeak-speak-word	Key Sequence:C-e w

 Speak current word.
With prefix ARG, speaks the rest of the word from point.
Negative prefix arg speaks from start of word to point.
If executed  on the same buffer position a second time, the word is
spelt instead of being spoken. 

------------------------------------------------------------

** emacspeak-speak-word-interactively Speak the start of, rest of, or the entire word.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire word. 

------------------------------------------------------------

** emacspeak-speak-world-clock Display current date and time  for specified zone.
Optional second arg `set' sets the TZ environment variable as well. 

------------------------------------------------------------

** emacspeak-switch-to-reference-buffer Switch back to buffer that generated completions. 

------------------------------------------------------------

** emacspeak-toggle-action-mode Toggle state of  Emacspeak  action mode.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** emacspeak-toggle-audio-indentation	Key Sequence:C-e d i

 Toggle state of  Emacspeak  audio indentation.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Specifying the method of indentation as `tones'
results in the Dectalk producing a tone whose length is a function of the
line's indentation.  Specifying `speak'
results in the number of initial spaces being spoken. 

------------------------------------------------------------

** emacspeak-toggle-character-echo	Key Sequence:C-e d k

 Toggle state of  Emacspeak  character echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** emacspeak-toggle-comint-autospeak	Key Sequence:C-e C-q

 Toggle state of Emacspeak comint autospeak.
When turned on, comint output is automatically spoken.  Turn this on if
you want your shell to speak its results.  Interactive
PREFIX arg means toggle the global default value, and then
set the current local value to the result. 

------------------------------------------------------------

** emacspeak-toggle-comint-output-monitor	Key Sequence:C-e o

 Toggle state of Emacspeak comint monitor.
When turned on, comint output is automatically spoken.  Turn this on if
you want your shell to speak its results.  Interactive
PREFIX arg means toggle the global default value, and then
set the current local value to the result. 

------------------------------------------------------------

** emacspeak-toggle-header-line Toggle Emacspeak's default header line. 

------------------------------------------------------------

** emacspeak-toggle-line-echo	Key Sequence:C-e d l

 Toggle state of  Emacspeak  line echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** emacspeak-toggle-mail-alert	Key Sequence:C-e M-m

 Toggle state of  Emacspeak  mail alert.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Turning on this option results in Emacspeak producing an auditory icon
indicating the arrival  of new mail when displaying the mode line. 

------------------------------------------------------------

** emacspeak-toggle-show-point	Key Sequence:C-e C-d

 Toggle state of  Emacspeak-show-point.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** emacspeak-toggle-speak-line-invert-filter	Key Sequence:C-e \

 Toggle state of   how column filter is interpreted.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** emacspeak-toggle-speak-messages	Key Sequence:C-e q

 Toggle the state of whether emacspeak echoes messages. 

------------------------------------------------------------

** emacspeak-toggle-word-echo	Key Sequence:C-e d w

 Toggle state of  Emacspeak  word echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result. 

------------------------------------------------------------

** emacspeak-use-customized-blink-paren A customized blink-paren to speak  matching opening paren.
We need to call this in case Emacs is anal and loads its own
builtin blink-paren function which does not talk. 

------------------------------------------------------------

** emacspeak-voiceify-rectangle Voicify the current rectangle.
When calling from a program,arguments are
START END personality
Prompts for PERSONALITY  with completion when called interactively. 

------------------------------------------------------------

** emacspeak-voiceify-region Voicify the current region.
When calling from a program,arguments are
START END personality.
Prompts for PERSONALITY  with completion when called interactively. 

------------------------------------------------------------

** emacspeak-zap-tts	Key Sequence:C-e d z

 Send this command to the TTS directly. 

------------------------------------------------------------

** emacspeak-table-copy-current-element-to-kill-ring Copy current table element to kill ring. 

------------------------------------------------------------

** emacspeak-table-copy-current-element-to-register :around advice: `ad-Advice-emacspeak-table-copy-current-element-to-register'

Copy current table element to specified register.

(fn REGISTER) 

------------------------------------------------------------

** emacspeak-table-copy-to-clipboard Copy table in current buffer to the table clipboard.
Current buffer must be in emacspeak-table mode. 

------------------------------------------------------------

** emacspeak-table-display-table-in-region	Key Sequence:C-e TAB

 Recognize tabular data in current region and display it in table
browsing mode in a a separate buffer.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command `describe-mode' bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser. 

------------------------------------------------------------

** emacspeak-table-find-csv-file Process a csv (comma separated values) file.
The processed  data and presented using emacspeak table navigation.  

------------------------------------------------------------

** emacspeak-table-find-file	Key Sequence:C-e C-t

 Open a file containing table data and display it in table mode.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The etc/tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command `describe-mode' bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser. 

------------------------------------------------------------

** emacspeak-table-get-entry-with-headers Return   both row and column header and table element 

------------------------------------------------------------

** emacspeak-table-goto Prompt for a table cell coordinates and jump to it. 

------------------------------------------------------------

** emacspeak-table-goto-bottom Goes to the bottom of the current column. 

------------------------------------------------------------

** emacspeak-table-goto-left Goes to the left of the current row. 

------------------------------------------------------------

** emacspeak-table-goto-right Goes to the right of the current row. 

------------------------------------------------------------

** emacspeak-table-goto-top Goes to the top of the current column. 

------------------------------------------------------------

** emacspeak-table-next-column Move to the next column if possible 

------------------------------------------------------------

** emacspeak-table-next-row Move to the next row if possible 

------------------------------------------------------------

** emacspeak-table-paste-from-clipboard Paste the emacspeak table clipboard into the current buffer.
Use the major  mode of this buffer to  decide what kind of table
markup to use. 

------------------------------------------------------------

** emacspeak-table-previous-column Move to the previous column  if possible 

------------------------------------------------------------

** emacspeak-table-previous-row Move to the previous row if possible 

------------------------------------------------------------

** emacspeak-table-search Search the table for matching elements.  Interactively prompts for
row or column to search and pattern to look for.    If there is a match, makes
the matching cell current. When called from a program, `what' can
  be either `row' or `column'. 

------------------------------------------------------------

** emacspeak-table-search-column Search in current table column. 

------------------------------------------------------------

** emacspeak-table-search-headers Search the table row or column headers.  Interactively prompts for
row or column to search and pattern to look for.  If there is a
match, makes the matching row or column current. 

------------------------------------------------------------

** emacspeak-table-search-row Search in current table row. 

------------------------------------------------------------

** emacspeak-table-select-automatic-speaking-method Interactively select the kind of automatic speech to produce when
browsing table elements 

------------------------------------------------------------

** emacspeak-table-sort-on-current-column Sort table on current column.  

------------------------------------------------------------

** emacspeak-table-speak-both-headers-and-element Speak  both row and column header and table element 

------------------------------------------------------------

** emacspeak-table-speak-column-filtered Speaks a table column after applying a specified column filter.
Optional prefix arg prompts for a new filter. 

------------------------------------------------------------

** emacspeak-table-speak-column-header-and-element Speak  column header and table element 

------------------------------------------------------------

** emacspeak-table-speak-coordinates Speak current table coordinates. 

------------------------------------------------------------

** emacspeak-table-speak-current-element Speak current table element 

------------------------------------------------------------

** emacspeak-table-speak-dimensions Speak current table dimensions. 

------------------------------------------------------------

** emacspeak-table-speak-row-filtered Speaks a table row after applying a specified row filter.
Optional prefix arg prompts for a new filter. 

------------------------------------------------------------

** emacspeak-table-speak-row-header-and-element Speak  row header and table element 

------------------------------------------------------------

** emacspeak-table-ui-filter-load Load saved filter settings. 

------------------------------------------------------------

** emacspeak-table-ui-filter-save Save out filter settings. 

------------------------------------------------------------

** emacspeak-table-view-csv-buffer Process a csv (comma separated values) data.
The processed  data and presented using emacspeak table navigation.  

------------------------------------------------------------

** emacspeak-url-template-fetch	Key Sequence:C-e u

 Fetch a pre-defined resource.
Use Emacs completion to obtain a list of available resources.
Resources typically prompt for the relevant information
before completing the request.
Optional interactive prefix arg displays documentation for specified resource. 

------------------------------------------------------------

** emacspeak-url-template-help Display documentation for  a URL template.
Use Emacs completion to obtain a list of available
resources. 

------------------------------------------------------------

** emacspeak-url-template-load Load URL template resources from specified location. 

------------------------------------------------------------

** emacspeak-url-template-save Save out url templates. 

------------------------------------------------------------

** emacspeak-we-class-filter-and-follow Follow url and point, and filter the result by specified class.
Class can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well. 

------------------------------------------------------------

** emacspeak-we-class-filter-and-follow-link Follow url and point, and filter the result by specified class.
Class can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well. 

------------------------------------------------------------

** emacspeak-we-count-matches Count matches for locator  in Web page. 

------------------------------------------------------------

** emacspeak-we-count-nested-tables Count nested tables in Web page. 

------------------------------------------------------------

** emacspeak-we-count-tables Count  tables in Web page. 

------------------------------------------------------------

** emacspeak-we-extract-by-class Extract elements having specified class attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of class values as completion. 

------------------------------------------------------------

** emacspeak-we-extract-by-class-list Extract elements having class specified in list `classes' from HTML.
Extracts specified elements from current WWW page and displays it
in a separate buffer.  Interactive use provides list of class
values as completion.  

------------------------------------------------------------

** emacspeak-we-extract-by-id Extract elements having specified id attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer.
Interactive use provides list of id values as completion. 

------------------------------------------------------------

** emacspeak-we-extract-by-id-list Extract elements having id specified in list `ids' from HTML.
Extracts specified elements from current WWW page and displays it in a
separate buffer. Interactive use provides list of id values as completion.  

------------------------------------------------------------

** emacspeak-we-extract-by-property Interactively prompt for an HTML property, e.g. id or class,
and provide a completion list of applicable  property values. Filter document by property that is specified. 

------------------------------------------------------------

** emacspeak-we-extract-by-role Extract elements having specified role attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of role values as completion. 

------------------------------------------------------------

** emacspeak-we-extract-id-list-text Extract text nodes from elements having id specified in list `ids' from HTML.
Extracts specified elements from current WWW page and displays it in a
separate buffer. Interactive use provides list of id values as completion.  

------------------------------------------------------------

** emacspeak-we-extract-id-text Extract text nodes from elements having specified id attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer.
Interactive use provides list of id values as completion. 

------------------------------------------------------------

** emacspeak-we-extract-matching-urls Extracts links whose URL matches pattern. 

------------------------------------------------------------

** emacspeak-we-extract-media-streams Extract links to media streams.
operate on current web page when in a browser buffer; otherwise
 prompt for url.  Optional arg `speak' specifies if the result
 should be spoken automatically. 

------------------------------------------------------------

** emacspeak-we-extract-media-streams-under-point In browser buffers, extract media streams from url under point. 

------------------------------------------------------------

** emacspeak-we-extract-nested-table Extract nested table specified by `table-index'. Default is to
operate on current web page when in a browser buffer; otherwise
prompt for URL. Optional arg `speak' specifies if the result should be
spoken automatically. 

------------------------------------------------------------

** emacspeak-we-extract-nested-table-list Extract specified list of tables from a Web page. 

------------------------------------------------------------

** emacspeak-we-extract-print-streams Extract links to printable  streams.
operate on current web page when in a browser buffer; otherwise
 prompt for url.  Optional arg `speak' specifies if the result
 should be spoken automatically. 

------------------------------------------------------------

** emacspeak-we-extract-table-by-match Extract table containing  specified match.
 Optional arg url specifies the page to extract content from. 

------------------------------------------------------------

** emacspeak-we-extract-table-by-position Extract table at specified position.
Default is to extract from current page. 

------------------------------------------------------------

** emacspeak-we-extract-tables-by-match-list Extract specified  tables from a WWW page.
Tables are specified by containing  match pattern
 found in the match list. 

------------------------------------------------------------

** emacspeak-we-extract-tables-by-position-list Extract specified list of nested tables from a WWW page.
Tables are specified by their position in the list
 of nested tables found in the page. 

------------------------------------------------------------

** emacspeak-we-follow-and-extract-main Follow URL, then extract role=main. 

------------------------------------------------------------

** emacspeak-we-follow-and-filter-by-id Follow url and point, and filter the result by specified id.
Id can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well. 

------------------------------------------------------------

** emacspeak-we-junk-by-class Extract elements not having specified class attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of class values as completion. 

------------------------------------------------------------

** emacspeak-we-junk-by-class-list Extract elements not having class specified in list `classes' from HTML.
Extracts specified elements from current WWW page and displays it
in a separate buffer.  Interactive use provides list of class
values as completion.  

------------------------------------------------------------

** emacspeak-we-style-filter Extract elements matching specified style
from HTML.  Extracts specified elements from current WWW
page and displays it in a separate buffer.  Optional arg url
specifies the page to extract contents  from. 

------------------------------------------------------------

** emacspeak-we-toggle-xsl-keep-result Toggle xsl keep result flag. 

------------------------------------------------------------

** emacspeak-we-url-expand-and-execute Applies buffer-specific URL expander/executor function. 

------------------------------------------------------------

** emacspeak-we-url-rewrite-and-follow Apply a url rewrite rule as specified in the current buffer
before following link under point.  If no rewrite rule is
defined, first prompt for one.  Rewrite rules are of the
form `(from to)' where from and to are strings.  Typically, the
rewrite rule is automatically set up by Emacspeak tools like
websearch where a rewrite rule is known.  Rewrite rules are
useful in jumping directly to the printer friendly version of an
article for example.  Optional interactive prefix arg prompts for
a rewrite rule even if one is already defined. 

------------------------------------------------------------

** emacspeak-we-xpath-filter-and-follow Follow url and point, and filter the result by specified xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well. 

------------------------------------------------------------

** emacspeak-we-xpath-junk-and-follow Follow url and point, and filter the result by junking
elements specified by xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well. 

------------------------------------------------------------

** emacspeak-we-xsl-toggle Toggle  application of XSL transformations. 

------------------------------------------------------------

** emacspeak-we-xslt-apply Apply specified transformation to current Web page. 

------------------------------------------------------------

** emacspeak-we-xslt-filter Extract elements matching specified XPath path locator
from Web page -- default is the current page being viewed. 

------------------------------------------------------------

** emacspeak-we-xslt-junk Junk elements matching specified locator. 

------------------------------------------------------------

** emacspeak-we-xslt-select Select XSL transformation applied to Web pages before they are displayed . 

------------------------------------------------------------

** emacspeak-webspace-feed-reader Display Feed Reader Feed list in a WebSpace buffer.
Optional interactive prefix arg forces a refresh. 

------------------------------------------------------------

** emacspeak-webspace-filter Open headline at point by following its link property and filter for content. 

------------------------------------------------------------

** emacspeak-webspace-freebase-search Perform a Freebase search and display results. 

------------------------------------------------------------

** emacspeak-webspace-google Display Google Search in a WebSpace buffer. 

------------------------------------------------------------

** emacspeak-webspace-headlines Startup Headlines ticker. 

------------------------------------------------------------

** emacspeak-webspace-headlines-browse	Key Sequence:<C-return>

 Display buffer of browsable headlines. 

------------------------------------------------------------

** emacspeak-webspace-headlines-update Setup news updates.
Updated headlines found in emacspeak-webspace-headlines. 

------------------------------------------------------------

** emacspeak-webspace-mode Major mode for Webspace interaction.


key             binding
---             -------

TAB		forward-button
ESC		Prefix Command
'		emacspeak-speak-rest-of-buffer
.		emacspeak-webspace-filter
/		search-forward
<		beginning-of-buffer
>		end-of-buffer
?		search-backward
b		backward-button
f		forward-button
n		forward-button
p		backward-button
q		bury-buffer
y		emacspeak-webspace-yank-link
<backtab>	backward-button

C-M-i		backward-button



In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `emacspeak-webspace-mode-hook', as the final step
during initialization. 

------------------------------------------------------------

** emacspeak-webspace-open Open headline at point by following its link property. 

------------------------------------------------------------

** emacspeak-webspace-transcode Transcode headline at point by following its link property. 

------------------------------------------------------------

** emacspeak-webspace-weather Speak current weather. 

------------------------------------------------------------

** emacspeak-webspace-weather-update Setup periodic weather updates.
Updated weather is found in `emacspeak-webspace-current-weather'. 

------------------------------------------------------------

** emacspeak-webspace-yank-link Yank link under point into kill ring. 

------------------------------------------------------------

** emacspeak-webutils-google-extract-from-cache Extract current  page from the Google cache.
With a prefix argument, extracts url under point. 

------------------------------------------------------------

** emacspeak-webutils-google-on-this-site Perform a google search restricted to the current WWW site. 

------------------------------------------------------------

** emacspeak-webutils-google-similar-to-this-page Ask Google to find documents similar to this one. 

------------------------------------------------------------

** emacspeak-webutils-google-who-links-to-this-page Perform a google search to locate documents that link to the
current page. 

------------------------------------------------------------

** emacspeak-webutils-jump-to-title-in-content Jumps to the title in web document.
The first time it is called, it jumps to the first
instance  of the title.  Repeated calls jump to further
instances. 

------------------------------------------------------------

** emacspeak-webutils-open-in-other-browser Opens link in alternate browser. 

------------------------------------------------------------

** emacspeak-webutils-play-media-at-point	Key Sequence:C-e M-;

 Play media url under point.
Optional interactive prefix arg `playlist-p' says to treat the link as a playlist.
 A second interactive prefix arg adds mplayer option -allow-dangerous-playlist-parsing 

------------------------------------------------------------

** emacspeak-webutils-transcode-current-url-via-google Transcode current URL via Google.
  Reverse effect with prefix arg. 

------------------------------------------------------------

** emacspeak-webutils-transcode-via-google Transcode URL under point via Google.
 Reverse effect with prefix arg for links on a transcoded page. 

------------------------------------------------------------

** emacspeak-widget-browse-widget-interactively Allows you to browse a widget 

------------------------------------------------------------

** emacspeak-widget-help Speak help for widget under point. 

------------------------------------------------------------

** emacspeak-widget-summarize-parent Summarize parent of widget at point. 

------------------------------------------------------------

** emacspeak-widget-summarize-widget-under-point Summarize a widget if any under point.
Optional interactive prefix specifies how many levels to go up from current
widget before summarizing. 

------------------------------------------------------------

** emacspeak-widget-update-from-minibuffer Sets widget at point by invoking its prompter. 

------------------------------------------------------------

** emacspeak-annotate-add-annotation Add annotation to the annotation working buffer.
Prompt for annotation buffer if not already set.
Interactive prefix arg `reset' prompts for the annotation
buffer even if one is already set.
Annotation is entered in a temporary buffer and the
annotation is inserted into the working buffer when complete. 

------------------------------------------------------------

** emacspeak-clipboard-copy	Key Sequence:C-e C-c

 Copy contents of the region to the emacspeak clipboard.
Previous contents of the clipboard will be overwritten.  The Emacspeak
clipboard is a convenient way of sharing information between
independent Emacspeak sessions running on the same or different
machines.  Do not use this for sharing information within an Emacs
session --Emacs' register commands are far more efficient and
light-weight.  Optional interactive prefix arg results in Emacspeak
prompting for the clipboard file to use.
Argument START and END specifies  region.
Optional argument PROMPT  specifies whether we prompt for the name of a clipboard file. 

------------------------------------------------------------

** emacspeak-clipboard-paste	Key Sequence:C-e C-y

 Yank contents of the Emacspeak clipboard at point.
The Emacspeak clipboard is a convenient way of sharing information between
independent Emacspeak sessions running on the same or different
machines.  Do not use this for sharing information within an Emacs
session --Emacs' register commands are far more efficient and
light-weight.  Optional interactive prefix arg pastes from
the emacspeak table clipboard instead. 

------------------------------------------------------------

** emacspeak-copy-current-file	Key Sequence:C-e M-c

 Copy file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when copying.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Asks for confirmation if the copy will result in an
  existing file being overwritten. 

------------------------------------------------------------

** emacspeak-curl Grab URL using Curl, and preview it with a browser . 

------------------------------------------------------------

** emacspeak-customize	Key Sequence:C-e C

 Customize Emacspeak. 

------------------------------------------------------------

** emacspeak-customize-personal-settings Create a customization buffer for browsing and updating
personal customizations. 

------------------------------------------------------------

** emacspeak-cvs-berlios-get-project-snapshot Grab CVS snapshot  of specified project from berlios.de.
Ask for module name if prefix argument is given 

------------------------------------------------------------

** emacspeak-cvs-get-anonymous Get latest cvs snapshot of emacspeak. 

------------------------------------------------------------

** emacspeak-cvs-gnu-get-project-snapshot Grab CVS snapshot  of specified project from gnu.
Ask for module name if prefix argument is given 

------------------------------------------------------------

** emacspeak-cvs-sf-get-project-snapshot Grab CVS snapshot  of specified project from sf.
Ask for module name if prefix argument is given 

------------------------------------------------------------

** emacspeak-emergency-tts-restart	Key Sequence:C-e <insert>

 For use in an emergency.
Will start TTS engine specified by
emacspeak-emergency-tts-server. 

------------------------------------------------------------

** emacspeak-frame-label-or-switch-to-labelled-frame	Key Sequence:C-e M-f

 Switch to labelled frame.
With optional PREFIX argument, label current frame. 

------------------------------------------------------------

** emacspeak-frame-read-frame-label Read a frame label with completion. 

------------------------------------------------------------

** emacspeak-generate-documentation Generate docs for all emacspeak commands.
Prompts for FILENAME in which to save the documentation.
Warning! Contents of file filename will be overwritten. 

------------------------------------------------------------

** emacspeak-generate-texinfo-command-documentation Generate texinfo documentation  for all emacspeak
commands  into file commands.texi.
Warning! Contents of file commands.texi will be overwritten. 

------------------------------------------------------------

** emacspeak-generate-texinfo-option-documentation Generate texinfo documentation  for all emacspeak
options  into file filename.
Warning! Contents of file filename will be overwritten. 

------------------------------------------------------------

** emacspeak-kill-buffer-quietly Kill current buffer without asking for confirmation. 

------------------------------------------------------------

** emacspeak-learn-emacs-mode	Key Sequence:C-e <f1> C-h C-l <f1> C-l <help> C-l

 Helps you learn the keys.  You can press keys and hear what they do.
To leave, press C-g. 

------------------------------------------------------------

** emacspeak-link-current-file	Key Sequence:C-e M-l

 Link (hard link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists. 

------------------------------------------------------------

** emacspeak-links Launch links on  specified URL in a new terminal. 

------------------------------------------------------------

** emacspeak-lynx Launch lynx on  specified URL in a new terminal. 

------------------------------------------------------------

** emacspeak-next-frame-or-buffer	Key Sequence:<C-right>

 Move to next buffer.
With optional interactive prefix arg `frame', move to next frame instead. 

------------------------------------------------------------

** emacspeak-previous-frame-or-buffer	Key Sequence:<C-left>

 Move to previous buffer.
With optional interactive prefix arg `frame', move to previous frame instead. 

------------------------------------------------------------

** emacspeak-root Start a root shell or switch to one that already exists.
Optional interactive prefix arg `cd' executes cd
default-directory after switching. 

------------------------------------------------------------

** emacspeak-select-this-buffer-next-display	Key Sequence:C-e <C-<right>

 Select this buffer as displayed in a `next' frame.
See documentation for command
`emacspeak-select-this-buffer-other-window-display' for the
meaning of `next'. 

------------------------------------------------------------

** emacspeak-select-this-buffer-other-window-display Switch  to this buffer as displayed in a different frame.  Emacs
allows you to display the same buffer in multiple windows or
frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a
book open at places at once.  This command allows you to
move to the places where you have left the book open.  The
number used to invoke this command specifies which of the
displays you wish to select.  Typically you will have two or
at most three such displays open.  The current display is 0,
the next is 1, and so on.  Optional argument ARG specifies
the display to select. 

------------------------------------------------------------

** emacspeak-select-this-buffer-previous-display	Key Sequence:C-e <C-<left>

 Select this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-select-this-buffer-other-window-display' for the
meaning of `previous'. 

------------------------------------------------------------

** emacspeak-show-personality-at-point	Key Sequence:C-e M-v

 Show value of property personality (and possibly face)
at point. 

------------------------------------------------------------

** emacspeak-show-property-at-point Show value of PROPERTY at point.
If optional arg property is not supplied, read it interactively.
Provides completion based on properties that are of interest.
If no property is set, show a message and exit. 

------------------------------------------------------------

** emacspeak-skip-blank-lines-backward	Key Sequence:<S-up>

 Move backward  across blank lines.
The line under point is   then spoken.
Signals beginning  of buffer. 

------------------------------------------------------------

** emacspeak-skip-blank-lines-forward	Key Sequence:<S-down>

 Move forward across blank lines.
The line under point is then spoken.
Signals end of buffer. 

------------------------------------------------------------

** emacspeak-speak-browse-linux-howto Browse a Linux Howto file.
We cleanup underlining, and set up outline mode correctly. 

------------------------------------------------------------

** emacspeak-speak-popup-messages	Key Sequence:C-h M <f1> M <help> M

 Pop up messages buffer.
If it is already selected then hide it and try to restore
previous window configuration. 

------------------------------------------------------------

** emacspeak-speak-run-shell-command	Key Sequence:C-e !

 Invoke shell COMMAND and display its output as a table. The
results are placed in a buffer in Emacspeak's table browsing
mode. Optional interactive prefix arg read-as-csv interprets the
result as csv. . Use this for running shell commands that produce
tabulated output. This command should be used for shell commands
that produce tabulated output that works with Emacspeak's table
recognizer. Verify this first by running the command in a shell
and executing command `emacspeak-table-display-table-in-region'
normally bound to C-e TAB. 

------------------------------------------------------------

** emacspeak-speak-telephone-directory Lookup and display a phone number.
With prefix arg, opens the phone book for editing. 

------------------------------------------------------------

** emacspeak-speak-this-buffer-next-display	Key Sequence:C-e <right>

 Speak this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-speak-this-buffer-other-window-display' for the
meaning of `next'. 

------------------------------------------------------------

** emacspeak-speak-this-buffer-other-window-display	Key Sequence:C-e /

 Speak this buffer as displayed in a different frame.  Emacs
allows you to display the same buffer in multiple windows or
frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a
book open at places at once.  This command allows you to
listen to the places where you have left the book open.  The
number used to invoke this command specifies which of the
displays you wish to speak.  Typically you will have two or
at most three such displays open.  The current display is 0,
the next is 1, and so on.  Optional argument ARG specifies
the display to speak. 

------------------------------------------------------------

** emacspeak-speak-this-buffer-previous-display	Key Sequence:C-e <left>

 Speak this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-speak-this-buffer-other-window-display' for the
meaning of `previous'. 

------------------------------------------------------------

** emacspeak-ssh-tts-restart	Key Sequence:C-e <delete> C-e <(deletechar>

 Restart specified ssh tts server. 

------------------------------------------------------------

** emacspeak-sudo SUDo command --run command as super user. 

------------------------------------------------------------

** emacspeak-sudo-edit Edit file as Root. 

------------------------------------------------------------

** emacspeak-switch-to-previous-buffer Switch to most recently used interesting buffer.
Obsoleted by `previous-buffer' in Emacs 22 

------------------------------------------------------------

** emacspeak-symlink-current-file	Key Sequence:C-e M-s

 Link (symbolic link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists. 

------------------------------------------------------------

** emacspeak-view-emacspeak-doc Display a summary of all Emacspeak commands. 

------------------------------------------------------------

** emacspeak-view-emacspeak-faq	Key Sequence:C-e F

 Browse the Emacspeak FAQ. 

------------------------------------------------------------

** emacspeak-view-emacspeak-news	Key Sequence:C-e N

 Display info on recent change to Emacspeak. 

------------------------------------------------------------

** emacspeak-view-emacspeak-tips	Key Sequence:C-e T

 Browse  Emacspeak productivity tips. 

------------------------------------------------------------

** emacspeak-wizards-add-autoload-cookies Add autoload cookies to file f.
Default is to add autoload cookies to current file. 

------------------------------------------------------------

** emacspeak-wizards-braille Insert Braille string at point. 

------------------------------------------------------------

** emacspeak-wizards-byte-compile-current-buffer byte compile current buffer 

------------------------------------------------------------

** emacspeak-wizards-cleanup-shell-path Cleans up duplicates in shell path env variable. 

------------------------------------------------------------

** emacspeak-wizards-comma-at-end-of-word Move to the end of current word and add a comma. 

------------------------------------------------------------

** emacspeak-wizards-count-slides-in-region Count slides starting from point. 

------------------------------------------------------------

** emacspeak-wizards-cycle-browser Cycles through available browsers. 

------------------------------------------------------------

** emacspeak-wizards-cycle-to-next-buffer Cycles to next buffer having same mode. 

------------------------------------------------------------

** emacspeak-wizards-display-pod-as-manpage Create a virtual manpage in Emacs from the Perl Online Documentation. 

------------------------------------------------------------

** emacspeak-wizards-dvi-display Called to set up preview of an DVI file.
Assumes we are in a buffer visiting a .DVI file.
Previews those contents as text and nukes the buffer
visiting the DVI file. 

------------------------------------------------------------

** emacspeak-wizards-dvi-mode Major mode for browsing DVI files.


DVI files  are converted to text and previewed using text mode.

This mode runs the hook `emacspeak-wizards-dvi-mode-hook', as the final step
during initialization.

key             binding
---             -------

 

------------------------------------------------------------

** emacspeak-wizards-edit-file-as-root Like `ido-find-file, but automatically edit the file with
root-privileges (using tramp/sudo), if the file is not writable by
user. 

------------------------------------------------------------

** emacspeak-wizards-end-of-word move to end of word 

------------------------------------------------------------

** emacspeak-wizards-enumerate-matching-commands Prompt for a string pattern and return list of commands whose names match pattern. 

------------------------------------------------------------

** emacspeak-wizards-enumerate-matching-faces Enumerate  faces matching pattern. 

------------------------------------------------------------

** emacspeak-wizards-enumerate-obsolete-faces utility function to enumerate old, obsolete maps that we have still  mapped to voices. 

------------------------------------------------------------

** emacspeak-wizards-enumerate-uncovered-commands Enumerate unadvised commands matching pattern. 

------------------------------------------------------------

** emacspeak-wizards-enumerate-unmapped-faces Enumerate unmapped faces matching pattern. 

------------------------------------------------------------

** emacspeak-wizards-espeak-region Speak region using ESpeak polyglot wizard. 

------------------------------------------------------------

** emacspeak-wizards-espeak-string Speak string in lang via ESpeak.
Lang is obtained from property `lang' on string, or  via an interactive prompt. 

------------------------------------------------------------

** emacspeak-wizards-eww-buffer-list Display list of open EWW buffers. 

------------------------------------------------------------

** emacspeak-wizards-find-emacspeak-source Like find-file, but binds default-directory to emacspeak-directory. 

------------------------------------------------------------

** emacspeak-wizards-find-file-as-root Like `ido-find-file, but automatically edit the file with
root-privileges (using tramp/sudo), if the file is not writable by
user. 

------------------------------------------------------------

** emacspeak-wizards-find-grep Run compile using find and grep.
Interactive  arguments specify filename pattern and search pattern. 

------------------------------------------------------------

** emacspeak-wizards-find-longest-line-in-region Find longest line in region.
Moves to the longest line when called interactively. 

------------------------------------------------------------

** emacspeak-wizards-find-longest-paragraph-in-region Find longest paragraph in region.
Moves to the longest paragraph when called interactively. 

------------------------------------------------------------

** emacspeak-wizards-find-shortest-line-in-region Find shortest line in region.
Moves to the shortest line when called interactively. 

------------------------------------------------------------

** emacspeak-wizards-finder-find Run find-dired on specified switches after prompting for the
directory to where find is to be launched. 

------------------------------------------------------------

** emacspeak-wizards-finder-mode Emacspeak Finder



This mode runs the hook `emacspeak-wizards-finder-mode-hook', as the final step
during initialization.

key             binding
---             -------

 

------------------------------------------------------------

** emacspeak-wizards-fix-read-only-text Nuke read-only property on text range. 

------------------------------------------------------------

** emacspeak-wizards-fix-typo Search and replace  recursively in all files with extension `ext'
for `word' and replace it with correction.
Use with caution. 

------------------------------------------------------------

** emacspeak-wizards-generate-finder Generate a widget-enabled finder wizard. 

------------------------------------------------------------

** emacspeak-wizards-generate-voice-sampler Generate a buffer that shows a sample line in all the ACSS settings
for the current voice family. 

------------------------------------------------------------

** emacspeak-wizards-get-table-content-from-file Extract table specified by depth and count from HTML
content at file.
Extracted content is sent to STDOUT. 

------------------------------------------------------------

** emacspeak-wizards-get-table-content-from-url Extract table specified by depth and count from HTML
content at URL.
Extracted content is placed as a csv file in task.csv. 

------------------------------------------------------------

** emacspeak-wizards-google-transcode View Web through Google Transcoder. 

------------------------------------------------------------

** emacspeak-wizards-how-many-matches If you define a file local variable
called `emacspeak-occur-pattern' that holds a regular expression
that matches  lines of interest, you can use this command to conveniently
run `how-many' to count  matching header lines.
With interactive prefix arg, prompts for and remembers the file local pattern. 

------------------------------------------------------------

** emacspeak-wizards-i810-display-status Show display status on thinkpads using i810switch. 

------------------------------------------------------------

** emacspeak-wizards-js Run JS in a comint sub-process. 

------------------------------------------------------------

** emacspeak-wizards-lacheck-buffer-file Run Lacheck on current buffer. 

------------------------------------------------------------

** emacspeak-wizards-load-current-file load file into emacs 

------------------------------------------------------------

** emacspeak-wizards-move-and-speak Speaks a chunk of text bounded by point and a target position.
Target position is specified using a navigation command and a
count that specifies how many times to execute that command
first.  Point is left at the target position.  Interactively,
command is specified by pressing the key that invokes the
command. 

------------------------------------------------------------

** emacspeak-wizards-next-bullet Navigate to and speak next `bullet'. 

------------------------------------------------------------

** emacspeak-wizards-next-interactive-defun Move point to the next interactive defun 

------------------------------------------------------------

** emacspeak-wizards-next-shell Switch to next shell. 

------------------------------------------------------------

** emacspeak-wizards-occur-header-lines If you define a file local variable called
`emacspeak-occur-pattern' that holds a regular expression that
matches header lines, you can use this command to conveniently
run `occur' to find matching header lines. With prefix arg,
prompts for and sets value of the file local pattern. 

------------------------------------------------------------

** emacspeak-wizards-pdf-open Open pdf file as text.
Optional interactive prefix arg ask-pwd prompts for password. 

------------------------------------------------------------

** emacspeak-wizards-popup-input-buffer Provide an input buffer in a specified mode. 

------------------------------------------------------------

** emacspeak-wizards-portfolio-quotes Bring up detailed stock quotes for portfolio specified by
emacspeak-wizards-personal-portfolio. 

------------------------------------------------------------

** emacspeak-wizards-ppp-toggle Bring up or bring down ppp. 

------------------------------------------------------------

** emacspeak-wizards-ppt-display Called to set up preview of an PPT file.
Assumes we are in a buffer visiting a .ppt file.
Previews those contents as HTML and nukes the buffer
visiting the ppt file. 

------------------------------------------------------------

** emacspeak-wizards-ppt-mode Major mode for browsing PPT slides.


PPT files  are converted to HTML and previewed using a browser.

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-wizards-ppt-mode-hook', as the final step
during initialization.

key             binding
---             -------

 

------------------------------------------------------------

** emacspeak-wizards-previous-bullet Navigate to and speak previous `bullet'. 

------------------------------------------------------------

** emacspeak-wizards-previous-shell Switch to previous shell. 

------------------------------------------------------------

** emacspeak-wizards-refresh-shell-history Refresh shell history from disk.
This is for use in conjunction with bash to allow multiple emacs
  shell buffers to   share history information. 

------------------------------------------------------------

** emacspeak-wizards-rivo Rivo wizard.
Prompts for relevant information and schedules a rivo job using
  UNIX At scheduling facility.
RIVO is implemented by rivo.pl ---
 a Perl script  that can be used to launch streaming media and record
   streaming media for  a specified duration. 

------------------------------------------------------------

** emacspeak-wizards-rpm-query-in-dired Run rpm -qi on current dired entry. 

------------------------------------------------------------

** emacspeak-wizards-shell Run Emacs built-in `shell' command when not in a shell buffer, or when called with a prefix argument.
When called from a shell buffer, switches to `next' shell buffer. 

------------------------------------------------------------

** emacspeak-wizards-shell-command-on-current-file	Key Sequence:C-e &

 Prompts for and runs shell command on current file. 

------------------------------------------------------------

** emacspeak-wizards-shell-toggle	Key Sequence:C-e <f11>

 Switch to the shell buffer and cd to
 the directory of the current buffer. 

------------------------------------------------------------

** emacspeak-wizards-show-commentary Display commentary. Default is to display commentary from current buffer. 

------------------------------------------------------------

** emacspeak-wizards-show-environment-variable Display value of specified environment variable. 

------------------------------------------------------------

** emacspeak-wizards-show-eval-result	Key Sequence:M-ESC :

 Convenience command to pretty-print and view Lisp evaluation results. 

------------------------------------------------------------

** emacspeak-wizards-show-face Show salient properties of specified face. 

------------------------------------------------------------

** emacspeak-wizards-show-memory-used Convenience command to view state of memory used in this session so far. 

------------------------------------------------------------

** emacspeak-wizards-speak-iso-datetime Make ISO date-time speech friendly. 

------------------------------------------------------------

** emacspeak-wizards-spot-words Searches recursively in all files with extension `ext'
for `word' and displays hits in a compilation buffer. 

------------------------------------------------------------

** emacspeak-wizards-squeeze-blanks Squeeze multiple blank lines in current buffer. 

------------------------------------------------------------

** emacspeak-wizards-sunrise-sunset Display sunrise/sunset for specified address. 

------------------------------------------------------------

** emacspeak-wizards-switch-shell Switch to next/previous shell buffer.
Direction specifies previous/next. 

------------------------------------------------------------

** emacspeak-wizards-term Switch to an ansi-term buffer or create one.
With prefix arg, always creates a new terminal.
Otherwise cycles through existing terminals, creating the first
term if needed. 

------------------------------------------------------------

** emacspeak-wizards-terminal Launch terminal and rename buffer appropriately. 

------------------------------------------------------------

** emacspeak-wizards-tex-tie-current-word Tie the next n  words. 

------------------------------------------------------------

** emacspeak-wizards-thanks-mail-signature insert thanks , --Raman at the end of mail message 

------------------------------------------------------------

** emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer Toggle pronunciation of mm-dd-yyyy dates. 

------------------------------------------------------------

** emacspeak-wizards-toggle-yyyymmdd-date-pronouncer Toggle pronunciation of yyyymmdd  dates. 

------------------------------------------------------------

** emacspeak-wizards-tpctl-display-status Show display status on thinkpads using tpctl. 

------------------------------------------------------------

** emacspeak-wizards-tramp-open-location Open specified tramp location.
Location is specified by name. 

------------------------------------------------------------

** emacspeak-wizards-tune-in-radio-browse Browse Tune-In Radio. 

------------------------------------------------------------

** emacspeak-wizards-tune-in-radio-search Search Tune-In Radio. 

------------------------------------------------------------

** emacspeak-wizards-unhex-uri UnEscape URI 

------------------------------------------------------------

** emacspeak-wizards-units Run units in a comint sub-process. 

------------------------------------------------------------

** emacspeak-wizards-vc-n Accelerator for VC viewer. 

------------------------------------------------------------

** emacspeak-wizards-vc-viewer View contents of specified virtual console. 

------------------------------------------------------------

** emacspeak-wizards-vc-viewer-mode Major mode for interactively viewing virtual console contents.


key             binding
---             -------

C-l		emacspeak-wizards-vc-viewer-refresh



This mode runs the hook `emacspeak-wizards-vc-viewer-mode-hook', as the final step
during initialization. 

------------------------------------------------------------

** emacspeak-wizards-vc-viewer-refresh Refresh view of VC we're viewing. 

------------------------------------------------------------

** emacspeak-wizards-vi-as-su-file Launch sudo vi on specified file in a terminal. 

------------------------------------------------------------

** emacspeak-wizards-view-buffers-filtered-by-mode Display list of buffers filtered by specified mode. 

------------------------------------------------------------

** emacspeak-wizards-view-buffers-filtered-by-this-mode Buffer menu filtered by  mode of current-buffer. 

------------------------------------------------------------

** emacspeak-wizards-view-url Open a new buffer containing the contents of URL. 

------------------------------------------------------------

** emacspeak-wizards-voice-sampler Read a personality  and apply it to the current line. 

------------------------------------------------------------

** emacspeak-wizards-vpn-toggle Bring up or bring down vpn. 

------------------------------------------------------------

** emacspeak-wizards-xl-display Called to set up preview of an XL file.
Assumes we are in a buffer visiting a .xls file.
Previews those contents as HTML and nukes the buffer
visiting the xls file. 

------------------------------------------------------------

** emacspeak-wizards-xl-mode Major mode for browsing XL spreadsheets.


XL Sheets are converted to HTML and previewed using a browser.

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-wizards-xl-mode-hook', as the final step
during initialization.

key             binding
---             -------

 

------------------------------------------------------------

** emacspeak-xslt-view Browse URL with specified XSL style. 

------------------------------------------------------------

** emacspeak-xslt-view-file Transform `file' using `style' and preview via browse-url. 

------------------------------------------------------------

** emacspeak-xslt-view-region Browse XML region with specified XSL style. 

------------------------------------------------------------

** emacspeak-xslt-view-xml Browse XML URL with specified XSL style. 

------------------------------------------------------------

** emacspeak Starts the Emacspeak speech subsystem.  Use emacs as you
normally would, emacspeak will provide you spoken feedback
as you work.  Emacspeak also provides commands for having
parts of the current buffer, the mode-line etc to be spoken.

If you are hearing this description as a result of pressing
C-h C-e you may want to press
C-e s to stop speech, and then use the arrow keys to
move around in the Help buffer to read the rest of this
description, which includes a summary of all emacspeak
keybindings.

All emacspeak commands use C-e as a
prefix key.  You can also set the state of the TTS engine  by
using C-e d as a prefix.  Here is
a summary of all emacspeak commands along with their
bindings.  You need to precede the keystrokes listed below
with C-e.

Emacspeak also provides a fluent speech extension to the
emacs terminal emulator (eterm).  Note: You need to use the
term package that comes with emacs-19.29 and later.

key             binding
---             -------

C-@		emacspeak-speak-current-mark
C-a		emacspeak-toggle-auditory-icons
C-b		emacspeak-bookshare
C-c		emacspeak-clipboard-copy
C-d		emacspeak-toggle-show-point
C-e		end-of-line
TAB		emacspeak-table-display-table-in-region
C-j		emacspeak-hide-speak-block-sans-prefix
C-l		emacspeak-speak-line-number
RET		emacspeak-speak-continuously
C-n		emacspeak-speak-next-window
C-o		emacspeak-ocr
C-p		emacspeak-speak-previous-window
C-q		emacspeak-toggle-comint-autospeak
C-s		tts-restart
C-t		emacspeak-table-find-file
C-u		emacspeak-feeds-browse
C-v		view-mode
C-w		emacspeak-speak-window-information
C-x		emacspeak-personal-ctlx-keymap
C-y		emacspeak-clipboard-paste
ESC		Prefix Command
SPC		emacspeak-speak-header-line
!		emacspeak-speak-run-shell-command
"		emacspeak-speak-sexp-interactively
#		emacspeak-gridtext
%		emacspeak-speak-current-percentage
&		emacspeak-wizards-shell-command-on-current-file
'		emacspeak-pianobar
(		emacspeak-audio-setup
)		emacspeak-sounds-select-theme
,		emacspeak-speak-browse-buffer
.		emacspeak-speak-current-field
/		emacspeak-speak-this-buffer-other-window-display
0 .. 9		emacspeak-speak-predefined-window
:		emacspeak-m-player-shuffle
;		emacspeak-multimedia
<		emacspeak-speak-previous-field
=		emacspeak-speak-current-column
>		emacspeak-speak-next-field
?		emacspeak-websearch-dispatch
@		emacspeak-speak-message-at-time
A		emacspeak-appt-repeat-announcement
B		emacspeak-speak-buffer-interactively
C		emacspeak-customize
F		emacspeak-view-emacspeak-faq
I		emacspeak-speak-show-active-network-interfaces
L		emacspeak-speak-line-interactively
M		emacspeak-speak-minor-mode-line
N		emacspeak-view-emacspeak-news
P		emacspeak-speak-paragraph-interactively
R		emacspeak-speak-rectangle
T		emacspeak-view-emacspeak-tips
U		emacspeak-websearch-usenet
V		emacspeak-speak-version
W		emacspeak-tapestry-select-window-by-name
[		emacspeak-speak-page
\		emacspeak-toggle-speak-line-invert-filter
]		emacspeak-speak-page-interactively
^		emacspeak-filtertext
a		emacspeak-speak-message-again
b		emacspeak-speak-buffer
c		emacspeak-speak-char
d		emacspeak-dtk-submap-command
e		end-of-line
f		emacspeak-speak-buffer-filename
g		emacspeak-epub
h		emacspeak-speak-help
i		emacspeak-tabulate-region
j		emacspeak-hide-or-expose-block
k		emacspeak-speak-current-kill
l		emacspeak-speak-line
m		emacspeak-speak-mode-line
n		emacspeak-speak-rest-of-buffer
o		emacspeak-toggle-comint-output-monitor
p		emacspeak-speak-paragraph
q		emacspeak-toggle-speak-messages
r		emacspeak-speak-region
s		dtk-stop
t		emacspeak-speak-time
u		emacspeak-url-template-fetch
v		view-register
w		emacspeak-speak-word
x		emacspeak-personal-keymap
{		emacspeak-speak-paragraph
|		emacspeak-speak-line-set-column-filter
DEL		cd-tool
<(deletechar>	emacspeak-ssh-tts-restart
<C-<left>	emacspeak-select-this-buffer-previous-display
<C-<right>	emacspeak-select-this-buffer-next-display
<delete>	emacspeak-ssh-tts-restart
<down>		emacspeak-read-next-line
<f1>		emacspeak-learn-emacs-mode
<f11>		emacspeak-wizards-shell-toggle
<insert>	emacspeak-emergency-tts-restart
<left>		emacspeak-speak-this-buffer-previous-display
<right>		emacspeak-speak-this-buffer-next-display
<up>		emacspeak-read-previous-line

C-M-@		emacspeak-speak-spaces-at-point
C-M-b		emacspeak-submit-bug
C-M-k		kill-emacs
M-%		emacspeak-goto-percent
M-;		emacspeak-webutils-play-media-at-point
M-a		emacspeak-set-auditory-icon-player
M-b		emacspeak-speak-other-buffer
M-c		emacspeak-copy-current-file
M-d		emacspeak-pronounce-dispatch
M-f		emacspeak-frame-label-or-switch-to-labelled-frame
M-h		emacspeak-speak-hostname
M-l		emacspeak-link-current-file
M-m		emacspeak-toggle-mail-alert
M-q		voice-setup-toggle-silence-personality
M-r		emacspeak-remote-connect-to-server
M-s		emacspeak-symlink-current-file
M-t		emacspeak-tapestry-describe-tapestry
M-u		emacspeak-feeds-add-feed
M-v		emacspeak-show-personality-at-point
M-w		emacspeak-toggle-which-function

d C-d		dectalk
d C-e		espeak
d RET		dtk-set-chunk-separator-syntax
d C-o		outloud
d C-v		outloud-32
d ESC		Prefix Command
d SPC		dtk-toggle-splitting-on-white-space
d ,		dtk-toggle-punctuation-mode
d 0 .. d 9	dtk-set-predefined-speech-rate
d A		dtk-async-server
d C		dtk-toggle-allcaps-beep
d L		dtk-local-server
d N		dtk-set-next-language
d P		dtk-set-previous-language
d R		dtk-reset-state
d S		dtk-set-language
d V		tts-speak-version
d a		dtk-add-cleanup-pattern
d b		dtk-toggle-debug
d c		dtk-toggle-capitalization
d d		dtk-select-server
d f		dtk-set-character-scale
d i		emacspeak-toggle-audio-indentation
d k		emacspeak-toggle-character-echo
d l		emacspeak-toggle-line-echo
d m		emacspeak-speak-set-mode-punctuations
d n		dtk-toggle-speak-nonprinting-chars
d o		dtk-toggle-strip-octals
d p		dtk-set-punctuations
d q		dtk-toggle-quiet
d r		dtk-set-rate
d s		dtk-toggle-split-caps
d t		emacspeak-dial-dtk
d v		voice-lock-mode
d w		emacspeak-toggle-word-echo
d z		emacspeak-zap-tts

d C-M-b		tts-show-debug-buffer



See the online documentation for individual commands and
functions for details.    

------------------------------------------------------------

** emacspeak-describe-emacspeak	Key Sequence:C-h C-e <f1> C-e <help> C-e

 Give a brief overview of emacspeak. 

------------------------------------------------------------

** emacspeak-submit-bug	Key Sequence:C-e C-M-b

 Function to submit a bug to the programs maintainer. 

------------------------------------------------------------

** tts-eflite Use eflite TTS server. 

------------------------------------------------------------

** voice-setup-list-voices Show all defined voice-face mappings  in a help buffer.
Sample text to use comes from variable
  `voice-setup-sample-text'.  

------------------------------------------------------------

** voice-setup-toggle-silence-personality	Key Sequence:C-e M-q

 Toggle audibility of personality under point  .
If personality at point is currently audible, its
face->personality map is cached in a buffer local variable, and
its face->personality map is replaced by face->inaudible.  If
personality at point is inaudible, and there is a cached value,
then the original face->personality mapping is restored.  In
either case, the buffer is refontified to have the new mapping
take effect. 

------------------------------------------------------------

** cd-tool	Key Sequence:C-e DEL

 Front-end to CDTool.
Bind this function to a convenient key-
Emacspeak users automatically have
this bound to <DEL> in the emacspeak keymap.

Key     Action
---     ------

+       Next Track
-       Previous Track
SPC     Pause or Resume
e       Eject
=       Shuffle
i       CD Info
p       Play
s       Stop
t       track
c       clip
cap C   Save clip to disk

(fn) 

------------------------------------------------------------

** emacspeak-appt-repeat-announcement	Key Sequence:C-e A

 Speaks the most recently displayed appointment message if any.

(fn) 

------------------------------------------------------------

** emacspeak-aumix-reset Reset to default audio settings.

(fn) 

------------------------------------------------------------

** emacspeak-aumix-volume-decrease Decrease overall volume. 

(fn &optional GAIN) 

------------------------------------------------------------

** emacspeak-aumix-volume-increase Increase overall volume. 

(fn &optional GAIN) 

------------------------------------------------------------

** emacspeak-aumix-wave-decrease Decrease volume of wave output. 

(fn &optional GAIN) 

------------------------------------------------------------

** emacspeak-aumix-wave-increase Increase volume of wave output. 

(fn &optional GAIN) 

------------------------------------------------------------

** emacspeak-bbc Launch BBC Interaction.
See http://www.bbc.co.uk/radio/stations for full list of stations.
See http://www.bbc.co.uk/radio/programmes/genres for list of genres.
Interactive prefix arg filters  content by genre.

(fn &optional GENRE) 

------------------------------------------------------------

** emacspeak-bbc-genre Launch BBC Interaction for specified Genre.

(fn) 

------------------------------------------------------------

** emacspeak-bookshare	Key Sequence:C-e C-b

 Bookshare  Interaction.

(fn) 

------------------------------------------------------------

** emacspeak-bookshare-eww Render complete book using EWW if available.

(fn DIRECTORY) 

------------------------------------------------------------

** emacspeak-calendar-setup-sunrise-sunset Set up geo-coordinates using Google Maps reverse geocoding.
To use, configure variable gweb-my-address via M-x customize-variable.

(fn) 

------------------------------------------------------------

** emacspeak-epub	Key Sequence:C-e g

 EPub  Interaction.
For detailed documentation, see M-x emacspeak-epub-mode

(fn) 

------------------------------------------------------------

** emacspeak-epub-bookshelf-refresh Refresh and redraw bookshelf.

(fn) 

------------------------------------------------------------

** emacspeak-epub-bookshelf-save Save bookshelf metadata.

(fn) 

------------------------------------------------------------

** emacspeak-epub-google Search for Epubs from Gooble Books.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-epub-gutenberg-download Download specified EBook to local cache

(fn BOOK-ID) 

------------------------------------------------------------

** emacspeak-epub-open Open specified Epub.
Filename may need to  be shell-quoted when called from Lisp.

(fn EPUB-FILE) 

------------------------------------------------------------

** emacspeak-filtertext	Key Sequence:C-e ^

 Copy over text in region to special filtertext buffer in
preparation for interactively filtering text. 

(fn START END) 

------------------------------------------------------------

** emacspeak-filtertext-revert Revert to original text.

(fn) 

------------------------------------------------------------

** emacspeak-forms-find-file Visit a forms file

(fn FILENAME) 

------------------------------------------------------------

** emacspeak-forms-speak-field Speak current form field name and value.
Assumes that point is at the front of a field value.

(fn) 

------------------------------------------------------------

** emacspeak-gridtext-apply Apply grid to region.

(fn START END GRID) 

------------------------------------------------------------

** emacspeak-gridtext-load Load saved grid settings.

(fn FILE) 

------------------------------------------------------------

** emacspeak-gridtext-save Save out grid settings.

(fn FILE) 

------------------------------------------------------------

** emacspeak-hide-or-expose-all-blocks Hide or expose all blocks in buffer.

(fn) 

------------------------------------------------------------

** emacspeak-hide-or-expose-block	Key Sequence:C-e j

 Hide or expose a block of text.
This command either hides or exposes a block of text
starting on the current line.  A block of text is defined as
a portion of the buffer in which all lines start with a
common PREFIX.  Optional interactive prefix arg causes all
blocks in current buffer to be hidden or exposed.

(fn &optional PREFIX) 

------------------------------------------------------------

** emacspeak-hide-speak-block-sans-prefix	Key Sequence:C-e C-j

 Speaks current block after stripping its prefix.
If the current block is not hidden, it first hides it.
This is useful because as you locate blocks, you can invoke this
command to listen to the block,
and when you have heard enough navigate easily  to move past the block.

(fn) 

------------------------------------------------------------

** emacspeak-imenu-goto-next-index-position Goto the next index position in current buffer

(fn) 

------------------------------------------------------------

** emacspeak-imenu-goto-previous-index-position Goto the previous index position in current buffer

(fn) 

------------------------------------------------------------

** emacspeak-info-wizard	Key Sequence:C-h TAB <f1> TAB <help> TAB

 Read a node spec from the minibuffer and launch
Info-goto-node.
See documentation for command `Info-goto-node' for details on
node-spec.

(fn NODE-SPEC) 

------------------------------------------------------------

** emacspeak-librivox Librivox Library Of Free Audio Books.

(fn) 

------------------------------------------------------------

** emacspeak-librivox-open-rss Open RSS  link for current Librivox book.

(fn) 

------------------------------------------------------------

** emacspeak-librivox-open-url Open Librivox URL  for current Librivox book.

(fn) 

------------------------------------------------------------

** emacspeak-librivox-play Play current book as a playlist.

(fn) 

------------------------------------------------------------

** emacspeak-librivox-search-author Search in catalog for Author 1.

(fn PATTERN) 

------------------------------------------------------------

** emacspeak-librivox-search-genre Search in catalog for genre.

(fn PATTERN) 

------------------------------------------------------------

** emacspeak-librivox-search-title Search in catalog for title.

(fn PATTERN) 

------------------------------------------------------------

** emacspeak-m-player Play specified resource using m-player.  Optional prefix argument
play-list interprets resource as a play-list.  Second interactive
prefix arg adds option -allow-dangerous-playlist-parsing to mplayer.
Resource is a media resource or playlist containing media resources.
The player is placed in a buffer in emacspeak-m-player-mode.

(fn RESOURCE &optional PLAY-LIST) 

------------------------------------------------------------

** emacspeak-m-player-amark-add Set AMark `name' at current position in current audio stream.
Interactive prefix arg prompts for position.
As the default, use current position.

(fn NAME &optional PROMPT-POSITION) 

------------------------------------------------------------

** emacspeak-m-player-amark-jump Jump to specified AMark.

(fn) 

------------------------------------------------------------

** emacspeak-m-player-balance Set left/right balance.

(fn) 

------------------------------------------------------------

** emacspeak-m-player-bind-accelerator Binds key to invoke m-player  on specified directory.

(fn DIRECTORY KEY) 

------------------------------------------------------------

** emacspeak-m-player-display-percent Display current percentage.

(fn) 

------------------------------------------------------------

** emacspeak-m-player-get-length Display length of track in seconds.

(fn) 

------------------------------------------------------------

** emacspeak-m-player-load Load specified resource into a running  m-player.
Interactive prefix arg appends the new resource to what is playing.

(fn RESOURCE &optional APPEND) 

------------------------------------------------------------

** emacspeak-m-player-shuffle	Key Sequence:C-e :

 Launch M-Player with shuffle turned on.

(fn) 

------------------------------------------------------------

** emacspeak-m-player-slave-command Dispatch slave command read from minibuffer.

(fn COMMAND) 

------------------------------------------------------------

** emacspeak-m-player-url Call emacspeak-m-player with specified URL.

(fn URL) 

------------------------------------------------------------

** emacspeak-m-player-volume-change Change volume to specified absolute value.

(fn VALUE) 

------------------------------------------------------------

** emacspeak-m-player-volume-down Decrease volume.

(fn) 

------------------------------------------------------------

** emacspeak-m-player-volume-up Increase volume.

(fn) 

------------------------------------------------------------

** emacspeak-m-player-youtube-player Use youtube-dl and mplayer to stream YouTube content.

(fn URL) 

------------------------------------------------------------

** emacspeak-madplay Play specified resource using madplay.
Resource is an  MP3 file or directory containing mp3 files.
The player is placed in a buffer in emacspeak-madplay-mode.

(fn RESOURCE) 

------------------------------------------------------------

** emacspeak-madplay-madplay-call-command Call appropriate madplay command.

(fn) 

------------------------------------------------------------

** emacspeak-madplay-madplay-command Execute Madplay command.

(fn CHAR) 

------------------------------------------------------------

** emacspeak-multimedia	Key Sequence:C-e ;

 Start or control Emacspeak multimedia player.

(fn) 

------------------------------------------------------------

** emacspeak-npr-listing Display specified listing.

(fn) 

------------------------------------------------------------

** emacspeak-npr-view View results as Atom.

(fn OPERATION OPERAND) 

------------------------------------------------------------

** emacspeak-ocr	Key Sequence:C-e C-o

 An OCR front-end for the Emacspeak desktop.  

Page image is acquired using tools from the SANE package.
The acquired image is run through the OCR engine if one is
available, and the results placed in a buffer that is
suitable for browsing the results.

For detailed help, invoke command emacspeak-ocr bound to
C-e C-o to launch emacspeak-ocr-mode, and press
`?' to display mode-specific help for emacspeak-ocr-mode.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-backward-page Like backward page, but tracks page number of current document.

(fn &optional COUNT-IGNORED) 

------------------------------------------------------------

** emacspeak-ocr-customize Customize OCR settings.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-forward-page Like forward page, but tracks page number of current document.

(fn &optional COUNT-IGNORED) 

------------------------------------------------------------

** emacspeak-ocr-name-document Name document being scanned in the current OCR buffer.
Pick a short but meaningful name.

(fn NAME) 

------------------------------------------------------------

** emacspeak-ocr-open-working-directory Launch dired on OCR working directory.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-page Move to specified page.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-read-current-page Speaks current page.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-recognize-image Run OCR engine on current image.
Prompts for image file if file corresponding to the expected
`current page' is not found.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-save-current-page Writes out recognized text from current page
to an appropriately named file.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-scan-and-recognize Scan in a page and run OCR engine on it.
Use this command once you've verified that the separate
steps of acquiring an image and running the OCR engine work
correctly by themselves.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-scan-image Acquire page image.

(fn) 

------------------------------------------------------------

** emacspeak-ocr-scan-photo Scan in a photograph.
The scanned image is converted to JPEG.

(fn &optional METADATA) 

------------------------------------------------------------

** emacspeak-ocr-set-compress-image-options Interactively update  image compression options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.

(fn SETTING) 

------------------------------------------------------------

** emacspeak-ocr-set-scan-image-options Interactively update scan image options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.

(fn SETTING) 

------------------------------------------------------------

** emacspeak-ocr-write-document Writes out recognized text from all pages in current document.

(fn) 

------------------------------------------------------------

** emacspeak-org-bookmark Bookmark from org.

(fn &optional GOTO) 

------------------------------------------------------------

** emacspeak-org-popup-input Pops up an org input area.

(fn) 

------------------------------------------------------------

** emacspeak-org-table-speak-current-element echoes current table element

(fn) 

------------------------------------------------------------

** emacspeak-pianobar	Key Sequence:C-e '

 Start or control Emacspeak Pianobar player.

(fn) 

------------------------------------------------------------

** emacspeak-pianobar-electric-mode-toggle Toggle electric mode in pianobar buffer.
If electric mode is on, keystrokes invoke pianobar commands directly.

(fn) 

------------------------------------------------------------

** emacspeak-remote-connect-to-server	Key Sequence:C-e M-r

 Connect to and start using remote speech server running on
host host and listening on port port. Host is the hostname of the
remote server, typically the desktop machine. Port is the tcp
port that that host is listening on for speech requests.

(fn HOST PORT) 

------------------------------------------------------------

** emacspeak-remote-edit-current-remote-hostname Interactively set up where we came from.
Value is persisted for use with ssh servers.

(fn) 

------------------------------------------------------------

** emacspeak-remote-home Open ssh session to where we came from.
Uses value returned by `emacspeak-remote-get-current-remote-hostname'.

(fn) 

------------------------------------------------------------

** emacspeak-remote-quick-connect-to-server Connect to remote server.
Does not prompt for host or port, but quietly uses the guesses
that appear as defaults when prompting. Use this once you are
sure the guesses are usually correct.

(fn) 

------------------------------------------------------------

** emacspeak-remote-quick-connect-via-ssh Connect via ssh to remote Emacspeak server.
Server is specified via custom option `emacspeak-remote-default-ssh-server'.

(fn) 

------------------------------------------------------------

** emacspeak-remote-ssh-to-server Open ssh session to where we came from.

(fn LOGIN HOST PORT) 

------------------------------------------------------------

** emacspeak-tabulate-region	Key Sequence:C-e i

 Voicifies the white-space of a table if one found.  Optional interactive prefix
arg mark-fields specifies if the header row information is used to mark fields
in the white-space.

(fn START END &optional MARK-FIELDS) 

------------------------------------------------------------

** emacspeak-tapestry-describe-tapestry	Key Sequence:C-e M-t

 Describe the current layout of visible buffers in current frame.
Use interactive prefix arg to get coordinate positions of the
displayed buffers.

(fn &optional DETAILS) 

------------------------------------------------------------

** emacspeak-tapestry-select-window-by-name	Key Sequence:C-e W

 Select window by the name of the buffer it displays.
This is useful when using modes like ECB or the new GDB UI where
  you want to preserve the window layout 
but quickly switch to a window by name.

(fn BUFFER-NAME) 

------------------------------------------------------------

** emacspeak-w3-curl-url-under-point Display contents of URL under point using Curl and W3.  The
document is displayed in a separate buffer. 

(fn) 

------------------------------------------------------------

** emacspeak-w3m-preview-this-buffer Preview this buffer in w3m.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-accessible-google Use Google Lite (Experimental).
Optional prefix arg prompts for toolbelt options.

(fn QUERY &optional OPTIONS) 

------------------------------------------------------------

** emacspeak-websearch-amazon-search Amazon search.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-ask-jeeves Ask Jeeves for the answer.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-biblio-search Search Computer Science Bibliographies.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-blinkx-search BlinkX RSS Generator.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-citeseer-search Perform a CiteSeer search. 

(fn TERM) 

------------------------------------------------------------

** emacspeak-websearch-company-news Perform an company news lookup.
Retrieves company news, research, profile, insider trades,  or upgrades/downgrades.

(fn TICKER &optional PREFIX) 

------------------------------------------------------------

** emacspeak-websearch-cpan-search Search CPAN  Comprehensive Perl Archive Network   Site. 

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-ctan-search Search CTAN Comprehensive TeX Archive Network   Site. 

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-dispatch	Key Sequence:C-e ?

  Press `?' to list available search engines.
When using supported browsers,  this interface attempts to speak the most relevant information on the result page.

(fn &optional PREFIX) 

------------------------------------------------------------

** emacspeak-websearch-ebay-search Ebay search.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-exchange-rate-convertor Currency convertor.

(fn CONVERSION-SPEC) 

------------------------------------------------------------

** emacspeak-websearch-foldoc-search Perform a FolDoc search. 

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-freshmeat-search Search Freshmeat  Site. 

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-google Perform a Google search.
First optional interactive prefix arg `flag' prompts for
additional search options. Second interactive prefix arg is
equivalent to hitting the I'm Feeling Lucky button on
Google. Uses customizable option
`emacspeak-websearch-google-results-only' to determine if we show
just results.

(fn QUERY &optional FLAG) 

------------------------------------------------------------

** emacspeak-websearch-google-advanced Present Google advanced search form simplified for speech interaction.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-google-feeling-lucky Do a I'm Feeling Lucky Google search.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-google-mobile Google mobile search.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-google-news Invoke Google News url template.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-google-sak Perform a Google query against a specific index.

(fn ENGINE QUERY) 

------------------------------------------------------------

** emacspeak-websearch-google-search-in-date-range Use this from inside the calendar to do Google date-range searches.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-google-specialize Perform a specialized Google search. See the Google site for
  what is possible here:
https://www.google.com/options/specialsearches.html 

(fn SPECIALIZE QUERY) 

------------------------------------------------------------

** emacspeak-websearch-google-usenet-advanced Present Google Usenet advanced search form simplified for speech interaction.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-google-with-toolbelt Launch Google search with toolbelt.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-gutenberg Perform an Gutenberg search

(fn TYPE QUERY) 

------------------------------------------------------------

** emacspeak-websearch-help Displays key mapping used by Emacspeak Websearch.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-map-yahoo-directions-search Get driving directions from Yahoo.
With optional interactive prefix arg MAP shows the location map instead.

(fn QUERY &optional MAP) 

------------------------------------------------------------

** emacspeak-websearch-merriam-webster-search Search the Merriam Webster Dictionary.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-news-yahoo Perform an Yahoo News search.
Optional prefix arg no-rss scrapes information from HTML.

(fn QUERY &optional NO-RSS) 

------------------------------------------------------------

** emacspeak-websearch-open-directory-search Perform an Open Directory search

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-quotes-yahoo-search Perform a Quotes Yahoo .
Default tickers to look up is taken from variable
emacspeak-wizards-personal-portfolio.
Default is to present the data in emacspeak's table browsing
mode --optional interactive prefix arg
causes data to be displayed as  a Web page.
You can customize the defaults by setting variable
emacspeak-websearch-quotes-yahoo-options to an appropriate string.

(fn QUERY &optional PREFIX) 

------------------------------------------------------------

** emacspeak-websearch-recorded-books-search Present advanced search form for recorded books.

(fn) 

------------------------------------------------------------

** emacspeak-websearch-rpm-find Search RPM  catalog  site.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-software-search Search SourceForge, Freshmeat and other sites. 

(fn) 

------------------------------------------------------------

** emacspeak-websearch-sourceforge-search Search SourceForge Site. 

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-swik-search Search swik software community site.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-usenet	Key Sequence:C-e U

 Prompt and browse a Usenet newsgroup.
Optional interactive prefix arg results in prompting for a search term.

(fn GROUP &optional PREFIX) 

------------------------------------------------------------

** emacspeak-websearch-usenet-search Search a Usenet newsgroup.

(fn GROUP) 

------------------------------------------------------------

** emacspeak-websearch-w3c-search Search the W3C Site.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-weather Get weather forecast for specified zip code.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-wikipedia-search Search Wikipedia using Google.

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-yahoo Perform an Yahoo  search

(fn QUERY) 

------------------------------------------------------------

** emacspeak-websearch-yahoo-exchange-rate-convertor Currency convertor.

(fn CONVERSION-SPEC) 

------------------------------------------------------------

** emacspeak-websearch-yahoo-historical-chart Look up historical stock data.
Optional second arg as-html processes the results as HTML rather than data.

(fn TICKER &optional AS-HTML) 

------------------------------------------------------------

** emacspeak-xml-shell Start Xml-Shell on contents of system-id.

(fn SYSTEM-ID) 

  

Local variables:
 mode: outline
paragraph-separate: "[ ]*$"
end:

