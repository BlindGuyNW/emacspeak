@node Emacspeak Commands And Options 

@chapter Emacspeak Commands And Options 

This chapter documents a total of 1055 commands and 880 options.

@menu
* acss-structure::
* amixer::
* cd-tool::
* congrats::
* dectalk-voices::
* dom::
* dtk-interp::
* dtk-speak::
* dtk-unicode::
* emacspeak::
* emacspeak-2048::
* emacspeak-actions::
* emacspeak-add-log::
* emacspeak-advice::
* emacspeak-alsaplayer::
* emacspeak-amark::
* emacspeak-analog::
* emacspeak-ansi-color::
* emacspeak-apt-sources::
* emacspeak-apt-utils::
* emacspeak-arc::
* emacspeak-auctex::
* emacspeak-aumix::
* emacspeak-bbc::
* emacspeak-bbdb::
* emacspeak-bibtex::
* emacspeak-bookmark::
* emacspeak-bookshare::
* emacspeak-browse-kill-ring::
* emacspeak-bs::
* emacspeak-buff-menu::
* emacspeak-c::
* emacspeak-calc::
* emacspeak-calculator::
* emacspeak-calendar::
* emacspeak-cedet::
* emacspeak-checkdoc::
* emacspeak-cmuscheme::
* emacspeak-company::
* emacspeak-compile::
* emacspeak-cperl::
* emacspeak-custom::
* emacspeak-dbus::
* emacspeak-desktop::
* emacspeak-dictionary::
* emacspeak-diff-mode::
* emacspeak-dired::
* emacspeak-dismal::
* emacspeak-dmacro::
* emacspeak-ecb::
* emacspeak-eclim::
* emacspeak-ediary::
* emacspeak-ediff::
* emacspeak-ein::
* emacspeak-elfeed::
* emacspeak-emms::
* emacspeak-enriched::
* emacspeak-entertain::
* emacspeak-eperiodic::
* emacspeak-epub::
* emacspeak-erc::
* emacspeak-eshell::
* emacspeak-espn::
* emacspeak-ess::
* emacspeak-etable::
* emacspeak-eterm::
* emacspeak-eudc::
* emacspeak-eww::
* emacspeak-facemenu::
* emacspeak-feeds::
* emacspeak-filtertext::
* emacspeak-find-dired::
* emacspeak-find-func::
* emacspeak-finder::
* emacspeak-fix-interactive::
* emacspeak-flycheck::
* emacspeak-flyspell::
* emacspeak-folding::
* emacspeak-forms::
* emacspeak-ftf::
* emacspeak-generic::
* emacspeak-gnuplot::
* emacspeak-gnus::
* emacspeak-go-mode::
* emacspeak-gomoku::
* emacspeak-google::
* emacspeak-gridtext::
* emacspeak-gtags::
* emacspeak-gud::
* emacspeak-hide::
* emacspeak-hideshow::
* emacspeak-ibuffer::
* emacspeak-ido::
* emacspeak-imenu::
* emacspeak-info::
* emacspeak-ispell::
* emacspeak-jabber::
* emacspeak-jde::
* emacspeak-js2::
* emacspeak-jss::
* emacspeak-keymap::
* emacspeak-kite::
* emacspeak-kmacro::
* emacspeak-librivox::
* emacspeak-m-player::
* emacspeak-magit::
* emacspeak-make-mode::
* emacspeak-man::
* emacspeak-markdown::
* emacspeak-message::
* emacspeak-metapost::
* emacspeak-midge::
* emacspeak-mpg123::
* emacspeak-mspools::
* emacspeak-muse::
* emacspeak-net-utils::
* emacspeak-newsticker::
* emacspeak-npr::
* emacspeak-nxml::
* emacspeak-ocr::
* emacspeak-org::
* emacspeak-outline::
* emacspeak-package::
* emacspeak-perl::
* emacspeak-personality::
* emacspeak-php-mode::
* emacspeak-pianobar::
* emacspeak-proced::
* emacspeak-pronounce::
* emacspeak-py::
* emacspeak-python::
* emacspeak-re-builder::
* emacspeak-redefine::
* emacspeak-reftex::
* emacspeak-remote::
* emacspeak-replace::
* emacspeak-rmail::
* emacspeak-rpm::
* emacspeak-rpm-spec::
* emacspeak-ruby::
* emacspeak-sawfish::
* emacspeak-ses::
* emacspeak-setup::
* emacspeak-sgml-mode::
* emacspeak-sh-script::
* emacspeak-sigbegone::
* emacspeak-solitaire::
* emacspeak-sounds::
* emacspeak-speak::
* emacspeak-speedbar::
* emacspeak-sql::
* emacspeak-sudoku::
* emacspeak-supercite::
* emacspeak-table::
* emacspeak-table-ui::
* emacspeak-tabulate::
* emacspeak-tapestry::
* emacspeak-tar::
* emacspeak-tcl::
* emacspeak-tdtd::
* emacspeak-tempo::
* emacspeak-tetris::
* emacspeak-texinfo::
* emacspeak-todo-mode::
* emacspeak-twittering::
* emacspeak-url-template::
* emacspeak-view::
* emacspeak-vm::
* emacspeak-w3::
* emacspeak-w3m::
* emacspeak-wdired::
* emacspeak-we::
* emacspeak-websearch::
* emacspeak-webspace::
* emacspeak-webutils::
* emacspeak-widget::
* emacspeak-windmove::
* emacspeak-winring::
* emacspeak-wizards::
* emacspeak-woman::
* emacspeak-xkcd::
* emacspeak-xml-shell::
* emacspeak-xref::
* emacspeak-xslt::
* espeak-voices::
* g::
* g-app::
* g-auth::
* g-utils::
* gblogger::
* gf::
* gfeeds::
* gm-nnir::
* gmaps::
* gphoto::
* gweb::
* mac-voices::
* multispeech-voices::
* outloud-voices::
* plain-voices::
* sox::
* stack-f::
* tetris::
* toy-braille::
* voice-setup::
* URL Templates ::
@end menu

@node acss-structure
@section acss-structure

The CSS Speech Style Sheet specification defines a number of
abstract device independent voice properties.
A setting conforming to the CSS speech specification can be
represented in elisp as a structure.

We will refer to this structure as a "speech style".
This structure needs to be mapped to device dependent codes to
produce the desired effect.
This module forms a bridge between User Agents e.g. Emacs-w3 that
wish to implement a speech style sheet
and Emacspeak's dectalk-voices module.
Emacspeak produces voice change effects by examining the value of
text-property 'personality.

Think of a buffer of formatted text along with the text-property
'personality appropriately set as a "aural display list".
Applications like W3 that produce such formatted buffers  call function
acss-personality-from-speech-style  with a  "speech-style"
--a structure as defined in this module and get back a symbol that
they then assign to the value of property 'personality.
Emacspeak's rendering engine then does the needful at the time
speech is produced.
Function acss-personality-from-speech-style does the following:
Takes as input a "speech style"
(1)  Computes a symbol that will be used henceforth to refer to this
specific speech style.
(2) Examines emacspeak's internal voice table to see if this
speech style has a voice already defined.
If so it returns immediately.
Otherwise, it does the additional work of defining a dectalk-voice for
future use.
See module dectalk-voices.el to see how voices are defined.

@node amixer
@section amixer

Provide an emacs front-end to amixer.
amixer is part of ALSA

@subsection amixer Commands

@deffn {Interactive Command} amixer  (&optional refresh)
Interactively manipulate ALSA settings.
Interactive prefix arg refreshes cache.
@end deffn

@subsection amixer Options

@defvar {User Option} amixer-card
Card number to control.

@end defvar

@node cd-tool
@section cd-tool

Provide an emacs front-end to cdtool.
cdtool can be obtained as an rpm
check using rpmfind
or from its home site at
  sunsite.unc.edu /pub/Linux/apps/sound/cdrom/cli
This module also provides the ability to play or save
clips from a CD if you have cdda2wav installed.
cdda2wav is a cd to wav converter.

@subsection cd-tool Commands

@deffn {Interactive Command} cd-tool  nil
@kbd{C-e DEL}

Front-end to CDTool.
Bind this function to a convenient key-
Emacspeak users automatically have
this bound to <DEL> in the emacspeak keymap.

Key     Action
---     ------

+       Next Track
-       Previous Track
SPC     Pause or Resume
e       Eject
=       Shuffle
i       CD Info
p       Play
s       Stop
t       track
c       clip
cap C   Save clip to disk

@end deffn

@subsection cd-tool Options

@defvar {User Option} cd-tool-start-command
*Name of cdstart command; most likely either "cdstart" or "cdplay".

@end defvar

@node congrats
@section congrats

CONGRATS ==  Convert Graphics To Sound
I first implemented this idea in late   1988 for my final year project at IIT Bombay.
A scaled-down version of this project was submitted to the John Hopkins  National Search  in 1991
See  http://www.cs.cornell.edu/home/raman/publications/ieee-congrats.ps
Congrats was originally implemented on a BBC Micro with 32K of memory.
This module provides data sonification services for the Emacspeak Audio Desktop
in the spirit of Congrats --- it uses package siggen --- and specifically, the tones utility from that package for generating the auditory output.
Note that  the original version of CONGRATS  enabled  multiple types of "scans"
you could listen to a curve in terms of Cartesian or Polar coordinates.

@node dectalk-voices
@section dectalk-voices

This module defines the various voices used in voice-lock mode.
This module is Dectalk specific.

@subsection dectalk-voices Commands

@deffn {Interactive Command} dectalk  nil
@kbd{C-e d C-d}

Select Dectalk TTS server.
@end deffn

@deffn {Interactive Command} dtk-exp  nil
Select Dectalk TTS server.
@end deffn

@node dom
@section dom

@node dtk-interp
@section dtk-interp

All requests to the speech server are factored out into
this module.
These calls are declared here as defsubst so they are
inlined by the byte compiler.
This  keeps the code efficient,
but gives us the flexibility to call out to different
speech servers.

@node dtk-speak
@section dtk-speak

Defines the TTS interface.

@subsection dtk-speak Commands

@deffn {Interactive Command} dtk-add-cleanup-pattern  (&optional delete)
@kbd{C-e d a}

Add this pattern to the list of repeating patterns that
are cleaned up.  Optional interactive prefix arg deletes
this pattern if previously added.  Cleaning up repeated
patterns results in emacspeak speaking the pattern followed
by a repeat count instead of speaking all the characters
making up the pattern.  Thus, by adding the repeating
pattern `.' (this is already added by default) emacspeak
will say ``aw fifteen dot'' when speaking the string
``...............'' instead of ``period period period period
''
@end deffn

@deffn {Interactive Command} dtk-async-server  (program)
@kbd{C-e d A}

Select and start an async  speech server interactively.
Async servers allow external programs like self-voicing Web browsers to use
the Emacspeak TTS server abstraction.
Argument PROGRAM specifies the speech server program.
@end deffn

@deffn {Interactive Command} dtk-local-server  (program)
@kbd{C-e d L}

Select and start an local  speech server interactively.
Local server lets Emacspeak on a remote host connect back via SSH  port forwarding for instance.
Argument PROGRAM specifies the speech server program.
Port  defaults to  dtk-local-server-port
@end deffn

@deffn {Interactive Command} dtk-reset-state  nil
@kbd{C-e d R}

Restore sanity to the Dectalk.
Typically used after the Dectalk has been power   cycled.
@end deffn

@deffn {Interactive Command} dtk-select-server  (program &optional device)
@kbd{C-e d d}

Select a speech server interactively.
When called interactively, restarts speech server.
Argument PROGRAM specifies the speech server program. 
 Optional arg device sets up environment variable
ALSA_DEFAULT to specified device before starting the server.
@end deffn

@deffn {Interactive Command} dtk-set-character-scale  (factor &optional prefix)
@kbd{C-e d f}

Set scale FACTOR for   speech rate.
Speech rate is scaled by this factor
when speaking characters.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} dtk-set-chunk-separator-syntax  (s)
@kbd{C-e d RET}

Interactively set how text is split in chunks.
See the Emacs documentation on syntax tables for details on how characters are
classified into various syntactic classes.
Argument S specifies the syntax class.
@end deffn

@deffn {Interactive Command} dtk-set-language  (lang)
@kbd{C-e d S}

Set language according to the argument lang.
@end deffn

@deffn {Interactive Command} dtk-set-next-language  nil
@kbd{C-e d N}

Switch to the next available language
@end deffn

@deffn {Interactive Command} dtk-set-predefined-speech-rate  (&optional prefix)
@kbd{C-e d 9 C-e d 8 C-e d 7 C-e d 6 C-e d 5 C-e d 4 C-e d 3 C-e d 2 C-e d 1 C-e d 0}

Set speech rate to one of nine predefined levels.
Interactive PREFIX arg says to set the rate globally.
Formula used is:
rate = dtk-speech-rate-base + dtk-speech-rate-step * level.
@end deffn

@deffn {Interactive Command} dtk-set-preferred-language  (alias lang)
Set the alias of the preferred language:
For example if alias="en" lang="en_GB",
then the following call:
 dtk-set-language("en")
will set "en_GB".

@end deffn

@deffn {Interactive Command} dtk-set-previous-language  nil
@kbd{C-e d P}

Switch to the previous available language
@end deffn

@deffn {Interactive Command} dtk-set-punctuations  (mode &optional prefix)
@kbd{C-e d p}

Set punctuation mode to MODE.
Possible values are `some', `all', or `none'.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} dtk-set-punctuations-to-all  (&optional prefix)
Set punctuation  mode to all.
Interactive PREFIX arg sets punctuation mode globally.
@end deffn

@deffn {Interactive Command} dtk-set-punctuations-to-some  (&optional prefix)
Set punctuation  mode to some.
Interactive PREFIX arg sets punctuation mode globally.
@end deffn

@deffn {Interactive Command} dtk-set-rate  (rate &optional prefix)
@kbd{C-e d r}

Set speaking RATE for the tts.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} dtk-stop  nil
@kbd{C-e s}

Stop speech now.
@end deffn

@deffn {Interactive Command} dtk-toggle-allcaps-beep  (&optional prefix)
@kbd{C-e d C}

Toggle allcaps-beep.
when set, allcaps words  are  indicated by a
short beep.  Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.
Note that allcaps-beep is a very useful thing when programming.
However it is irritating to have it on when reading documents.
@end deffn

@deffn {Interactive Command} dtk-toggle-capitalization  (&optional prefix)
@kbd{C-e d c}

Toggle capitalization.
when set, capitalization is indicated by a
short beep.  Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.
@end deffn

@deffn {Interactive Command} dtk-toggle-punctuation-mode  (&optional prefix)
@kbd{C-e d ,}

Toggle punctuation mode between "some" and "all".
Interactive PREFIX arg makes the new setting global.
@end deffn

@deffn {Interactive Command} dtk-toggle-quiet  (&optional prefix)
@kbd{C-e d q}

Toggles state of  dtk-quiet.
Turning on this switch silences speech.
Optional interactive prefix arg causes this setting to become global.
@end deffn

@deffn {Interactive Command} dtk-toggle-speak-nonprinting-chars  (&optional prefix)
@kbd{C-e d n}

Toggle speak-nonprinting-chars.
Switches behavior of how characters with the high bit set are handled.
Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.
@end deffn

@deffn {Interactive Command} dtk-toggle-split-caps  (&optional prefix)
@kbd{C-e d s}

Toggle split caps mode.
Split caps mode is useful when reading
Hungarian notation in program source code.  Interactive PREFIX arg
means toggle the global default value, and then set the current local
value to the result.
@end deffn

@deffn {Interactive Command} dtk-toggle-splitting-on-white-space  nil
@kbd{C-e d SPC}

Toggle splitting of speech on white space.
This affects the internal state of emacspeak that decides if we split
text purely by clause boundaries, or also include
whitespace.  By default, emacspeak sends a clause at a time
to the speech device.  This produces fluent speech for
normal use.  However in modes such as `shell-mode' and some
programming language modes, clause markers appear
infrequently, and this can result in large amounts of text
being sent to the speech device at once, making the system
unresponsive when asked to stop talking.  Splitting on white
space makes emacspeak's stop command responsive.  However,
when splitting on white space, the speech sounds choppy
since the synthesizer is getting a word at a time.
@end deffn

@deffn {Interactive Command} dtk-toggle-strip-octals  (&optional prefix)
@kbd{C-e d o}

Toggle stripping of octals.
Interactive prefix arg means
 toggle the global default value, and then set the current local
value to the result.
@end deffn

@deffn {Interactive Command} tts-cycle-device  (&optional restart)
Cycle through available ALSA devices.
Optional interactive prefix arg restarts current TTS server.
@end deffn

@deffn {Interactive Command} tts-restart  nil
@kbd{C-e C-s}

Use this to nuke the currently running TTS server and restart it.
@end deffn

@deffn {Interactive Command} tts-speak-version  nil
@kbd{C-e d V}

Speak version.
@end deffn

@subsection dtk-speak Options

@defvar {User Option} dtk-cleanup-patterns
List of repeating patterns to clean up.
You can use  command  `dtk-add-cleanup-pattern'
 bound to C-e d a  to add more patterns.
Specify patterns that people use to decorate their ASCII files, and cause
untold pain to the speech synthesizer.

If more than 3 consecutive occurrences
of a specified pattern is found, the TTS engine replaces it
with a repeat count. 

@end defvar

@defvar {User Option} dtk-local-engine
Engine we use  for our local TTS  server.

@end defvar

@defvar {User Option} dtk-speak-nonprinting-chars
*Option that specifies handling of non-printing chars.
Non nil value means non printing characters  should be
spoken as their octal value.
Set this to t to avoid a dectalk bug that makes the speech box die if
it seems some accented characters in certain contexts.

@end defvar

@defvar {User Option} dtk-speech-rate-base
*Value of lowest tolerable speech rate.

@end defvar

@defvar {User Option} dtk-speech-rate-step
*Value of speech rate increment.
This determines step size used when setting speech rate via command
`dtk-set-predefined-speech-rate'.  Formula used is
dtk-speech-rate-base  +  dtk-speech-rate-step*level.

@end defvar

@defvar {User Option} dtk-speech-server-program
Local speech server script.

@end defvar

@defvar {User Option} dtk-startup-hook
List of hooks to be run after starting up the speech server.
Set things like speech rate, punctuation mode etc in this
hook.

@end defvar

@defvar {User Option} dtk-use-tones
Allow tones to be turned off.

@end defvar

@defvar {User Option} tts-device-list
List of ALSA sound devices  we can use.

@end defvar

@defvar {User Option} tts-strip-octals
Set to T to strip all octal chars before speaking.
Particularly useful for web browsing.

@end defvar

@node dtk-unicode
@section dtk-unicode

This  Provides Unicode support to the speech layer.

@subsection dtk-unicode Commands

@deffn {Interactive Command} dtk-unicode-customize-char  (char replacement)
Add a custom replacement string for CHAR.

When called interactively, CHAR defaults to the character after point.
@end deffn

@deffn {Interactive Command} dtk-unicode-uncustomize-char  (char)
Delete custom replacement for CHAR.

When called interactively, CHAR defaults to the character after point.
@end deffn

@subsection dtk-unicode Options

@defvar {User Option} dtk-unicode-character-replacement-alist
Explicit replacements for some characters.

@end defvar

@defvar {User Option} dtk-unicode-name-transformation-rules-alist
Alist of character name transformation rules.

@end defvar

@defvar {User Option} dtk-unicode-process-utf8
Turn this off when working with TTS  engines that handle UTF8
themselves, e.g., when using an Asian language.

@end defvar

@defvar {User Option} dtk-unicode-untouched-charsets
*Characters of these charsets are completely ignored by dtk-unicode-replace-chars.

@end defvar

@node emacspeak
@section emacspeak

The complete audio desktop.

Emacspeak extends Emacs to be a fully functional audio desktop.
This is the main emacspeak module.
It actually does very little:
It loads the various parts of the system.

@subsection emacspeak Commands

@deffn {Interactive Command} emacspeak  nil
Starts the Emacspeak speech subsystem.  Use emacs as you
normally would, emacspeak will provide you spoken feedback
as you work.  Emacspeak also provides commands for having
parts of the current buffer, the mode-line etc to be spoken.

If you are hearing this description as a result of pressing
C-h C-e you may want to press
C-e s to stop speech, and then use the arrow keys to
move around in the Help buffer to read the rest of this
description, which includes a summary of all emacspeak
keybindings.

All emacspeak commands use C-e as a
prefix key.  You can also set the state of the TTS engine  by
using C-e d as a prefix.  Here is
a summary of all emacspeak commands along with their
bindings.  You need to precede the keystrokes listed below
with C-e.

Emacspeak also provides a fluent speech extension to the
emacs terminal emulator (eterm).  Note: You need to use the
term package that comes with emacs-19.29 and later.

key             binding
---             -------

C-@@		emacspeak-speak-current-mark
C-a		emacspeak-toggle-auditory-icons
C-b		emacspeak-bookshare
C-c		emacspeak-clipboard-copy
C-d		emacspeak-toggle-show-point
C-e		end-of-line
TAB		emacspeak-table-display-table-in-region
C-j		emacspeak-hide-speak-block-sans-prefix
C-l		emacspeak-speak-line-number
RET		emacspeak-speak-continuously
C-n		emacspeak-speak-next-window
C-o		emacspeak-ocr
C-p		emacspeak-speak-previous-window
C-q		emacspeak-toggle-comint-autospeak
C-s		tts-restart
C-t		emacspeak-table-find-file
C-u		emacspeak-feeds-browse
C-v		view-mode
C-w		emacspeak-speak-window-information
C-x		emacspeak-personal-ctlx-keymap
C-y		emacspeak-clipboard-paste
ESC		Prefix Command
SPC		emacspeak-speak-header-line
!		emacspeak-speak-run-shell-command
"		emacspeak-speak-sexp-interactively
#		emacspeak-gridtext
%		emacspeak-speak-current-percentage
&		emacspeak-wizards-shell-command-on-current-file
'		emacspeak-pianobar
(		emacspeak-audio-setup
)		emacspeak-sounds-select-theme
,		emacspeak-speak-browse-buffer
.		emacspeak-speak-current-field
/		emacspeak-speak-this-buffer-other-window-display
0 .. 9		emacspeak-speak-predefined-window
:		emacspeak-m-player-shuffle
;		emacspeak-multimedia
<		emacspeak-speak-previous-field
=		emacspeak-speak-current-column
>		emacspeak-speak-next-field
?		emacspeak-websearch-dispatch
@@		emacspeak-speak-message-at-time
A		emacspeak-appt-repeat-announcement
B		emacspeak-speak-buffer-interactively
C		emacspeak-customize
F		emacspeak-view-emacspeak-faq
I		emacspeak-speak-show-active-network-interfaces
L		emacspeak-speak-line-interactively
M		emacspeak-speak-minor-mode-line
N		emacspeak-view-emacspeak-news
P		emacspeak-speak-paragraph-interactively
R		emacspeak-speak-rectangle
T		emacspeak-view-emacspeak-tips
U		emacspeak-websearch-usenet
V		emacspeak-speak-version
W		emacspeak-tapestry-select-window-by-name
[		emacspeak-speak-page
\		emacspeak-toggle-speak-line-invert-filter
]		emacspeak-speak-page-interactively
^		emacspeak-filtertext
a		emacspeak-speak-message-again
b		emacspeak-speak-buffer
c		emacspeak-speak-char
d		emacspeak-dtk-submap-command
e		end-of-line
f		emacspeak-speak-buffer-filename
g		emacspeak-epub
h		emacspeak-speak-help
i		emacspeak-tabulate-region
j		emacspeak-hide-or-expose-block
k		emacspeak-speak-current-kill
l		emacspeak-speak-line
m		emacspeak-speak-mode-line
n		emacspeak-speak-rest-of-buffer
o		emacspeak-toggle-comint-output-monitor
p		emacspeak-speak-paragraph
q		emacspeak-toggle-speak-messages
r		emacspeak-speak-region
s		dtk-stop
t		emacspeak-speak-time
u		emacspeak-url-template-fetch
v		view-register
w		emacspeak-speak-word
x		emacspeak-personal-keymap
@{		emacspeak-speak-paragraph
|		emacspeak-speak-line-set-column-filter
DEL		cd-tool
<(deletechar>	emacspeak-ssh-tts-restart
<C-<left>	emacspeak-select-this-buffer-previous-display
<C-<right>	emacspeak-select-this-buffer-next-display
<delete>	emacspeak-ssh-tts-restart
<down>		emacspeak-read-next-line
<f1>		emacspeak-learn-emacs-mode
<f11>		emacspeak-wizards-shell-toggle
<insert>	emacspeak-emergency-tts-restart
<left>		emacspeak-speak-this-buffer-previous-display
<right>		emacspeak-speak-this-buffer-next-display
<up>		emacspeak-read-previous-line

# a		emacspeak-gridtext-apply
# l		emacspeak-gridtext-load
# s		emacspeak-gridtext-save

C-M-@@		emacspeak-speak-spaces-at-point
C-M-b		emacspeak-submit-bug
C-M-k		kill-emacs
M-%		emacspeak-goto-percent
M-;		emacspeak-webutils-play-media-at-point
M-a		emacspeak-set-auditory-icon-player
M-b		emacspeak-speak-other-buffer
M-c		emacspeak-copy-current-file
M-d		emacspeak-pronounce-dispatch
M-f		emacspeak-frame-label-or-switch-to-labelled-frame
M-h		emacspeak-speak-hostname
M-l		emacspeak-link-current-file
M-m		emacspeak-toggle-mail-alert
M-q		voice-setup-toggle-silence-personality
M-r		emacspeak-remote-connect-to-server
M-s		emacspeak-symlink-current-file
M-t		emacspeak-tapestry-describe-tapestry
M-u		emacspeak-feeds-add-feed
M-v		emacspeak-show-personality-at-point
M-w		emacspeak-toggle-which-function

d C-d		dectalk
d C-e		espeak
d RET		dtk-set-chunk-separator-syntax
d C-o		outloud
d C-v		outloud-32
d SPC		dtk-toggle-splitting-on-white-space
d ,		dtk-toggle-punctuation-mode
d 0 .. d 9	dtk-set-predefined-speech-rate
d A		dtk-async-server
d C		dtk-toggle-allcaps-beep
d L		dtk-local-server
d N		dtk-set-next-language
d P		dtk-set-previous-language
d R		dtk-reset-state
d S		dtk-set-language
d V		tts-speak-version
d a		dtk-add-cleanup-pattern
d c		dtk-toggle-capitalization
d d		dtk-select-server
d f		dtk-set-character-scale
d i		emacspeak-toggle-audio-indentation
d k		emacspeak-toggle-character-echo
d l		emacspeak-toggle-line-echo
d m		emacspeak-speak-set-mode-punctuations
d n		dtk-toggle-speak-nonprinting-chars
d o		dtk-toggle-strip-octals
d p		dtk-set-punctuations
d q		dtk-toggle-quiet
d r		dtk-set-rate
d s		dtk-toggle-split-caps
d t		emacspeak-dial-dtk
d v		voice-lock-mode
d w		emacspeak-toggle-word-echo
d z		emacspeak-zap-tts

See the online documentation for individual commands and
functions for details.   
@end deffn

@deffn {Interactive Command} emacspeak-describe-emacspeak  nil
@kbd{C-h C-e <f1> C-e <help> C-e}

Give a brief overview of emacspeak.
@end deffn

@deffn {Interactive Command} emacspeak-submit-bug  nil
@kbd{C-e C-M-b}

Function to submit a bug to the programs maintainer.
@end deffn

@subsection emacspeak Options

@defvar {User Option} emacspeak-Buffer-menu-buffer-voice
Personality used for Buffer-menu-buffer
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-apt-utils-broken-personality
Personality used for apt-utils-broken-face
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-apt-utils-description-personality
Personality used for apt-utils-description-face
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-apt-utils-field-contents-personality
Personality used for apt-utils-field-contents-face
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-apt-utils-field-keyword-personality
Personality used for apt-utils-field-keyword-face
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-apt-utils-normal-package-personality
Personality used for apt-utils-normal-package-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-apt-utils-version-personality
Personality used for apt-utils-version-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-apt-utils-virtual-package-personality
Personality used for apt-utils-virtual-package-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-bold-italic-voice
Personality used for bold-italic
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-bold-voice
Personality used for bold
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-button-voice
Personality used for button
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-c-annotation-personality
Personality used for c-annotation-face
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-calendar-today-voice
Personality used for calendar-today
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-comint-highlight-input-voice
Personality used for comint-highlight-input
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-comint-highlight-prompt-voice
Personality used for comint-highlight-prompt
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-completions-annotations-voice
Personality used for completions-annotations
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-completions-common-part-voice
Personality used for completions-common-part
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-completions-first-difference-voice
Personality used for completions-first-difference
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-custom-button-mouse-voice
Personality used for custom-button-mouse
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-custom-button-pressed-unraised-voice
Personality used for custom-button-pressed-unraised
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-custom-button-pressed-voice
Personality used for custom-button-pressed
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-custom-button-unraised-voice
Personality used for custom-button-unraised
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-custom-button-voice
Personality used for custom-button
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-custom-changed-voice
Personality used for custom-changed
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-custom-comment-tag-voice
Personality used for custom-comment-tag
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-custom-comment-voice
Personality used for custom-comment
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-custom-documentation-voice
Personality used for custom-documentation
This personality uses  voice-brighten-medium whose  effect can be changed globally by customizing voice-brighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-custom-face-tag-voice
Personality used for custom-face-tag
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-custom-group-tag-1-voice
Personality used for custom-group-tag-1
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-custom-group-tag-voice
Personality used for custom-group-tag
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-custom-invalid-voice
Personality used for custom-invalid
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-custom-link-voice
Personality used for custom-link
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-custom-modified-voice
Personality used for custom-modified
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-custom-rogue-voice
Personality used for custom-rogue
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-custom-saved-voice
Personality used for custom-saved
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-custom-set-voice
Personality used for custom-set
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-custom-state-voice
Personality used for custom-state
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-custom-variable-button-voice
Personality used for custom-variable-button
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-custom-variable-tag-voice
Personality used for custom-variable-tag
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-diary-personality
Personality used for diary-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-diff-added-voice
Personality used for diff-added
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-diff-changed-voice
Personality used for diff-changed
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-diff-context-voice
Personality used for diff-context
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-diff-file-header-voice
Personality used for diff-file-header
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-diff-function-voice
Personality used for diff-function
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-diff-header-voice
Personality used for diff-header
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-diff-hunk-header-voice
Personality used for diff-hunk-header
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-diff-index-voice
Personality used for diff-index
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-diff-indicator-added-voice
Personality used for diff-indicator-added
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-diff-indicator-changed-voice
Personality used for diff-indicator-changed
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-diff-indicator-removed-voice
Personality used for diff-indicator-removed
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-diff-nonexistent-voice
Personality used for diff-nonexistent
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-diff-refine-added-voice
Personality used for diff-refine-added
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-diff-refine-change-voice
Personality used for diff-refine-change
This personality uses  voice-brighten-medium whose  effect can be changed globally by customizing voice-brighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-diff-refine-removed-voice
Personality used for diff-refine-removed
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-diff-removed-voice
Personality used for diff-removed
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-dired-directory-voice
Personality used for dired-directory
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-dired-flagged-voice
Personality used for dired-flagged
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-dired-header-voice
Personality used for dired-header
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-dired-ignored-voice
Personality used for dired-ignored
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-dired-mark-voice
Personality used for dired-mark
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-dired-marked-voice
Personality used for dired-marked
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-dired-perm-write-voice
Personality used for dired-perm-write
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-dired-symlink-voice
Personality used for dired-symlink
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-dired-warning-voice
Personality used for dired-warning
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-current-diff-A-voice
Personality used for ediff-current-diff-A
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-current-diff-Ancestor-voice
Personality used for ediff-current-diff-Ancestor
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-current-diff-B-voice
Personality used for ediff-current-diff-B
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-current-diff-C-voice
Personality used for ediff-current-diff-C
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-even-diff-A-voice
Personality used for ediff-even-diff-A
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-even-diff-Ancestor-voice
Personality used for ediff-even-diff-Ancestor
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-even-diff-B-voice
Personality used for ediff-even-diff-B
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-even-diff-C-voice
Personality used for ediff-even-diff-C
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-fine-diff-A-voice
Personality used for ediff-fine-diff-A
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-fine-diff-Ancestor-voice
Personality used for ediff-fine-diff-Ancestor
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-fine-diff-B-voice
Personality used for ediff-fine-diff-B
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-fine-diff-C-voice
Personality used for ediff-fine-diff-C
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-odd-diff-A-voice
Personality used for ediff-odd-diff-A
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-odd-diff-Ancestor-voice
Personality used for ediff-odd-diff-Ancestor
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-odd-diff-B-voice
Personality used for ediff-odd-diff-B
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-ediff-odd-diff-C-voice
Personality used for ediff-odd-diff-C
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-erc-action-personality
Personality used for erc-action-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-erc-bold-personality
Personality used for erc-bold-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-erc-dangerous-host-personality
Personality used for erc-dangerous-host-face
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-erc-direct-msg-personality
Personality used for erc-direct-msg-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-erc-error-personality
Personality used for erc-error-face
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-erc-input-personality
Personality used for erc-input-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-erc-inverse-personality
Personality used for erc-inverse-face
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-erc-keyword-personality
Personality used for erc-keyword-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-erc-notice-personality
Personality used for erc-notice-face
This personality uses  (quote inaudible) whose  effect can be changed globally by customizing (quote inaudible)-settings.

@end defvar

@defvar {User Option} emacspeak-erc-pal-personality
Personality used for erc-pal-face
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-erc-prompt-personality
Personality used for erc-prompt-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-erc-underline-personality
Personality used for erc-underline-face
This personality uses  voice-brighten-medium whose  effect can be changed globally by customizing voice-brighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-archive-personality
Personality used for eshell-ls-archive-face
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-archive-voice
Personality used for eshell-ls-archive
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-backup-personality
Personality used for eshell-ls-backup-face
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-backup-voice
Personality used for eshell-ls-backup
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-clutter-personality
Personality used for eshell-ls-clutter-face
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-clutter-voice
Personality used for eshell-ls-clutter
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-directory-personality
Personality used for eshell-ls-directory-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-directory-voice
Personality used for eshell-ls-directory
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-executable-personality
Personality used for eshell-ls-executable-face
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-executable-voice
Personality used for eshell-ls-executable
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-missing-personality
Personality used for eshell-ls-missing-face
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-missing-voice
Personality used for eshell-ls-missing
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-product-personality
Personality used for eshell-ls-product-face
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-product-voice
Personality used for eshell-ls-product
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-readonly-personality
Personality used for eshell-ls-readonly-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-readonly-voice
Personality used for eshell-ls-readonly
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-special-personality
Personality used for eshell-ls-special-face
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-special-voice
Personality used for eshell-ls-special
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-symlink-personality
Personality used for eshell-ls-symlink-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-symlink-voice
Personality used for eshell-ls-symlink
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-unreadable-personality
Personality used for eshell-ls-unreadable-face
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-ls-unreadable-voice
Personality used for eshell-ls-unreadable
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-prompt-personality
Personality used for eshell-prompt-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-eshell-prompt-voice
Personality used for eshell-prompt
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-eww-form-checkbox-voice
Personality used for eww-form-checkbox
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-eww-form-select-voice
Personality used for eww-form-select
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-eww-form-submit-voice
Personality used for eww-form-submit
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-eww-form-text-voice
Personality used for eww-form-text
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-fixed-pitch-voice
Personality used for fixed-pitch
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-flyspell-incorrect-voice
Personality used for flyspell-incorrect
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-1-voice
Personality used for gnus-cite-1
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-10-voice
Personality used for gnus-cite-10
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-11-voice
Personality used for gnus-cite-11
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-2-voice
Personality used for gnus-cite-2
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-3-voice
Personality used for gnus-cite-3
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-4-voice
Personality used for gnus-cite-4
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-5-voice
Personality used for gnus-cite-5
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-6-voice
Personality used for gnus-cite-6
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-7-voice
Personality used for gnus-cite-7
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-8-voice
Personality used for gnus-cite-8
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-cite-9-voice
Personality used for gnus-cite-9
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-emphasis-bold-voice
Personality used for gnus-emphasis-bold
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-emphasis-highlight-words-voice
Personality used for gnus-emphasis-highlight-words
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-emphasis-italic-voice
Personality used for gnus-emphasis-italic
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-emphasis-strikethru-voice
Personality used for gnus-emphasis-strikethru
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-emphasis-underline-voice
Personality used for gnus-emphasis-underline
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-1-empty-voice
Personality used for gnus-group-mail-1-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-1-voice
Personality used for gnus-group-mail-1
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-2-empty-voice
Personality used for gnus-group-mail-2-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-2-voice
Personality used for gnus-group-mail-2
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-3-empty-voice
Personality used for gnus-group-mail-3-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-3-voice
Personality used for gnus-group-mail-3
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-low-empty-voice
Personality used for gnus-group-mail-low-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-mail-low-voice
Personality used for gnus-group-mail-low
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-1-empty-voice
Personality used for gnus-group-news-1-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-1-voice
Personality used for gnus-group-news-1
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-2-empty-voice
Personality used for gnus-group-news-2-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-2-voice
Personality used for gnus-group-news-2
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-3-empty-voice
Personality used for gnus-group-news-3-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-3-voice
Personality used for gnus-group-news-3
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-4-empty-voice
Personality used for gnus-group-news-4-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-4-voice
Personality used for gnus-group-news-4
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-5-empty-voice
Personality used for gnus-group-news-5-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-5-voice
Personality used for gnus-group-news-5
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-6-empty-voice
Personality used for gnus-group-news-6-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-6-voice
Personality used for gnus-group-news-6
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-low-empty-voice
Personality used for gnus-group-news-low-empty
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-group-news-low-voice
Personality used for gnus-group-news-low
This personality uses  default whose  effect can be changed globally by customizing default-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-header-content-voice
Personality used for gnus-header-content
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-header-from-voice
Personality used for gnus-header-from
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-header-name-voice
Personality used for gnus-header-name
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-header-newsgroups-voice
Personality used for gnus-header-newsgroups
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-header-subject-voice
Personality used for gnus-header-subject
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-server-agent-voice
Personality used for gnus-server-agent
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-server-closed-voice
Personality used for gnus-server-closed
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-server-denied-voice
Personality used for gnus-server-denied
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-server-offline-voice
Personality used for gnus-server-offline
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-server-opened-voice
Personality used for gnus-server-opened
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-signature-voice
Personality used for gnus-signature
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-cancelled-voice
Personality used for gnus-summary-cancelled
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-high-ancient-voice
Personality used for gnus-summary-high-ancient
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-high-read-voice
Personality used for gnus-summary-high-read
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-high-ticked-voice
Personality used for gnus-summary-high-ticked
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-high-undownloadedvoice-bolden-and-animate-voice
Personality used for gnus-summary-high-undownloadedvoice-bolden-and-animate
This personality uses  nil whose  effect can be changed globally by customizing nil-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-high-unread-voice
Personality used for gnus-summary-high-unread
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-low-ancient-voice
Personality used for gnus-summary-low-ancient
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-low-read-voice
Personality used for gnus-summary-low-read
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-low-ticked-voice
Personality used for gnus-summary-low-ticked
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-low-undownloaded-voice
Personality used for gnus-summary-low-undownloaded
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-low-unread-voice
Personality used for gnus-summary-low-unread
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-normal-ancient-voice
Personality used for gnus-summary-normal-ancient
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-normal-read-voice
Personality used for gnus-summary-normal-read
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-normal-ticked-voice
Personality used for gnus-summary-normal-ticked
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-normal-undownloaded-voice
Personality used for gnus-summary-normal-undownloaded
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-gnus-summary-selected-voice
Personality used for gnus-summary-selected
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-header-line-voice
Personality used for header-line
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-help-argument-name-voice
Personality used for help-argument-name
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-highlight-voice
Personality used for highlight
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-holiday-personality
Personality used for holiday-face
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-ido-first-match-voice
Personality used for ido-first-match
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-ido-incomplete-regexp-voice
Personality used for ido-incomplete-regexp
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-ido-indicator-voice
Personality used for ido-indicator
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-ido-only-match-voice
Personality used for ido-only-match
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-ido-subdir-voice
Personality used for ido-subdir
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-info-header-node-voice
Personality used for info-header-node
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-info-header-xref-voice
Personality used for info-header-xref
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-info-index-match-voice
Personality used for info-index-match
This personality uses  (quote voice-bolden-medium) whose  effect can be changed globally by customizing (quote voice-bolden-medium)-settings.

@end defvar

@defvar {User Option} emacspeak-info-menu-5-voice
Personality used for info-menu-5
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-info-menu-header-voice
Personality used for info-menu-header
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-info-menu-star-voice
Personality used for info-menu-star
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-info-node-voice
Personality used for info-node
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-info-title-1-voice
Personality used for info-title-1
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-info-title-2-voice
Personality used for info-title-2
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-info-title-3-voice
Personality used for info-title-3
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-info-title-4-voice
Personality used for info-title-4
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-info-xref-visited-voice
Personality used for info-xref-visited
This personality uses  voice-animate-medium whose  effect can be changed globally by customizing voice-animate-medium-settings.

@end defvar

@defvar {User Option} emacspeak-info-xref-voice
Personality used for info-xref
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-isearch-voice
Personality used for isearch
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-italic-voice
Personality used for italic
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-link-voice
Personality used for link
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-magit-branch-voice
Personality used for magit-branch
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-magit-diff-add-voice
Personality used for magit-diff-add
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-magit-diff-del-voice
Personality used for magit-diff-del
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-magit-diff-file-header-voice
Personality used for magit-diff-file-header
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-magit-diff-hunk-header-voice
Personality used for magit-diff-hunk-header
This personality uses  voice-animate-medium whose  effect can be changed globally by customizing voice-animate-medium-settings.

@end defvar

@defvar {User Option} emacspeak-magit-diff-none-voice
Personality used for magit-diff-none
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-magit-header-voice
Personality used for magit-header
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-magit-item-highlight-voice
Personality used for magit-item-highlight
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-magit-item-mark-voice
Personality used for magit-item-mark
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-graph-voice
Personality used for magit-log-graph
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-head-label-bisect-bad-voice
Personality used for magit-log-head-label-bisect-bad
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-head-label-bisect-good-voice
Personality used for magit-log-head-label-bisect-good
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-head-label-default-voice
Personality used for magit-log-head-label-default
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-head-label-local-voice
Personality used for magit-log-head-label-local
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-head-label-patches-voice
Personality used for magit-log-head-label-patches
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-head-label-remote-voice
Personality used for magit-log-head-label-remote
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-head-label-tags-voice
Personality used for magit-log-head-label-tags
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-message-voice
Personality used for magit-log-message
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-sha1-voice
Personality used for magit-log-sha1
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-magit-log-tag-label-voice
Personality used for magit-log-tag-label
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-magit-menu-selected-option-voice
Personality used for magit-menu-selected-option
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-magit-section-title-voice
Personality used for magit-section-title
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-magit-whitespace-warning-personality
Personality used for magit-whitespace-warning-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-match-voice
Personality used for match
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-media-player
Default media player to use.
This is a Lisp function that takes a resource locator.

@end defvar

@defvar {User Option} emacspeak-message-cited-text-voice
Personality used for message-cited-text
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-message-header-cc-voice
Personality used for message-header-cc
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-message-header-name-voice
Personality used for message-header-name
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-message-header-newsgroups-voice
Personality used for message-header-newsgroups
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-message-header-other-voice
Personality used for message-header-other
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-message-header-subject-voice
Personality used for message-header-subject
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-message-header-to-voice
Personality used for message-header-to
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-message-header-xheader-voice
Personality used for message-header-xheader
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-message-mml-voice
Personality used for message-mml
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-message-separator-voice
Personality used for message-separator
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-minibuffer-prompt-voice
Personality used for minibuffer-prompt
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-outline-1-voice
Personality used for outline-1
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-outline-2-voice
Personality used for outline-2
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-outline-3-voice
Personality used for outline-3
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-outline-4-voice
Personality used for outline-4
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-outline-5-voice
Personality used for outline-5
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-outline-6-voice
Personality used for outline-6
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-play-emacspeak-startup-icon
If set to T, emacspeak plays its icon as it launches.

@end defvar

@defvar {User Option} emacspeak-py-XXX-tag-personality
Personality used for py-XXX-tag-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-py-builtins-personality
Personality used for py-builtins-face
This personality uses  emacspeak-voice-lock-builtin-personality whose  effect can be changed globally by customizing emacspeak-voice-lock-builtin-personality-settings.

@end defvar

@defvar {User Option} emacspeak-py-class-name-personality
Personality used for py-class-name-face
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-py-decorators-personality
Personality used for py-decorators-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-py-exception-name-personality
Personality used for py-exception-name-face
This personality uses  emacspeak-voice-lock-warning-personality whose  effect can be changed globally by customizing emacspeak-voice-lock-warning-personality-settings.

@end defvar

@defvar {User Option} emacspeak-py-number-personality
Personality used for py-number-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-py-pseudo-keyword-personality
Personality used for py-pseudo-keyword-face
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-py-variable-name-personality
Personality used for py-variable-name-face
This personality uses  emacspeak-voice-lock-variable-name-personality whose  effect can be changed globally by customizing emacspeak-voice-lock-variable-name-personality-settings.

@end defvar

@defvar {User Option} emacspeak-query-replace-voice
Personality used for query-replace
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-region-voice
Personality used for region
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-shadow-voice
Personality used for shadow
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-shr-link-voice
Personality used for shr-link
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-startup-hook
Hook to run after starting emacspeak.

@end defvar

@defvar {User Option} emacspeak-term-underline-voice
Personality used for term-underline
This personality uses  voice-brighten-medium whose  effect can be changed globally by customizing voice-brighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-underline-voice
Personality used for underline
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-variable-pitch-voice
Personality used for variable-pitch
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-bold-personality
Personality used for font-latex-bold-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-doctex-documentation-personality
Personality used for font-latex-doctex-documentation-face
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-doctex-preprocessor-personality
Personality used for font-latex-doctex-preprocessor-face
This personality uses  voice-brighten-medium whose  effect can be changed globally by customizing voice-brighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-italic-personality
Personality used for font-latex-italic-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-math-personality
Personality used for font-latex-math-face
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-sedate-personality
Personality used for font-latex-sedate-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-string-personality
Personality used for font-latex-string-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-subscript-personality
Personality used for font-latex-subscript-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-superscript-personality
Personality used for font-latex-superscript-face
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-verbatim-personality
Personality used for font-latex-verbatim-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-voice-latex-warning-personality
Personality used for font-latex-warning-face
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-builtin-personality
Personality used for font-lock-builtin-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-comment-delimiter-personality
Personality used for font-lock-comment-delimiter-face
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-comment-personality
Personality used for font-lock-comment-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-constant-personality
Personality used for font-lock-constant-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-doc-personality
Personality used for font-lock-doc-face
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-function-name-personality
Personality used for font-lock-function-name-face
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-keyword-personality
Personality used for font-lock-keyword-face
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-negation-char-personality
Personality used for font-lock-negation-char-face
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-preprocessor-personality
Personality used for font-lock-preprocessor-face
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-regexp-grouping-backslash
Personality used for font-lock-regexp-grouping-backslash
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-regexp-grouping-construct
Personality used for font-lock-regexp-grouping-construct
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-string-personality
Personality used for font-lock-string-face
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-type-personality
Personality used for font-lock-type-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-variable-name-personality
Personality used for font-lock-variable-name-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-voice-lock-warning-personality
Personality used for font-lock-warning-face
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-anchor-voice
Personality used for w3m-anchor
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-arrived-anchor-voice
Personality used for w3m-arrived-anchor
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-bold-voice
Personality used for w3m-bold
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-current-anchor-voice
Personality used for w3m-current-anchor
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-form-button-pressed-voice
Personality used for w3m-form-button-pressed
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-form-button-voice
Personality used for w3m-form-button
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-form-voice
Personality used for w3m-form
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-header-line-location-content-voice
Personality used for w3m-header-line-location-content
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-header-line-location-title-voice
Personality used for w3m-header-line-location-title
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-history-current-url-voice
Personality used for w3m-history-current-url
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-image-voice
Personality used for w3m-image
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-insert-voice
Personality used for w3m-insert
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-italic-voice
Personality used for w3m-italic
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-strike-through-voice
Personality used for w3m-strike-through
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-tab-selected-voice
Personality used for w3m-tab-selected
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-tab-unselected-voice
Personality used for w3m-tab-unselected
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-w3m-underline-voice
Personality used for w3m-underline
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-warning-voice
Personality used for warning
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-widget-button-pressed-voice
Personality used for widget-button-pressed
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-widget-button-voice
Personality used for widget-button
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-widget-documentation-voice
Personality used for widget-documentation
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-widget-field-voice
Personality used for widget-field
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-widget-inactive-voice
Personality used for widget-inactive
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-widget-single-line-field-voice
Personality used for widget-single-line-field
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-woman-bold-voice
Personality used for woman-bold
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-woman-edition-voice
Personality used for woman-edition
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-woman-italic-voice
Personality used for woman-italic
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-woman-unknown-voice
Personality used for woman-unknown
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} g-auth-lifetime
Auth lifetime.

@end defvar

@node emacspeak-2048
@section emacspeak-2048

Speech-enable 2048 Game

@subsection emacspeak-2048 Commands

@deffn {Interactive Command} emacspeak-2048-pop-state  nil
Reset state from stack.
@end deffn

@deffn {Interactive Command} emacspeak-2048-push-state  nil
Push current game state on stack.
@end deffn

@deffn {Interactive Command} emacspeak-2048-randomize-game  (&optional count)
Puts game in a randomized new state.
@end deffn

@deffn {Interactive Command} emacspeak-2048-score  nil
Show total on board.
@end deffn

@deffn {Interactive Command} emacspeak-2048-speak-board  nil
Speak board.
@end deffn

@deffn {Interactive Command} emacspeak-2048-speak-transposed-board  nil
Speak board column-wise.
@end deffn

@node emacspeak-actions
@section emacspeak-actions

Define mode-specific  actions.
Actions are defined by adding them to hook
emacspeak-<mode-name>-actions-hook

@node emacspeak-add-log
@section emacspeak-add-log

Speech-enable Changelog mode

@subsection emacspeak-add-log Options

@defvar {User Option} emacspeak-change-log-acknowledgement-voice
Personality used for change-log-acknowledgement
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-change-log-conditionals-voice
Personality used for change-log-conditionals
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-change-log-email-voice
Personality used for change-log-email
This personality uses  voice-womanize-1 whose  effect can be changed globally by customizing voice-womanize-1-settings.

@end defvar

@defvar {User Option} emacspeak-change-log-file-voice
Personality used for change-log-file
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-change-log-function-voice
Personality used for change-log-function
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-change-log-list-voice
Personality used for change-log-list
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-change-log-name-voice
Personality used for change-log-name
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@node emacspeak-advice
@section emacspeak-advice

This module defines the advice forms for making the core of Emacs speak
Advice forms that are specific to Emacs subsystems do not belong here!
I violate this at present by advising completion comint and
shell here.

Note that we needed to advice a lot more for Emacs 19 and
Emacs 20 than we do for Emacs 21 and Emacs 22.
As of August 2007, this file is being purged of advice forms
not needed in Emacs 22.
This also means that this and subsequent versions of
Emacspeak should not be run on versions of Emacs older than
Emacs 21,
And preferably only run on Emacs 22.
This version of Emacspeak is only tested on Emacs 24 and later.

@subsection emacspeak-advice Options

@defvar {User Option} emacspeak-advice-progress-reporter
Set to true if progress reporter should produce an auditory
icon.

@end defvar

@defvar {User Option} emacspeak-speak-errors
Specifies if error messages are cued.

@end defvar

@defvar {User Option} emacspeak-speak-tooltips
Enable to get tooltips spoken.

@end defvar

@defvar {User Option} emacspeak-untabify-fixes-non-breaking-space
Advice untabify to change non-breaking space chars to space.

@end defvar

@node emacspeak-alsaplayer
@section emacspeak-alsaplayer

Defines a simple derived mode for interacting with
alsaplayer.
alsaplayer navigation commands  work via single keystrokes.

@subsection emacspeak-alsaplayer Commands

@deffn {Interactive Command} emacspeak-alsaplayer-add-to-queue  (resource)
Add specified resource to queue.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-amark-add  (name &optional prompt-position)
Set AMark `name' at current position in current audio stream.
Interactive prefix arg prompts for position.
As the default, use current position.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-amark-jump  nil
Jump to specified AMark.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-backward-10-seconds  nil
Skip backward by  10 seconds.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-backward-minute  (minutes)
Skip backwards by  minutes.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-backward-ten-minutes  (minutes)
Skip backwards by  chunks of minutes.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-cd  (directory)
Change default directory, and silence its pronunciation.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-clear  nil
Clear or resume alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-clip  (path start end)
Invoke mp3splt to clip selected range.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-find-and-add-to-queue  (pattern)
Find  specified resource and add to queue.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-forward-10-seconds  nil
Skip forward by  seconds.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-forward-minute  (minutes)
Skip forward by  minutes.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-forward-ten-minutes  (minutes)
Skip forward by  chunks of ten minutes.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-info  nil
Speak current path and copy it to kill ring.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-jump  (track)
Jump to specified track.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-launch  nil
Launch Alsaplayer.
user is placed in a buffer associated with the newly created
Alsaplayer session.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-mark-position  nil
Mark currently displayed position.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-mode  nil
Major mode for alsaplayer interaction. 

key             binding
---             -------

ESC		Prefix Command
SPC		emacspeak-alsaplayer-pause
,		emacspeak-alsaplayer-backward-10-seconds
.		emacspeak-alsaplayer-forward-10-seconds
/		emacspeak-alsaplayer-speed
<		emacspeak-alsaplayer-backward-minute
>		emacspeak-alsaplayer-forward-minute
?		emacspeak-alsaplayer-status
A		emacspeak-alsaplayer-replace-queue
J		emacspeak-alsaplayer-amark-jump
M		emacspeak-alsaplayer-amark-add
Q		emacspeak-alsaplayer-quit
S		emacspeak-alsaplayer-stop
[		emacspeak-alsaplayer-backward-ten-minutes
]		emacspeak-alsaplayer-forward-ten-minutes
a		emacspeak-alsaplayer-add-to-queue
c		emacspeak-alsaplayer-clear
d		emacspeak-alsaplayer-cd
f		emacspeak-alsaplayer-find-and-add-to-queue
g		emacspeak-alsaplayer-seek
i		emacspeak-alsaplayer-info
j		emacspeak-alsaplayer-jump
l		emacspeak-alsaplayer-launch
m		emacspeak-alsaplayer-mark-position
n		emacspeak-alsaplayer-next
o		other-window
p		emacspeak-alsaplayer-previous
q		bury-buffer
r		emacspeak-alsaplayer-relative
s		emacspeak-alsaplayer-start
v		emacspeak-alsaplayer-volume
w		emacspeak-alsaplayer-where
x		emacspeak-alsaplayer-clip

M-l		emacspeak-amark-load
M-s		emacspeak-amark-save

In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `emacspeak-alsaplayer-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-next  nil
Next  alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-pause  nil
Pause or resume alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-previous  nil
Previous  alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-quit  nil
Quit  alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-relative  (offset)
Relative seek  alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-replace-queue  (resource)
Replace currently playing music.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-seek  (offset)
Absolute seek  alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-speed  (setting)
Set speed in alsaplayer.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-start  nil
Start  alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-status  nil
Show alsaplayer status
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-stop  nil
Stop  alsaplayer
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-volume  (setting)
Set volume.
@end deffn

@deffn {Interactive Command} emacspeak-alsaplayer-where  nil
Speak current position and copy it to kill ring.
@end deffn

@subsection emacspeak-alsaplayer Options

@defvar {User Option} emacspeak-alsaplayer-auditory-feedback
Turn this on if you want spoken feedback and auditory icons from alsaplayer.

@end defvar

@defvar {User Option} emacspeak-alsaplayer-device
Device to use for alsaplayer

@end defvar

@defvar {User Option} emacspeak-alsaplayer-media-directory
Directory to look for media files.

@end defvar

@defvar {User Option} emacspeak-alsaplayer-program
Alsaplayer executable.

@end defvar

@node emacspeak-amark
@section emacspeak-amark

Structure emacspeak-amark holds a bookmark into an mp3 file
path: fully qualified pathname  to file being marked
name: Bookmark tag
Position: time offset from start 

This library will be used from emacspeak-m-player,
emacspeak-alsaplayer and friends to set and jump to bookmarks.

@subsection emacspeak-amark Commands

@deffn {Interactive Command} emacspeak-amark-add  (path name position)
Add an AMark to the buffer local list of AMarks. AMarks are
bookmarks in audio content. If there is an existing amark of the
given name, it is updated with path and position.
@end deffn

@deffn {Interactive Command} emacspeak-amark-find  (name)
Return matching AMark if found in buffer-local AMark list.
@end deffn

@deffn {Interactive Command} emacspeak-amark-load  nil
Locate AMarks file from current directory, and load it.
@end deffn

@deffn {Interactive Command} emacspeak-amark-save  nil
Save buffer-local AMarks in current directory.
@end deffn

@node emacspeak-analog
@section emacspeak-analog

Speech-enables package analog --convenient log analyzer 

@subsection emacspeak-analog Commands

@deffn {Interactive Command} emacspeak-analog-backward-field-or-char  nil
Move back to next field if field specification is available.
Otherwise move to previous char.
Speak field or char moved to.
@end deffn

@deffn {Interactive Command} emacspeak-analog-forward-field-or-char  nil
Move forward to next field if field specification is available.
Otherwise move to next char.
Speak field or char moved to.
@end deffn

@deffn {Interactive Command} emacspeak-analog-next-line  nil
Move down and speak current field.
@end deffn

@deffn {Interactive Command} emacspeak-analog-previous-line  nil
Move up and speak current field.
@end deffn

@deffn {Interactive Command} emacspeak-analog-speak-this-field  nil
Speak current field.
@end deffn

@subsection emacspeak-analog Options

@defvar {User Option} emacspeak-analog-entry-header-personality
Personality used for analog-entry-header-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@node emacspeak-ansi-color
@section emacspeak-ansi-color

Module ansi-color (bundled with Emacs 21)
handles ansi escape sequences and turns them into
appropriate faces.
This is useful in things like shell buffers.
This module maps ansi codes to the appropriate voices.

@node emacspeak-apt-sources
@section emacspeak-apt-sources

This module speech-enables apt-sources.el
that is included in the debian-el package
and provides a major mode for editing
APT's sources.list file.

@node emacspeak-apt-utils
@section emacspeak-apt-utils

This module speech-enables apt-utils.el
that is included in the debian-el package
and provides a nice interface to searching and browsing
Debian packages.

@subsection emacspeak-apt-utils Commands

@deffn {Interactive Command} emacspeak-apt-utils-grab-package-at-point  nil
Copy package under point to kill ring.
@end deffn

@node emacspeak-arc
@section emacspeak-arc

Auditory interface to archive mode
This lets Emacs manipulate package files such as .zip and .jar files.

@subsection emacspeak-arc Commands

@deffn {Interactive Command} emacspeak-arc-speak-file-modification-time  nil
Speak modification time of the file on current line
@end deffn

@deffn {Interactive Command} emacspeak-arc-speak-file-name  nil
Speak the name of the file on current line
@end deffn

@deffn {Interactive Command} emacspeak-arc-speak-file-permissions  nil
Speak permissions of file current entry 
@end deffn

@deffn {Interactive Command} emacspeak-arc-speak-file-size  nil
Speak the size of the file on current line
@end deffn

@node emacspeak-auctex
@section emacspeak-auctex

Speech-enables the AucTeX package.
AucTeX, now available from ELPA, has been my authoring environment of choice for writing LaTeX since 1991.

@node emacspeak-aumix
@section emacspeak-aumix

Provides an AUI to setting up the auditory display via AUMIX
This module is presently Linux specific

@subsection emacspeak-aumix Commands

@deffn {Interactive Command} emacspeak-aumix  nil
Setup output parameters of the auditory display.
 Launch this tool while you have auditory output on
multiple channels playing so you can
adjust the settings to your preference.  Hit q to quit when
you are done.
@end deffn

@deffn {Interactive Command} emacspeak-aumix-edit  nil
Edit aumix settings interactively. 
Run command M-x emacspeak-aumix-reset
after saving the settings to have them take effect.
@end deffn

@deffn {Interactive Command} emacspeak-aumix-reset  nil
Reset to default audio settings.
@end deffn

@deffn {Interactive Command} emacspeak-aumix-volume-decrease  (&optional gain)
Decrease overall volume. 
@end deffn

@deffn {Interactive Command} emacspeak-aumix-volume-increase  (&optional gain)
Increase overall volume. 
@end deffn

@deffn {Interactive Command} emacspeak-aumix-wave-decrease  (&optional gain)
Decrease volume of wave output. 
@end deffn

@deffn {Interactive Command} emacspeak-aumix-wave-increase  (&optional gain)
Increase volume of wave output. 
@end deffn

@subsection emacspeak-aumix Options

@defvar {User Option} emacspeak-alsactl-program
ALSA sound controller used to restore settings.

@end defvar

@defvar {User Option} emacspeak-aumix-reset-options
*Option to pass to aumix for resetting to default values.

@end defvar

@defvar {User Option} emacspeak-aumix-settings-file
*Name of file containing personal aumix settings.

@end defvar

@node emacspeak-bbc
@section emacspeak-bbc

BBC: http://www.bbc.co.uk This module uses
publicly available REST APIs to implement a native Emacs
client for browsing and listening to BBC programs.

See http://www.bbc.co.uk/programmes/developers
The BBC API helps locate a PID for a given program stream.
That PID is converted to a streamable URL via the converter:
http://www.iplayerconverter.co.uk/convert.aspx
Conversion: http://www.iplayerconverter.co.uk/convert.aspx?pid=%s
The result of the above conversion gives a Web page with a
set of links,
We hand the link to the raw stream  to mplayer.

@subsection emacspeak-bbc Commands

@deffn {Interactive Command} emacspeak-bbc  (&optional genre)
Launch BBC Interaction.
See http://www.bbc.co.uk/radio/stations for full list of stations.
See http://www.bbc.co.uk/radio/programmes/genres for list of genres.
Interactive prefix arg filters  content by genre.
@end deffn

@deffn {Interactive Command} emacspeak-bbc-genre  nil
Launch BBC Interaction for specified Genre.
@end deffn

@node emacspeak-bbdb
@section emacspeak-bbdb

Speech-enables BBDB.
I have used BBDB to manage email address and contact information since 1991.

@node emacspeak-bibtex
@section emacspeak-bibtex

Speech extensions for bibtex mode.

@node emacspeak-bookmark
@section emacspeak-bookmark

Speech enable bookmarks

@node emacspeak-bookshare
@section emacspeak-bookshare

BOOKSHARE == http://www.bookshare.org
provides book access to print-disabled users.
It provides a simple Web  API http://developer.bookshare.org
This module implements an Emacspeak Bookshare client.
For now, users will need to get their own API key
This version needs Emacs with libxml2 support
You need Emacs 24.1 or higher.

@subsection emacspeak-bookshare Commands

@deffn {Interactive Command} emacspeak-bookshare  nil
@kbd{C-e C-b}

Bookshare  Interaction.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-action  nil
Call action specified by  invoking key.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-author-search  (query &optional category)
Perform a Bookshare author search.
Interactive prefix arg filters search by category.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-browse  nil
Browse Bookshare.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-browse-latest  nil
Return latest books.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-browse-popular  (&optional category)
Browse popular books.
Optional interactive prefix arg prompts for a category to use as a filter.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-download-brf  (id target)
Download Daisy format of specified book to target location.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-download-brf-at-point  nil
Download Braille version of book under point.
Target location is generated from author and title.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-download-daisy  (id target)
Download Daisy format of specified book to target location.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-download-daisy-at-point  nil
Download Daisy version of book under point.
Target location is generated from author and title.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-download-internal  (url target)
Download content  to target location.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-eww  (directory)
Render complete book using EWW if available.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-expand-at-point  nil
Expand entry at point by retrieving metadata.
Once retrieved, memoize to avoid multiple retrievals.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-extract-and-view  (url)
Extract content referred to by link under point, and render via the browser.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-extract-xml  (url)
Extract content referred to by link under point, and return an XML buffer.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-flush-lines  (regexp)
Flush lines matching regexp in Bookshare buffer.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-fulltext  (directory)
Display fulltext contents of  book in specified directory.
Useful for fulltext search in a book.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-fulltext-search  (query)
Perform a Bookshare fulltext search.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-get-more-results  nil
Get next page of results for last query.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-id-search  (query)
Perform a Bookshare id search.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-isbn-search  (query)
Perform a Bookshare isbn search.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-list-preferences  nil
Return preference list.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-mode  nil
A Bookshare front-end for the Emacspeak desktop.

The Emacspeak Bookshare front-end is launched by command
emacspeak-bookshare bound to C-e C-b

This command switches to a special buffer that has Bookshare
commands bounds to single keystrokes-- see the key-binding list at
the end of this description. Use Emacs online help facility to
look up help on these commands.

emacspeak-bookshare-mode provides the necessary functionality to
Search and download Bookshare material,
Manage a local library of downloaded Bookshare content,
And commands to easily read newer Daisy books from Bookshare.

Here is a list of all emacspeak Bookshare commands  with their key-bindings:
a Author Search
A Author/Title Search
t Title Search
s Full Text Search
d Date Search
b Browse

key             binding
---             -------

RET		emacspeak-bookshare-toc-at-point
ESC		Prefix Command
SPC		emacspeak-bookshare-expand-at-point
+		emacspeak-bookshare-action
A		emacspeak-bookshare-action
B		emacspeak-bookshare-download-brf-at-point
C		emacspeak-bookshare-fulltext
D		emacspeak-bookshare-download-daisy-at-point
E		emacspeak-bookshare-eww
I		emacspeak-bookshare-action
P		emacspeak-bookshare-action
S		emacspeak-bookshare-action
U		emacspeak-bookshare-unpack-at-point
V		emacspeak-bookshare-view-at-point
[		backward-page
]		forward-page
a		emacspeak-bookshare-action
b		emacspeak-bookshare-browse
c		emacspeak-bookshare-toc-at-point
d		emacspeak-bookshare-action
e		emacspeak-epub
f		emacspeak-bookshare-flush-lines
i		emacspeak-bookshare-action
j		next-line
k		previous-line
l .. m		emacspeak-bookshare-action
p		emacspeak-bookshare-action
q		bury-buffer
s .. t		emacspeak-bookshare-action
v		emacspeak-bookshare-view

M-n		emacspeak-bookshare-next-result
M-p		emacspeak-bookshare-previous-result

In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `emacspeak-bookshare-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-next-result  nil
Move to next result.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-periodical-list  nil
Return list of periodicals.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-previous-result  nil
Move to previous result.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-set-preference  (preference-id value)
Set preference preference-id to value.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-sign-out  nil
Sign out, clearing password.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-since-search  (query &optional category)
Perform a Bookshare date  search.
Optional interactive prefix arg filters by category.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-title-search  (query &optional category)
Perform a Bookshare title search.
Interactive prefix arg filters search by category.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-title/author-search  (query)
Perform a Bookshare title/author  search.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-toc  (directory)
View TOC for book in specified directory.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-toc-at-point  nil
View TOC for book at point.
Make sure it's downloaded and unpacked first.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-unpack-at-point  nil
Unpack downloaded content if necessary.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-url-executor  (url)
Custom URL executor for use in Bookshare TOC.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-version-handler  (&rest ignore)
Do nothing and return nil.
This function accepts any number of arguments, but ignores them.

(fn &rest IGNORE)
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-view  (directory)
View book in specified directory.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-view-at-point  nil
View book at point.
Make sure it's downloaded and unpacked first.
@end deffn

@deffn {Interactive Command} emacspeak-bookshare-view-page-range  (url)
Play pages in specified page range from URL.
@end deffn

@subsection emacspeak-bookshare Options

@defvar {User Option} emacspeak-bookshare-api-key
Web API  key for this application.
See http://developer.bookshare.org/docs for details on how to get
  an API key. 

@end defvar

@defvar {User Option} emacspeak-bookshare-browser-function
Function to display Bookshare Book content in a WWW browser.
This is used by the various Bookshare view commands to display
  content from Daisy books.

@end defvar

@defvar {User Option} emacspeak-bookshare-directory
Customize this to the root of where books are organized.

@end defvar

@defvar {User Option} emacspeak-bookshare-downloads-directory
Customize this to the root of where books are organized.

@end defvar

@defvar {User Option} emacspeak-bookshare-html-to-text-command
Command to convert html to text on stdin.

@end defvar

@defvar {User Option} emacspeak-bookshare-user-id
Bookshare user Id.

@end defvar

@defvar {User Option} emacspeak-bookshare-xslt
Name of bookshare  XSL transform.

@end defvar

@node emacspeak-browse-kill-ring
@section emacspeak-browse-kill-ring

Browse the kill ring using 
browse-kill-ring.el - interactively insert items from kill-ring (by Colin Walters)

@node emacspeak-bs
@section emacspeak-bs

speech-enable bs.el -- an alternative to Emacs' default  list-buffers

@subsection emacspeak-bs Commands

@deffn {Interactive Command} emacspeak-bs-speak-buffer-line  nil
Speak information about this buffer
@end deffn

@node emacspeak-buff-menu
@section emacspeak-buff-menu

Speech-enable buffer-menus.

@subsection emacspeak-buff-menu Commands

@deffn {Interactive Command} emacspeak-list-buffers-next-line  (count)
Speech enabled buffer menu navigation
@end deffn

@deffn {Interactive Command} emacspeak-list-buffers-previous-line  (count)
Speech enabled buffer menu navigation
@end deffn

@deffn {Interactive Command} emacspeak-list-buffers-speak-buffer-line  nil
Speak information about this buffer
@end deffn

@deffn {Interactive Command} emacspeak-list-buffers-speak-buffer-name  nil
Speak the name of the buffer on this line
@end deffn

@node emacspeak-c
@section emacspeak-c

Make some of C and C++ mode more emacspeak friendly
Works with both boring c-mode
and the excellent cc-mode

@subsection emacspeak-c Commands

@deffn {Interactive Command} emacspeak-c-speak-semantics  nil
Speak the C semantics of this line. 
@end deffn

@node emacspeak-calc
@section emacspeak-calc

This module extends the Emacs Calculator.
Extensions are minimal.
We force a calc-load-everything,
And use an after advice on this function
To fix all of calc's interactive functions

@node emacspeak-calculator
@section emacspeak-calculator

Speech enable desktop calculator 

@node emacspeak-calendar
@section emacspeak-calendar

This module speech enables the Emacs Calendar.
Speech enabling is not the same as speaking the screen:
This is an excellent example of the advantages of speech-enabled  interaction.

@subsection emacspeak-calendar Commands

@deffn {Interactive Command} emacspeak-appt-repeat-announcement  nil
@kbd{C-e A}

Speaks the most recently displayed appointment message if any.
@end deffn

@deffn {Interactive Command} emacspeak-calendar-setup-sunrise-sunset  nil
Set up geo-coordinates using Google Maps reverse geocoding.
To use, configure variable gweb-my-address via M-x customize-variable.
@end deffn

@deffn {Interactive Command} emacspeak-calendar-speak-date  nil
Speak the date under point when called in Calendar Mode. 
@end deffn

@subsection emacspeak-calendar Options

@defvar {User Option} emacspeak-calendar-mark-personality
Personality to use when showing marked calendar entries.

@end defvar

@node emacspeak-cedet
@section emacspeak-cedet

CEDET consists of speedbar semantic ede and friends.
This module speech enables new functionality in semantic,
senator and friends

@node emacspeak-checkdoc
@section emacspeak-checkdoc

Speech-enable checkdoc.el

@node emacspeak-cmuscheme
@section emacspeak-cmuscheme

speech-enable scheme support 

@node emacspeak-company
@section emacspeak-company

COMPANY -mode: Complete Anything Support for emacs.
This module provides an Emacspeak Company Front-end,
And advises the needed interactive commands in Company.

@node emacspeak-compile
@section emacspeak-compile

This module makes compiling code from inside Emacs speech friendly.
It is an example of how a little amount of code can make Emacspeak even better.

@subsection emacspeak-compile Commands

@deffn {Interactive Command} emacspeak-compilation-speak-error  nil
Speech feedback about the compilation error. 
@end deffn

@subsection emacspeak-compile Options

@defvar {User Option} emacspeak-compilation-column-number-voice
Personality used for compilation-column-number
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-compilation-error-voice
Personality used for compilation-error
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-compilation-info-voice
Personality used for compilation-info
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-compilation-line-number-voice
Personality used for compilation-line-number
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-compilation-warning-voice
Personality used for compilation-warning
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@node emacspeak-cperl
@section emacspeak-cperl

Provide additional advice to CPerl mode 

@node emacspeak-custom
@section emacspeak-custom

Advise custom to speak.
most of the work is actually done by emacspeak-widget.el
which speech-enables the widget libraries.

@subsection emacspeak-custom Commands

@deffn {Interactive Command} emacspeak-custom-goto-group  nil
Jump to custom group when in a customization buffer.
@end deffn

@deffn {Interactive Command} emacspeak-custom-goto-toolbar  nil
Jump to custom toolbar when in a customization buffer.
@end deffn

@node emacspeak-dbus
@section emacspeak-dbus

Set up Emacspeak to respond to DBus notifications

@node emacspeak-desktop
@section emacspeak-desktop

advice desktop package

@node emacspeak-dictionary
@section emacspeak-dictionary

Speech-enables emacs client for accessing dictionary
server at dict.org:2628

@node emacspeak-diff-mode
@section emacspeak-diff-mode

DIFF-MODE  support.

@node emacspeak-dired
@section emacspeak-dired

This module speech enables dired.
It reduces the amount of speech you hear:
Typically you hear the file names as you move through the dired buffer
Voicification is used to indicate directories, marked files etc.

@subsection emacspeak-dired Commands

@deffn {Interactive Command} emacspeak-dired-label-fields  nil
Labels the fields of the listing in the dired buffer.
Currently is a no-op  unless
unless `dired-listing-switches' contains -l
@end deffn

@deffn {Interactive Command} emacspeak-dired-show-file-type  (&optional file deref-symlinks)
Displays type of current file by running command file.
Like Emacs' built-in dired-show-file-type but allows user to customize
options passed to command `file'.
@end deffn

@deffn {Interactive Command} emacspeak-dired-speak-file-access-time  nil
Speak access time  of the current file.
@end deffn

@deffn {Interactive Command} emacspeak-dired-speak-file-modification-time  nil
Speak modification time  of the current file.
@end deffn

@deffn {Interactive Command} emacspeak-dired-speak-file-permissions  nil
Speak the permissions of the current file.
@end deffn

@deffn {Interactive Command} emacspeak-dired-speak-file-size  nil
Speak the size of the current file.
On a directory line, run du -s on the directory to speak its size.
@end deffn

@deffn {Interactive Command} emacspeak-dired-speak-header-line  nil
Speak the header line of the dired buffer. 
@end deffn

@deffn {Interactive Command} emacspeak-dired-speak-symlink-target  nil
Speaks the target of the symlink on the current line.
@end deffn

@subsection emacspeak-dired Options

@defvar {User Option} emacspeak-dired-file-cmd-options
Options passed to Unix builtin `file' command.

@end defvar

@node emacspeak-dismal
@section emacspeak-dismal

emacspeak extensions to the dismal spreadsheet. 

@subsection emacspeak-dismal Commands

@deffn {Interactive Command} emacspeak-dismal-backward-col-and-summarize  (cols)
Move backward by arg columns
 (the previous column by default)and summarize it.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-backward-row-and-summarize  (rows)
Move backward by arg rows
 (the previous row by default)and summarize it.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-col-summarize  nil
Summarizes a col using the specification in list
emacspeak-dismal-col-summarizer-list
@end deffn

@deffn {Interactive Command} emacspeak-dismal-display-cell-expression  nil
Display the expression in the message area
@end deffn

@deffn {Interactive Command} emacspeak-dismal-display-cell-value  nil
Display the cell value in the message area
@end deffn

@deffn {Interactive Command} emacspeak-dismal-display-cell-with-col-header  nil
Display current cell along with its column header.
The `column header' is the entry in row 0.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-display-cell-with-row-header  nil
Displays current cell along with its row header.
The `row header' is the entry in column 0.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-forward-col-and-summarize  (cols)
Move forward by arg columns
 (the next column by default)and summarize it.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-forward-row-and-summarize  (rows)
Move forward by arg rows
 (the next row by default)and summarize it.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-row-summarize  nil
Summarizes a row using the specification in list
emacspeak-dismal-row-summarizer-list
@end deffn

@deffn {Interactive Command} emacspeak-dismal-set-col-summarizer-list  nil
Specify or reset col summarizer list.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-set-row-summarizer-list  nil
Specify or reset row summarizer list.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-set-sheet-summarizer-list  nil
Specify or reset sheet summarizer list.
@end deffn

@deffn {Interactive Command} emacspeak-dismal-sheet-summarize  nil
Summarizes a sheet using the specification in list
emacspeak-dismal-sheet-summarizer-list
@end deffn

@subsection emacspeak-dismal Options

@defvar {User Option} emacspeak-dismal-value-personality
Personality used for speaking cell values in summaries.

@end defvar

@node emacspeak-dmacro
@section emacspeak-dmacro

Provide additional advice to dmacro.
dmacro is used to write code rapidly and consistently. 

@node emacspeak-ecb
@section emacspeak-ecb

The ECB is an Emacs Class Browser.
This module speech-enables ECB

@subsection emacspeak-ecb Commands

@deffn {Interactive Command} emacspeak-ecb-speak-window-directories  nil
Speak contents of directories window.
@end deffn

@deffn {Interactive Command} emacspeak-ecb-speak-window-history  nil
Speak contents of history window.
@end deffn

@deffn {Interactive Command} emacspeak-ecb-speak-window-methods  nil
Speak contents of methods window.
@end deffn

@deffn {Interactive Command} emacspeak-ecb-speak-window-sources  nil
Speak contents of sources window.
@end deffn

@deffn {Interactive Command} emacspeak-ecb-tree-backspace  nil
Back up during incremental search in tree buffers.
@end deffn

@deffn {Interactive Command} emacspeak-ecb-tree-clear  nil
Clear search pattern during incremental search in tree buffers.
@end deffn

@deffn {Interactive Command} emacspeak-ecb-tree-expand-common-prefix  nil
Expand to longest common prefix in tree buffer.
@end deffn

@deffn {Interactive Command} emacspeak-ecb-tree-shift-return  nil
Do shift return in ECB tree browser.
@end deffn

@node emacspeak-eclim
@section emacspeak-eclim

ECLIM ==  Eclipse/Vim integration.
http://www.eclim.org turns Eclipse into a headless server that can be called from other programs.
Package Emacs-Eclim connects Emacs to Eclim.
Package emacspeak-eclim speech-enables emacs-eclim.

@node emacspeak-ediary
@section emacspeak-ediary

ediary is a special mode for editing your.diary file.
This module speech-enables ediary

@node emacspeak-ediff
@section emacspeak-ediff

Ediff provides a nice visual interface to diff. ;;;Comparing and
patching files is easy with ediff when you can see the screen.
This module provides Emacspeak extensions to work fluently
with ediff. Try it out, it's an excellent example of why
Emacspeak is better than a traditional screenreader. This module
was originally written to interface to the old ediff.el bundled
with GNU Emacs 19.28 and earlier. It has been updated to work
with the newer and much larger ediff system found in Emacs 19.29
and later.

@subsection emacspeak-ediff Commands

@deffn {Interactive Command} emacspeak-ediff-speak-current-difference  nil
Speak the current difference
@end deffn

@node emacspeak-ein
@section emacspeak-ein

EIN ==  Emacs IPython Notebook
You can install package EIN via ELPA
This module speech-enables EIN

@subsection emacspeak-ein Commands

@deffn {Interactive Command} emacspeak-ein-speak-current-cell  nil
Speak current cell.
@end deffn

@subsection emacspeak-ein Options

@defvar {User Option} emacspeak-ein:cell-heading-1-voice
Personality used for ein:cell-heading-1
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-ein:cell-heading-2-voice
Personality used for ein:cell-heading-2
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-ein:cell-heading-3-voice
Personality used for ein:cell-heading-3
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-ein:cell-heading-4-voice
Personality used for ein:cell-heading-4
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-ein:cell-input-area-voice
Personality used for ein:cell-input-area
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-ein:cell-input-prompt-voice
Personality used for ein:cell-input-prompt
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-ein:cell-output-prompt-voice
Personality used for ein:cell-output-prompt
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-ein:cell-output-stderr-voice
Personality used for ein:cell-output-stderr
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@node emacspeak-elfeed
@section emacspeak-elfeed

ELFEED ==  Feed Reader for Emacs.
Install from elpa
M-x package-install  elfeed

@subsection emacspeak-elfeed Commands

@deffn {Interactive Command} emacspeak-elfeed-eww-entry-at-point  nil
Display current article in EWW.
@end deffn

@deffn {Interactive Command} emacspeak-elfeed-filter-entry-at-point  nil
Display current article after filtering.
@end deffn

@deffn {Interactive Command} emacspeak-elfeed-next-entry  nil
Move to next entry and speak it.
@end deffn

@deffn {Interactive Command} emacspeak-elfeed-previous-entry  nil
Move to previous entry and speak it.
@end deffn

@deffn {Interactive Command} emacspeak-elfeed-speak-entry-at-point  nil
Speak entry at point.
@end deffn

@subsection emacspeak-elfeed Options

@defvar {User Option} emacspeak-elfeed-search-date-personality
Personality used for elfeed-search-date-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-elfeed-search-feed-personality
Personality used for elfeed-search-feed-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-elfeed-search-tag-personality
Personality used for elfeed-search-tag-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-elfeed-search-title-personality
Personality used for elfeed-search-title-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@node emacspeak-emms
@section emacspeak-emms

Speech-enables EMMS --- the Emacs equivalent of XMMS
See
http://savannah.gnu.org/project/emms
EMMS is under active development,
to get the current CVS version, use Emacspeak command
M-x emacspeak-cvs-gnu-get-project-snapshot RET emms RET

@subsection emacspeak-emms Commands

@deffn {Interactive Command} emacspeak-emms-speak-current-track  nil
Speak current track.
@end deffn

@node emacspeak-enriched
@section emacspeak-enriched

emacspeak extensions to voiceify rich  text.

@subsection emacspeak-enriched Commands

@deffn {Interactive Command} emacspeak-enriched-voiceify-faces  (start end)
Map base fonts to voices.
Useful in voiceifying rich text.
@end deffn

@node emacspeak-entertain
@section emacspeak-entertain

Auditory interface to misc games

@subsection emacspeak-entertain Commands

@deffn {Interactive Command} emacspeak-hangman-speak-guess  nil
Speak current guessed string. 
@end deffn

@deffn {Interactive Command} emacspeak-hangman-speak-statistics  nil
Speak statistics.
@end deffn

@subsection emacspeak-entertain Options

@defvar {User Option} emacspeak-mpuz-solved-personality
Personality used for mpuz-solved-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-mpuz-trivial-personality
Personality used for mpuz-trivial-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-mpuz-unsolved-personality
Personality used for mpuz-unsolved-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@node emacspeak-eperiodic
@section emacspeak-eperiodic

eperiodic produces an interactive periodic table of elements
and can be found at 
http://vegemite.chem.nottingham.ac.uk/~matt/emacs/eperiodic.el

@subsection emacspeak-eperiodic Commands

@deffn {Interactive Command} emacspeak-eperiodic-goto-property-section  nil
Mark position and jump to properties section.
@end deffn

@deffn {Interactive Command} emacspeak-eperiodic-next-line  nil
Move to next row and speak element.
@end deffn

@deffn {Interactive Command} emacspeak-eperiodic-play-description  nil
Play audio description from WebElements.
@end deffn

@deffn {Interactive Command} emacspeak-eperiodic-previous-line  nil
Move to next row and speak element.
@end deffn

@deffn {Interactive Command} emacspeak-eperiodic-speak-current-element  nil
Speak element at point.
@end deffn

@subsection emacspeak-eperiodic Options

@defvar {User Option} emacspeak-eperiodic-discovered-after-personality
Personality used for eperiodic-discovered-after-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-discovered-before-personality
Personality used for eperiodic-discovered-before-face
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-discovered-in-personality
Personality used for eperiodic-discovered-in-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-f-block-personality
Personality used for eperiodic-f-block-face
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-gas-personality
Personality used for eperiodic-gas-face
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-group-number-personality
Personality used for eperiodic-group-number-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-header-personality
Personality used for eperiodic-header-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-liquid-personality
Personality used for eperiodic-liquid-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-media-location
Location of streaming media describing elements.

@end defvar

@defvar {User Option} emacspeak-eperiodic-p-block-personality
Personality used for eperiodic-p-block-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-period-number-personality
Personality used for eperiodic-period-number-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-s-block-personality
Personality used for eperiodic-s-block-face
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-solid-personality
Personality used for eperiodic-solid-face
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-eperiodic-unknown-personality
Personality used for eperiodic-unknown-face
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@node emacspeak-epub
@section emacspeak-epub

In celebration of a million books and more to read from
Google Books
The EPubs format is slightly simpler than full Daisy ---
(see) emacspeak-daisy.el
Since it only needs one level of indirection (no audio,
therefore no smil). This module is consequently simpler than
emacspeak-daisy.el.
This module will eventually  implement the Google Books  API
--- probably by invoking the yet-to-be-written gbooks.el in emacs-g-client
As we move to epub-3, this module will bring back audio layers etc., perhaps via a simplified smil implementation.

@subsection emacspeak-epub Commands

@deffn {Interactive Command} emacspeak-calibre-mode  nil
A Calibre Front-end.
Letters do not insert themselves; instead, they are commands.

key             binding
---             -------

RET		emacspeak-epub-calibre-dired-at-point
<Return>	emacspeak-epub-calibre-dired-at-point

In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `emacspeak-calibre-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-epub  nil
@kbd{C-e g}

EPub  Interaction.
For detailed documentation, see M-x emacspeak-epub-mode
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-add-directory  (directory &optional recursive)
Add EPubs found in specified directory to the bookshelf.
Interactive prefix arg searches recursively in directory.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-add-epub  (epub-file)
Add epub file to current bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-calibre-author  (pattern)
Add results of an author search to current bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-calibre-search  (pattern)
Add results of an title/author search to current bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-calibre-title  (pattern)
Add results of an title search to current bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-clear  nil
Clear all books from bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-load  nil
Load bookshelf metadata from disk.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-open  (bookshelf)
Load bookshelf metadata from specified bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-open-epub  (epub-file)
Open epub file and add it to current bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-redraw  (&optional author-first)
Redraw Bookshelf.
Optional interactive prefix arg author-first prints author at the
  left.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-refresh  nil
Refresh and redraw bookshelf.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-remove-directory  (directory &optional recursive)
Remove EPubs found in specified directory from the bookshelf.
Interactive prefix arg searches recursively in directory.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-remove-this-book  nil
Remove the book on current line from this bookshelf.
No book files are deleted.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-rename  (name &optional overwrite)
Saves current bookshelf to  specified name.
Interactive prefix arg `overwrite' will overwrite existing file.
@end deffn

@deffn {Interactive Command} emacspeak-epub-bookshelf-save  nil
Save bookshelf metadata.
@end deffn

@deffn {Interactive Command} emacspeak-epub-browse-files  (epub)
Browse list of HTML files in an EPub.
Useful if table of contents in toc.ncx is empty.
@end deffn

@deffn {Interactive Command} emacspeak-epub-calibre-dired-at-point  nil
Open directory containing current result.
@end deffn

@deffn {Interactive Command} emacspeak-epub-calibre-results  nil
Show most recent Calibre search results.
@end deffn

@deffn {Interactive Command} emacspeak-epub-delete  nil
Delete EPub under point.
@end deffn

@deffn {Interactive Command} emacspeak-epub-eww  (epub-file)
Display entire book  using EWW from EPub in a buffer.
Suitable for text searches.
@end deffn

@deffn {Interactive Command} emacspeak-epub-fulltext  (epub-file)
Display fulltext from EPub in a buffer.
Suitable for text searches.
@end deffn

@deffn {Interactive Command} emacspeak-epub-google  (query)
Search for Epubs from Google Books.
@end deffn

@deffn {Interactive Command} emacspeak-epub-gutenberg-catalog  (&optional refresh)
Open Gutenberg catalog.
Fetch if needed, or if refresh is T.
@end deffn

@deffn {Interactive Command} emacspeak-epub-gutenberg-download  (book-id)
Download specified EBook to local cache
@end deffn

@deffn {Interactive Command} emacspeak-epub-mode  nil
An EPub Front-end.
Letters do not insert themselves; instead, they are commands.

key             binding
---             -------

C-a		emacspeak-epub-bookshelf-add-directory
C-d		emacspeak-epub-bookshelf-remove-directory
C-k		emacspeak-epub-delete
C-l		emacspeak-epub-bookshelf-redraw
RET		emacspeak-epub-open
C-o		emacspeak-epub-bookshelf-open-epub
C-x		Prefix Command
ESC		Prefix Command
/		emacspeak-epub-calibre-results
A		emacspeak-epub-bookshelf-calibre-author
C		emacspeak-epub-gutenberg-catalog
G		emacspeak-epub-gutenberg-download
S		emacspeak-epub-bookshelf-calibre-search
T		emacspeak-epub-bookshelf-calibre-title
a		emacspeak-epub-bookshelf-add-epub
b		emacspeak-epub-bookshelf-open
c		emacspeak-epub-bookshelf-clear
d		emacspeak-epub-bookshelf-remove-this-book
e		emacspeak-epub-eww
f		emacspeak-epub-browse-files
g		emacspeak-epub-google
n		next-line
o		emacspeak-epub-open
p		previous-line
r		emacspeak-epub-bookshelf-rename
t		emacspeak-epub-fulltext

M-s		emacspeak-epub-bookshelf-save

C-x C-q		emacspeak-epub-bookshelf-refresh
C-x C-s		emacspeak-epub-bookshelf-save

In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `emacspeak-epub-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-epub-next  nil
Move to next book.
@end deffn

@deffn {Interactive Command} emacspeak-epub-open  (epub-file)
Open specified Epub.
Filename may need to  be shell-quoted when called from Lisp.
@end deffn

@deffn {Interactive Command} emacspeak-epub-previous  nil
Move to previous book.
@end deffn

@deffn {Interactive Command} emacspeak-epub-url-executor  (url)
Custom URL executor for use in EPub Mode.
@end deffn

@subsection emacspeak-epub Options

@defvar {User Option} emacspeak-epub-bookshelf-directory
Directory where we keep .bsf files defining various bookshelves.

@end defvar

@defvar {User Option} emacspeak-epub-calibre-root-dir
Root of Calibre library.

@end defvar

@defvar {User Option} emacspeak-epub-calibre-sqlite
Path to sqlite3.

@end defvar

@defvar {User Option} emacspeak-epub-gutenberg-mirror
Base URL  for Gutenberg mirror.

@end defvar

@defvar {User Option} emacspeak-epub-gutenberg-suffix
Suffix of book type we retrieve.

@end defvar

@defvar {User Option} emacspeak-epub-html-to-text-command
Command to convert html to text on stdin.

@end defvar

@defvar {User Option} emacspeak-epub-library-directory
Directory under which we store Epubs.

@end defvar

@node emacspeak-erc
@section emacspeak-erc

erc.el is a modern Emacs client for IRC including color
and font locking support. 
erc.el - an Emacs IRC client (by Alexander L. Belikoff)
http://www.cs.cmu.edu/~berez/irc/erc.el

@subsection emacspeak-erc Commands

@deffn {Interactive Command} emacspeak-erc-add-name-to-monitor  (name &optional quiten-pronunciation)
Add people to monitor in this room.
Optional interactive prefix  arg defines a pronunciation that
  silences speaking of this perso's name.
@end deffn

@deffn {Interactive Command} emacspeak-erc-delete-name-from-monitor  (name)
Remove name to monitor in this room.
@end deffn

@deffn {Interactive Command} emacspeak-erc-setup-cricket-rules  nil
Set up #cricket channels.
@end deffn

@deffn {Interactive Command} emacspeak-erc-toggle-my-monitor  (&optional prefix)
Toggle state of ERC  monitor of my messages.
Interactive PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-erc-toggle-room-monitor  (&optional prefix)
Toggle state of ERC room monitor.
Interactive 
PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-erc-toggle-speak-all-participants  (&optional prefix)
Toggle state of ERC speak all participants..
Interactive 
PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end deffn

@subsection emacspeak-erc Options

@defvar {User Option} emacspeak-erc-ignore-notices
Set to T if you dont want to see notification  messages from the
server.

@end defvar

@defvar {User Option} emacspeak-erc-my-nick
My IRC nick.

@end defvar

@defvar {User Option} emacspeak-erc-speak-all-participants
Speak all things said if t.

@end defvar

@node emacspeak-eshell
@section emacspeak-eshell

EShell is a shell implemented entirely in Emacs Lisp.
It is part of emacs 21 --and can also be used under
Emacs 20.
This module speech-enables EShell

@subsection emacspeak-eshell Options

@defvar {User Option} emacspeak-eshell-ls-use-personalities
Indicates if ls in eshell uses different voice
personalities.

@end defvar

@node emacspeak-espn
@section emacspeak-espn

ESPN ==  ESPN Sport Network.
API:   http://developer.espn.com/overview
Get yourself an API key and set it via custom.

@subsection emacspeak-espn Options

@defvar {User Option} emacspeak-espn-api-key
Web API  key for this application.

@end defvar

@node emacspeak-ess
@section emacspeak-ess

ESS == Emacs Speaks Statistics
This module makes ESS speak.

@node emacspeak-etable
@section emacspeak-etable

table.el provides rich table editing for emacs.
this module speech-enables table.el

@subsection emacspeak-etable Commands

@deffn {Interactive Command} emacspeak-etable-speak-cell  nil
Speak current cell.
@end deffn

@node emacspeak-eterm
@section emacspeak-eterm

This module makes eterm talk.
Eterm is the new terminal emulator for Emacs.
Use of emacspeak with eterm really needs an info page.
At present, the only documentation is the source level documentation.
This module uses Control-t as an additional prefix key to allow the user
To move around the terminal and have different parts spoken. 

@subsection emacspeak-eterm Commands

@deffn {Interactive Command} emacspeak-eterm-copy-region-to-register  (&rest rest)
:around advice: `ad-Advice-emacspeak-eterm-copy-region-to-register'

Copy text from terminal to an Emacs REGISTER.
This copies  region delimited by the emacspeak eterm marker 
set by command M-x emacspeak-eterm-set-marker and the 
emacspeak eterm pointer to a register.

(fn REGISTER)
@end deffn

@deffn {Interactive Command} emacspeak-eterm-define-window  (id)
Prompt for a window ID.
The window is then define to be
the rectangle delimited by point and eterm mark.  This is to
be used when emacspeak is set to review mode inside an
eterm.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-describe-window  (id)
Describe an eterm  window.
Description indicates eterm window coordinates and whether it is stretchable
@end deffn

@deffn {Interactive Command} emacspeak-eterm-goto-line  (line)
Move emacspeak eterm pointer to a specified LINE.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-kill-ring-save-region  nil
Copy text from terminal to kill ring.
This copies  region delimited by the emacspeak eterm marker 
set by command M-x emacspeak-eterm-set-marker and the 
emacspeak eterm pointer.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-maybe-send-raw  nil
Send a raw character through if in the terminal buffer.
Execute end of line if
in a non eterm buffer if executed via C-e C-e
@end deffn

@deffn {Interactive Command} emacspeak-eterm-paste-register  (&rest rest)
:around advice: `ad-Advice-emacspeak-eterm-paste-register'

Paste contents of REGISTER at current location.
If the specified register contains text, then that text is
sent to the terminal as if it were typed by the user.

(fn REGISTER)
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-backward-word  (count)
Move the pointer backward  by words. 
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-down  (count)
Move the pointer down a line.
Argument COUNT specifies number of lines by which to move.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-forward-word  (count)
Move the pointer forward by words. 
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-left  (count)
Move the pointer left.
Argument COUNT specifies number of columns by which to move.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-right  (count)
Move the pointer right.
Argument COUNT specifies number of columns by which to move.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-to-bottom  nil
Move the pointer to the bottom  of the screen.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-to-cursor  nil
Move the pointer to the cursor.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-to-left-edge  nil
Move the pointer to the right edge.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-to-next-color-change  (&optional count)
Move the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-to-previous-color-change  (&optional count)
Move the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-to-right-edge  nil
Move the pointer to the right edge.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-to-top  nil
Move the pointer to the top of the screen.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-pointer-up  (count)
Move the pointer up a line.
Argument COUNT .specifies number of lines by which to move.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-remote-term  (host)
Start a terminal-emulator in a new buffer.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-search-backward  nil
Search backward on the terminal.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-search-forward  nil
Search forward on the terminal.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-set-filter-window  (flag)
Prompt for the id of a predefined window,
and set the `filter' window to it.
Non-nil interactive prefix arg `unsets' the filter window;
this is equivalent to having the entire terminal as the filter window (this is
what eterm starts up with).
Setting the filter window results in emacspeak  only monitoring screen
activity within the filter window.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-set-focus-window  (flag)
Prompt for the id of a predefined window,
and set the `focus' window to it.
Non-nil interactive prefix arg `unsets' the focus window;
this is equivalent to having the entire terminal as the focus window (this is
what eterm starts up with).
Setting the focus window results in emacspeak  monitoring screen
and speaking that window upon seeing screen activity.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-set-marker  nil
Set Emacspeak eterm marker.
This sets  the emacspeak eterm marker to the position pointed 
to by the emacspeak eterm pointer.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-cursor  nil
Speak cursor position.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-pointer  nil
Speak current pointer position.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-pointer-char  (&optional prefix)
Speak char under eterm pointer.
Pronounces character phonetically unless  called with a PREFIX arg.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-pointer-line  nil
Speak the line the pointer is on.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-pointer-word  nil
Speak the word  the pointer is on.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-predefined-window  nil
Speak a predefined eterm window between 1 and 10.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-screen  (&optional flag)
Speak the screen.  Default is to speak from the emacspeak pointer  to point.
Optional prefix arg FLAG causes region above
the Emacspeak pointer to be spoken.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-speak-window  (id)
Speak an eterm window.
Argument ID specifies the window.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-toggle-filter-window  nil
Toggle active state of filter window.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-toggle-focus-window  nil
Toggle active state of focus window.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-toggle-pointer-mode  (&optional prefix)
Toggle emacspeak eterm pointer mode.
With optional interactive prefix  arg, turn it on.
When emacspeak eterm is in pointer mode, the eterm read pointer
stays where it is rather than automatically moving to the terminal cursor when
there is terminal activity.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-toggle-review  nil
Toggle state of eterm review. 
In review mode, you can move around the terminal and listen to the contents 
without sending input to the terminal itself.
@end deffn

@deffn {Interactive Command} emacspeak-eterm-yank-window  (id)
Yank contents of  an eterm window at point.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-eterm-autospeak  (&optional prefix)
Toggle state of eterm autospeak.
When eterm autospeak is turned on and the terminal is in line mode,
all output to the terminal is automatically spoken. 
  Interactive prefix arg means toggle  the global default value, and then set the
  current local  value to the result. 
@end deffn

@subsection emacspeak-eterm Options

@defvar {User Option} emacspeak-eterm-bold-personality
Personality to indicate terminal bold.

@end defvar

@defvar {User Option} emacspeak-eterm-default-personality
Default personality for terminal.

@end defvar

@defvar {User Option} emacspeak-eterm-highlight-personality
Personality to show terminal highlighting.

@end defvar

@defvar {User Option} emacspeak-eterm-remote-hosts-cache
File where list of known remote hosts is cached

@end defvar

@defvar {User Option} emacspeak-eterm-underline-personality
Personality to indicate terminal underlining.

@end defvar

@node emacspeak-eudc
@section emacspeak-eudc

EUDC --Emacs Universal Directory Client 
provides a unified interface to directory servers
e.g. ldap servers
this module speech enables eudc 

@subsection emacspeak-eudc Commands

@deffn {Interactive Command} emacspeak-eudc-send-mail  nil
Send email to the address given by the current record. 
@end deffn

@subsection emacspeak-eudc Options

@defvar {User Option} emacspeak-eudc-attribute-value-personality
Personality t use for voiceifying attribute values. 

@end defvar

@node emacspeak-eww
@section emacspeak-eww

EWW == Emacs Web Browser
EWW is a light-weight Web browser built into Emacs 24.4.
This module speech-enables EWW

@subsection emacspeak-eww Commands

@deffn {Interactive Command} emacspeak-eww-google-knowledge-card  nil
Show just the knowledge card.
Warning, this is fragile, and depends on a stable id for the
  knowledge card.
@end deffn

@deffn {Interactive Command} emacspeak-eww-masquerade  nil
Toggle masquerade state.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-element  (el)
Move forward to the next specified element.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-element-from-history  nil
Uses element navigation history to decide where we jump.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-element-like-this  (element)
Moves to next element like current.
Prompts if content at point is enclosed by multiple elements.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-h  (&optional speak)
Move forward to the next h.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-h1  (&optional speak)
Move forward to the next h1.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-h2  (&optional speak)
Move forward to the next h2.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-h3  (&optional speak)
Move forward to the next h3.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-li  (&optional speak)
Move forward to the next li.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-ol  (&optional speak)
Move forward to the next ol.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-p  (&optional speak)
Move forward to the next p.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-table  (&optional speak)
Move forward to the next table.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-next-ul  (&optional speak)
Move forward to the next ul.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-element  (el)
Move backward  to the previous  specified element.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-element-from-history  nil
Uses element navigation history to decide where we jump.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-element-like-this  (element)
Moves to next element like current.
Prompts if content at point is enclosed by multiple elements.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-h  (&optional speak)
Move backward to the next h.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-h1  (&optional speak)
Move backward to the next h1.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-h2  (&optional speak)
Move backward to the next h2.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-h3  (&optional speak)
Move backward to the next h3.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-li  (&optional speak)
Move backward to the next li.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-ol  (&optional speak)
Move backward to the next ol.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-p  (&optional speak)
Move backward to the next p.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-table  (&optional speak)
Move backward to the next table.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-previous-ul  (&optional speak)
Move backward to the next ul.
Optional interactive prefix arg speaks the structural unit.
@end deffn

@deffn {Interactive Command} emacspeak-eww-restore  nil
Restore buffer to pre-filtered canonical state.
@end deffn

@deffn {Interactive Command} emacspeak-eww-speak-this-element  (element)
Speaks  to next element like current.
Uses most recently navigated structural unit.
Otherwise, prompts if content at point is enclosed by multiple elements.
@end deffn

@subsection emacspeak-eww Options

@defvar {User Option} emacspeak-eww-masquerade-as
User Agent string that is  sent when masquerading is on.

@end defvar

@defvar {User Option} emacspeak-eww-silence-images
Set to nil if you want EWW to load images.

@end defvar

@node emacspeak-facemenu
@section emacspeak-facemenu

Map standard faces such as bold and italic to voices.

@node emacspeak-feeds
@section emacspeak-feeds

This module provides Feeds support for Emacspeak

@subsection emacspeak-feeds Commands

@deffn {Interactive Command} emacspeak-feeds-add-feed  (title url type)
@kbd{C-e M-u}

Add specified feed to our feed store.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-archive-feeds  nil
Archive list of subscribed fees to personal resource directory.
Archiving is useful when synchronizing feeds across multiple machines.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-atom-display  (feed-url)
Display ATOM feed.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-browse  (feed)
@kbd{C-e C-u}

Browse specified  feed.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-fastload-feeds  nil
Fast load list of feeds from archive.
This directly  updates emacspeak-feeds from the archive, rather than adding those entries to the current set of subscribed feeds.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-find-feeds  (query)
Browse feeds matching specified query.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-lookup-and-view  (site)
Lookup feed URL for a site and browse result.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-opml-display  (feed-url)
Display OPML feed.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-restore-feeds  nil
Restore list of subscribed fees from  personal resource directory.
Archiving is useful when synchronizing feeds across multiple machines.
@end deffn

@deffn {Interactive Command} emacspeak-feeds-rss-display  (feed-url)
Display RSS feed.
@end deffn

@subsection emacspeak-feeds Options

@defvar {User Option} emacspeak-atom-view-xsl
XSL stylesheet used for viewing Atom Feeds.

@end defvar

@defvar {User Option} emacspeak-feeds
Table of RSS/Atom feeds.

@end defvar

@defvar {User Option} emacspeak-opml-view-xsl
XSL stylesheet used for viewing OPML  Feeds.

@end defvar

@defvar {User Option} emacspeak-rss-view-xsl
XSL stylesheet used for viewing RSS Feeds.

@end defvar

@node emacspeak-filtertext
@section emacspeak-filtertext

It is often useful  to view the results of filtering
large amounts of text.;;; Typically you do this with
various combinations of grep and friends.
When doing so it requires explicit effort to not destroy
the original text being filtered.
This module provides a textfilter utility that:
A) Copies over the selected text to a special filtertext
buffer
B) Implements a filtertext mode for that buffer that
allows easy application of filters
C: Provides commands for reverting to the original
unfiltered text
D: Provides commands for saving results from
intermediate filters.

@subsection emacspeak-filtertext Commands

@deffn {Interactive Command} emacspeak-filtertext  (start end)
@kbd{C-e ^}

Copy over text in region to special filtertext buffer in
preparation for interactively filtering text. 
@end deffn

@deffn {Interactive Command} emacspeak-filtertext-mode  nil
Major mode for FilterText interaction. 

key             binding
---             -------

=		keep-lines
^		flush-lines
r		emacspeak-filtertext-revert

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-filtertext-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-filtertext-revert  nil
Revert to original text.
@end deffn

@node emacspeak-find-dired
@section emacspeak-find-dired

find-dired is an emacs package for using UNIX find from emacs.
this module speech-enables find-dired

@node emacspeak-find-func
@section emacspeak-find-func

This module speech enables find-func

@node emacspeak-finder
@section emacspeak-finder

Inspired by finder.el
Not to be loaded at runtime.

@node emacspeak-fix-interactive
@section emacspeak-fix-interactive

Emacs commands that use the 'interactive spec
to read interactive arguments are a problem for Emacspeak.
 This is because the prompting for the arguments is done from C
See (callint.c) in the Emacs sources.
Advising the various input functions,
e.g. read-file-name therefore will not help.
This module defines a function that solves this problem.
emacspeak-fix-commands-that-use-interactive needs to be called
To speech enable such functions.

@subsection emacspeak-fix-interactive Commands

@deffn {Interactive Command} emacspeak-fix-all-recent-commands  nil
Fix recently loaded interactive commands.
This command looks through `load-history' and fixes commands if necessary.
Memoizes call in emacspeak-load-history-pointer to memoize this call. 
@end deffn

@deffn {Interactive Command} emacspeak-fix-commands-loaded-from  (module)
Fix all commands loaded from a specified module.
@end deffn

@node emacspeak-flycheck
@section emacspeak-flycheck

FLYCHECK == On-the-fly checking.

@subsection emacspeak-flycheck Options

@defvar {User Option} emacspeak-flycheck-error-list-error-voice
Personality used for flycheck-error-list-error
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-error-list-highlight-at-point-voice
Personality used for flycheck-error-list-highlight-at-point
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-error-list-highlight-voice
Personality used for flycheck-error-list-highlight
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-error-list-highlightflycheck-error-list-column-number-voice
Personality used for flycheck-error-list-highlightflycheck-error-list-column-number
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-error-list-info-voice
Personality used for flycheck-error-list-info
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-error-list-line-number-voice
Personality used for flycheck-error-list-line-number
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-error-list-warning-voice
Personality used for flycheck-error-list-warning
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-error-voice
Personality used for flycheck-error
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-info-voice
Personality used for flycheck-info
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-flycheck-warning-voice
Personality used for flycheck-warning
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@node emacspeak-flyspell
@section emacspeak-flyspell

This module speech enables flyspell.

@node emacspeak-folding
@section emacspeak-folding

Folding mode turns emacs into a folding editor.
Folding mode is what I use: 
emacs 19 comes with similar packages, e.g. allout.el
This module defines some advice forms that make folding mode a pleasure to use.
Think of a fold as a container. 

@node emacspeak-forms
@section emacspeak-forms

Provide additional advice to forms-mode 

@subsection emacspeak-forms Commands

@deffn {Interactive Command} emacspeak-forms-find-file  (filename)
Visit a forms file
@end deffn

@deffn {Interactive Command} emacspeak-forms-flush-unwanted-records  nil
Prompt for pattern and flush matching lines
@end deffn

@deffn {Interactive Command} emacspeak-forms-rerun-filter  nil
Rerun  filter --allows us to nuke more matching records
@end deffn

@deffn {Interactive Command} emacspeak-forms-speak-field  nil
Speak current form field name and value.
Assumes that point is at the front of a field value.
@end deffn

@deffn {Interactive Command} emacspeak-forms-summarize-current-position  nil
Summarize current position in list of records
@end deffn

@deffn {Interactive Command} emacspeak-forms-summarize-current-record  nil
Summarize current record
@end deffn

@subsection emacspeak-forms Options

@defvar {User Option} emacspeak-forms-ro-voice
Personality for read-only fields. 

@end defvar

@defvar {User Option} emacspeak-forms-rw-voice
Personality for read-write fields. 

@end defvar

@node emacspeak-ftf
@section emacspeak-ftf

FTF ==  find-things-fast
Package ftf --- find-things-fast -- is available from the marmalade emacs package archive

@node emacspeak-generic
@section emacspeak-generic

This module speech-enables generic.el so that modes
defined using  define-generic-mode get voice locking
support. Examples include apache-generic-mode and
friends defined in generic-x.el

@node emacspeak-gnuplot
@section emacspeak-gnuplot

This module speech-enables gnuplot-mode
an Emacs add-on that enables fluent interaction with
gnuplot.
Use gnuplot to generate plots of mathematical functions
for inclusion in documents.

@node emacspeak-gnus
@section emacspeak-gnus

This module advises gnus to speak. 
Updating support in 2014 (Emacspeak is nearly 20 years old)

@subsection emacspeak-gnus Commands

@deffn {Interactive Command} emacspeak-gnus-summary-catchup-quietly-and-exit  nil
Catch up on all articles in current group.
@end deffn

@deffn {Interactive Command} emacspeak-gnus-summary-hide-all-headers  nil
Hide all headers in the article.
Use this command if you don't want to listen to any article headers when
reading news.
@end deffn

@deffn {Interactive Command} emacspeak-gnus-summary-show-some-headers  nil
Show only the important article headers,
i.e. sender name, and subject.
@end deffn

@subsection emacspeak-gnus Options

@defvar {User Option} emacspeak-gnus-large-article
*Articles having more than
emacspeak-gnus-large-article lines will be considered to be a large article.
A large article is not spoken all at once;
instead you hear only the first screenful.

@end defvar

@defvar {User Option} emacspeak-gnus-punctuation-mode
Pronunciation mode to use for gnus buffers.

@end defvar

@node emacspeak-go-mode
@section emacspeak-go-mode

GO-MODE ==  Go Language support in emacs

@node emacspeak-gomoku
@section emacspeak-gomoku

Auditory interface to gomoku

@subsection emacspeak-gomoku Commands

@deffn {Interactive Command} emacspeak-gomoku-display-statistics  nil
Display statistics from previous games
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-goto-x-y  (x y)
Prompt for and go to that square.
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-show-current-column  nil
Aurally display current column
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-show-current-negative-diagonal  nil
Aurally display current negative sloped diagonal 
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-show-current-positive-diagonal  nil
Aurally display current positively sloped diagonal
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-show-current-row  nil
Aurally display current row
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-speak-emacs-previous-move  nil
Speak emacs' previous move
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-speak-humans-previous-move  nil
Speak human' previous move
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-speak-number-of-moves  nil
Speak number of moves so far
@end deffn

@deffn {Interactive Command} emacspeak-gomoku-speak-square  nil
Speak coordinates and state of square at point
@end deffn

@node emacspeak-google
@section emacspeak-google

There are a number of search tools that can be implemented on
the Google search page --- in a JS-powered browser, these
show up as the Google tool-belt.
This module implements a minor mode for use in Google result
pages that enables these tools via single keyboard commands.
Originally all options were available as tbs=p:v
Now, some specialized searches, e.g. blog search are tbm=

@subsection emacspeak-google Commands

@deffn {Interactive Command} emacspeak-google-show-toolbelt  nil
Reload search page with toolbelt showing.
@end deffn

@deffn {Interactive Command} emacspeak-google-sign-in  nil
Sign in to Google.
@end deffn

@deffn {Interactive Command} emacspeak-google-sign-out  nil
Sign out to Google.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change  nil
Command to change values in the toolbelt and execute the query.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-Shopping  nil
Change  Shopping in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-blog  nil
Change  blog in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-books  nil
Change  books in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-books-format  nil
Change  books-format in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-books-type  nil
Change  books-type in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-books-viewability  nil
Change  books-viewability in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-commercial  nil
Change  commercial in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-commercial-prices  nil
Change  commercial-prices in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-date-filter  nil
Change  date-filter in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-forums  nil
Change  forums in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-group-discussions  nil
Change  group-discussions in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-images  nil
Change  images in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-in-depth  nil
Change  in-depth in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-literal  nil
Change  literal in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-news  nil
Change  news in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-non-commercial  nil
Change  non-commercial in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-patents  nil
Change  patents in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-places  nil
Change  places in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-recent  nil
Change  recent in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-recipes  nil
Change  recipes in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-reviews  nil
Change  reviews in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-social  nil
Change  social in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-sort-by-date  nil
Change  sort-by-date in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-structured-snippets  nil
Change  structured-snippets in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-timeline  nil
Change  timeline in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-timeline-high  nil
Change  timeline-high in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-timeline-low  nil
Change  timeline-low in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-video  nil
Change  video in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-video-duration  nil
Change  video-duration in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-web-history-not-visited  nil
Change  web-history-not-visited in the currently active toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-google-toolbelt-change-web-history-visited  nil
Change  web-history-visited in the currently active toolbelt.
@end deffn

@node emacspeak-gridtext
@section emacspeak-gridtext

Emacspeak's table browsing mode allows one to
efficiently access  content that is tabular in nature.
That module also provides functions for inferring table
structure where possible.
Often, such structure is hard to infer automatically
--but might be known to the user 
e.g. treat columns 1 through 30 as one column of a table
and so on.
This module allows the user to specify a conceptual grid
that is "overlaid" on the region of text to turn it into
a table for tabular browsing. For now, elements of the
grid are "one line" high --but that may change in the
future if necessary. This module is useful for browsing
structured text files and the output from programs that
tabulate their output.
It's also useful for handling multicolumn text.

@subsection emacspeak-gridtext Commands

@deffn {Interactive Command} emacspeak-gridtext-apply  (start end grid)
@kbd{C-e # a}

Apply grid to region.
@end deffn

@deffn {Interactive Command} emacspeak-gridtext-load  (file)
@kbd{C-e # l}

Load saved grid settings.
@end deffn

@deffn {Interactive Command} emacspeak-gridtext-save  (file)
@kbd{C-e # s}

Save out grid settings.
@end deffn

@node emacspeak-gtags
@section emacspeak-gtags

GTAGS ==  Emacs support for GNU global.
GNU  global implements  a modern tags solution
Package gtags interfaces Emacs to this tool.

@node emacspeak-gud
@section emacspeak-gud

Provide additional advice to ease debugger interaction with gud

@node emacspeak-hide
@section emacspeak-hide

Flexible hide and show for emacspeak.
This module allows one to easily hide or expose
blocks of lines starting with a common prefix.
It is motivated by the need to flexibly hide quoted text in email
but is designed to be more general.
the prefix parsing is inspired by filladapt.el

@subsection emacspeak-hide Commands

@deffn {Interactive Command} emacspeak-hide-or-expose-all-blocks  nil
Hide or expose all blocks in buffer.
@end deffn

@deffn {Interactive Command} emacspeak-hide-or-expose-block  (&optional prefix)
@kbd{C-e j}

Hide or expose a block of text.
This command either hides or exposes a block of text
starting on the current line.  A block of text is defined as
a portion of the buffer in which all lines start with a
common PREFIX.  Optional interactive prefix arg causes all
blocks in current buffer to be hidden or exposed.
@end deffn

@deffn {Interactive Command} emacspeak-hide-speak-block-sans-prefix  nil
@kbd{C-e C-j}

Speaks current block after stripping its prefix.
If the current block is not hidden, it first hides it.
This is useful because as you locate blocks, you can invoke this
command to listen to the block,
and when you have heard enough navigate easily  to move past the block.
@end deffn

@subsection emacspeak-hide Options

@defvar {User Option} emacspeak-hidden-header-line-personality
Personality used to identify header lines of blocks.

@end defvar

@node emacspeak-hideshow
@section emacspeak-hideshow

speech-enable hideshow.el

@node emacspeak-ibuffer
@section emacspeak-ibuffer

speech-enable ibuffer.el
this is an alternative to buffer-menu

@subsection emacspeak-ibuffer Commands

@deffn {Interactive Command} emacspeak-ibuffer-speak-buffer-line  nil
Speak information about this buffer
@end deffn

@node emacspeak-ido
@section emacspeak-ido

speech-enable ido.el
This is an interesting task since most of the value-add
provided by package ido.el  is visual feedback.
Speech UI Challenge: What  is the most efficient means of
conveying a dynamically updating set of choices?
current strategy is to walk the list using c-s and c-r as
provided by ido
Set number matches shown to 3 using Custom so you dont hear
the entire list.

@node emacspeak-imenu
@section emacspeak-imenu

Speech enable imenu and provide other useful navigation commands.

@subsection emacspeak-imenu Commands

@deffn {Interactive Command} emacspeak-imenu-goto-next-index-position  nil
Goto the next index position in current buffer
@end deffn

@deffn {Interactive Command} emacspeak-imenu-goto-previous-index-position  nil
Goto the previous index position in current buffer
@end deffn

@deffn {Interactive Command} emacspeak-imenu-speak-this-section  nil
Speak upto start of next index entry
@end deffn

@node emacspeak-info
@section emacspeak-info

This module extends and customizes the Emacs info reader.

@subsection emacspeak-info Commands

@deffn {Interactive Command} emacspeak-info-speak-header  nil
Speak info header line.
@end deffn

@deffn {Interactive Command} emacspeak-info-wizard  (node-spec)
@kbd{C-h TAB <f1> TAB <help> TAB}

Read a node spec from the minibuffer and launch
Info-goto-node.
See documentation for command `Info-goto-node' for details on
node-spec.
@end deffn

@subsection emacspeak-info Options

@defvar {User Option} emacspeak-info-select-node-speak-chunk
*Specifies how much of the selected node gets spoken.
Possible values are:
screenfull  -- speak the displayed screen
node -- speak the entire node.

@end defvar

@node emacspeak-ispell
@section emacspeak-ispell

This module speech enables ispell.
Implementation note: This is hard because of how  ispell.el is written
Namely, all of the work is done by one huge hairy function.
This makes advising it hard.

Original version of this extension was written under emacs-19.28
for ispell.el version 2.30
Now updating it for ispell.el version 2.37.
Support for 2.30 will wither away

@subsection emacspeak-ispell Options

@defvar {User Option} emacspeak-ispell-max-choices
Emacspeak will not speak the choices if there are more than this
many available corrections.

@end defvar

@node emacspeak-jabber
@section emacspeak-jabber

emacs-jabber.el implements a  jabber client for emacs
emacs-jabber is hosted at sourceforge.
I use emacs-jabber with my gmail.com account

@subsection emacspeak-jabber Commands

@deffn {Interactive Command} emacspeak-jabber-chat-next-message  nil
Move forward to and speak the next message in this chat
session.
@end deffn

@deffn {Interactive Command} emacspeak-jabber-chat-previous-message  nil
Move backward to and speak the previous message in this chat
session.
@end deffn

@deffn {Interactive Command} emacspeak-jabber-chat-speak-this-message  nil
Speaks message starting on current line.
Assumes point is at the front of the message.
Returns a cons (start . end) that delimits the message.
@end deffn

@deffn {Interactive Command} emacspeak-jabber-popup-roster  nil
Pop to Jabber roster.
@end deffn

@subsection emacspeak-jabber Options

@defvar {User Option} emacspeak-jabber-activity-personality
Personality used for jabber-activity-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-chat-error-voice
Personality used for jabber-chat-error
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-chat-prompt-foreign-voice
Personality used for jabber-chat-prompt-foreign
This personality uses  voice-brighten-medium whose  effect can be changed globally by customizing voice-brighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-chat-prompt-local-voice
Personality used for jabber-chat-prompt-local
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-chat-prompt-system-voice
Personality used for jabber-chat-prompt-system
This personality uses  voice-brighten-extra whose  effect can be changed globally by customizing voice-brighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-chat-text-foreign-voice
Personality used for jabber-chat-text-foreign
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-chat-text-local-voice
Personality used for jabber-chat-text-local
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-rare-time-personality
Personality used for jabber-rare-time-face
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-roster-user-away-voice
Personality used for jabber-roster-user-away
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-roster-user-chatty-voice
Personality used for jabber-roster-user-chatty
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-roster-user-dnd-voice
Personality used for jabber-roster-user-dnd
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-roster-user-error-voice
Personality used for jabber-roster-user-error
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-roster-user-offline-voice
Personality used for jabber-roster-user-offline
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-roster-user-online-voice
Personality used for jabber-roster-user-online
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-roster-user-xa-voice
Personality used for jabber-roster-user-xa
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-speak-presence-alerts
Set to T if you want to hear presence alerts.

@end defvar

@defvar {User Option} emacspeak-jabber-title-large-voice
Personality used for jabber-title-large
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-title-medium-voice
Personality used for jabber-title-medium
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-jabber-title-small-voice
Personality used for jabber-title-small
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@node emacspeak-jde
@section emacspeak-jde

Speech enable Java IDE.
The Java IDE --JDE-- can be found at 
http://sunsite.auc.dk/jde/

@subsection emacspeak-jde Options

@defvar {User Option} emacspeak-jde-java-voice-lock-api-personality
Personality used for jde-java-font-lock-api-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-bold-personality
Personality used for jde-java-font-lock-bold-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-code-personality
Personality used for jde-java-font-lock-code-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-constant-personality
Personality used for jde-java-font-lock-constant-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-italic-personality
Personality used for jde-java-font-lock-italic-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-number-personality
Personality used for jde-java-font-lock-number-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-operator-personality
Personality used for jde-java-font-lock-operator-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-package-personality
Personality used for jde-java-font-lock-package-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-pre-personality
Personality used for jde-java-font-lock-pre-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-jde-java-voice-lock-underline-personality
Personality used for jde-java-font-lock-underline-face
This personality uses  voice-brighten-medium whose  effect can be changed globally by customizing voice-brighten-medium-settings.

@end defvar

@node emacspeak-js2
@section emacspeak-js2

JS2-mode http://js2-mode.googlecode.com/svn/trunk
is a new, powerful Emacs mode for working with JavaScript.
This module speech-enables js2.

@subsection emacspeak-js2 Options

@defvar {User Option} emacspeak-js2-error-voice
Personality used for js2-error
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-js2-external-variable-voice
Personality used for js2-external-variable
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-js2-function-param-voice
Personality used for js2-function-param
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-js2-instance-member-voice
Personality used for js2-instance-member
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-js2-jsdoc-html-tag-delimiter-voice
Personality used for js2-jsdoc-html-tag-delimiter
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-js2-jsdoc-html-tag-name-voice
Personality used for js2-jsdoc-html-tag-name
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-js2-jsdoc-tag-voice
Personality used for js2-jsdoc-tag
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-js2-jsdoc-type-voice
Personality used for js2-jsdoc-type
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-js2-jsdoc-value-voice
Personality used for js2-jsdoc-value
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-js2-magic-paren-voice
Personality used for js2-magic-paren
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-js2-private-function-call-voice
Personality used for js2-private-function-call
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-js2-private-member-voice
Personality used for js2-private-member
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-js2-warning-voice
Personality used for js2-warning
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@node emacspeak-jss
@section emacspeak-jss

jss connects Emacs to browsers that support the webkit debugging protocol.
You can use this to connect to a running Chrome or Firefox.
Make sure to start chrome with the correct command-line flag: e.g., on Linux:
google-chrome --remote-debugging-port=9222
You can get  Emacs package jss from here:
url = git://github.com/segv/jss.git
Make sure to first install the websocket package from elpa.
This package speech-enables jss for Emacspeak users.
This is what I use alongside package Kite at present when developing/debugging ChromeVox.
ChromeVox == http://google-axs-chrome.googlecode.com
http://chromevox.com

@subsection emacspeak-jss Options

@defvar {User Option} emacspeak-jss-button-personality
Personality used for jss-button-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-jss-console-debug-message-voice
Personality used for jss-console-debug-message
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-jss-console-error-message-voice
Personality used for jss-console-error-message
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-jss-console-log-message-voice
Personality used for jss-console-log-message
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-jss-console-warn-message-voice
Personality used for jss-console-warn-message
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-jss-http-repl-meta-data-personality
Personality used for jss-http-repl-meta-data-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-jss-http-repl-submitted-personality
Personality used for jss-http-repl-submitted-face
This personality uses  voice-annotate whose  effect can be changed globally by customizing voice-annotate-settings.

@end defvar

@defvar {User Option} emacspeak-jss-script-line-marker-personality
Personality used for jss-script-line-marker-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@node emacspeak-keymap
@section emacspeak-keymap

This module defines the emacspeak keybindings.

@subsection emacspeak-keymap Commands

@deffn {Interactive Command} emacspeak-keymap-choose-new-emacspeak-prefix  (prefix-key)
Interactively select a new prefix key to use for all emacspeak
commands.  The default is to use `C-e'  This command
lets you switch the prefix to something else.  This is a useful thing
to do if you run emacspeak on a remote machine from inside a terminal
that is running inside a local emacspeak session.  You can have the
remote emacspeak use a different control key to give your fingers some
relief.
@end deffn

@subsection emacspeak-keymap Options

@defvar {User Option} emacspeak-alt-keys
*Specifies alt key bindings for the audio desktop.
You can turn the `Pause' key  on your Linux PC keyboard into a `alt' key
on Linux by having it emit the sequence `C-x@@a'.

Bindings specified here are available on prefix key `alt'
(not to be confused with alt==meta)
for example, if you bind
`s' to command emacspeak-emergency-tts-restart
then that command will be available on key `ALT  s'

KEYS should be a string constant in the format used for saving
keyboard macros (see `edmacro-mode').

Command is an interactive command or a prefix-command that can be
bound to a key. 

The value of this variable is an association list. The car of
each element specifies a key sequence. The cdr specifies an
interactive command that the key sequence executes.

@end defvar

@defvar {User Option} emacspeak-hyper-keys
*Specifies hyper key bindings for the audio desktop. Emacs can
use the `hyper' key as a modifier key. You can turn the `windows'
keys on your Linux PC keyboard into a `hyper' key on Linux by
having it emit the sequence `C-x@@h'.

Bindings specified here are available on prefix key `hyper' for
example, if you bind `b' to command `bbdb ' then that command
will be available on key `hyper b'.

KEYS should be a string constant in the format used for saving
keyboard macros (see `edmacro-mode').

Command is an interactive command or a prefix-command that can be
bound to a key. 

The value of this variable is an association list. The car of
each element specifies a key sequence. The cdr specifies an
interactive command that the key sequence executes.

@end defvar

@defvar {User Option} emacspeak-personal-ctlx-keys
*Specifies personal-ctlx key bindings for use with C-e C-x for
the audio desktop. Bindings specified here are available on
prefix key C-e C-x for example, if you bind `C-s' to command
emacspeak-emergency-tts-restart then that command will be
available on key C-e C-x C-s. KEYS should be a string constant in
the format used for saving keyboard macros (see `edmacro-mode').

Command is an interactive command or a prefix-command that can be
bound to a key.

The value of this variable is an association list. The car of
each element specifies a key sequence. The cdr specifies an
interactive command that the key sequence executes.

@end defvar

@defvar {User Option} emacspeak-personal-keys
*Specifies personal key bindings for the audio desktop.
Bindings specified here are available on prefix key C-e x
for example, if you bind
`s' to command emacspeak-emergency-tts-restart
then that command will be available on key C-e x s.

KEYS should be a string constant in the format used for saving
keyboard macros (see `edmacro-mode').

Command is an interactive command or a prefix-command that can be
bound to a key. 

The value of this variable is an association list. The car of
each element specifies a key sequence. The cdr specifies an
interactive command that the key sequence executes.

@end defvar

@defvar {User Option} emacspeak-super-keys
*Specifies super key bindings for the audio desktop. You can
turn the right `windows menu' keys on your Linux PC keyboard into
a `super' key on Linux by having it emit the sequence `C-x@@s'.

Bindings specified here are available on prefix key `super' for
example, if you bind `s' to command
emacspeak-emergency-tts-restart then that command will be
available on key `super s'. KEYS should be a string constant in
the format used for saving keyboard macros (see `edmacro-mode').

Command is an interactive command or a prefix-command that can be
bound to a key.

The value of this variable is an association list. The car of
each element specifies a key sequence. The cdr specifies an
interactive command that the key sequence executes.

@end defvar

@node emacspeak-kite
@section emacspeak-kite

kite connects Emacs to browsers that support the webkit debugging protocol.
You can use this to connect to a running Chrome
Make sure to start chrome with the correct command-line flag: e.g., on Linux:
google-chrome --remote-debugging-port=9222
You can get  Emacs package kite from here:
git clone git://github.com/jscheid/kite
Make sure to first install the websocket package from elpa.
This package speech-enables kite for Emacspeak users.
This is what I use at present when developing/debugging ChromeVox.
ChromeVox == http://google-axs-chrome.googlecode.com
http://chromevox.com

@subsection emacspeak-kite Options

@defvar {User Option} emacspeak-kite-boolean-voice
Personality used for kite-boolean
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-kite-console-prompt-personality
Personality used for kite-console-prompt-face
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-kite-loading-voice
Personality used for kite-loading
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-kite-log-debug-voice
Personality used for kite-log-debug
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-kite-log-error-voice
Personality used for kite-log-error
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-kite-log-log-voice
Personality used for kite-log-log
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-kite-log-warning-voice
Personality used for kite-log-warning
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-kite-null-voice
Personality used for kite-null
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-kite-number-voice
Personality used for kite-number
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-kite-object-voice
Personality used for kite-object
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-kite-property-name-voice
Personality used for kite-property-name
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-kite-proto-property-name-voice
Personality used for kite-proto-property-name
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-kite-quote-voice
Personality used for kite-quote
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-kite-stack-column-number-voice
Personality used for kite-stack-column-number
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-kite-stack-error-message-voice
Personality used for kite-stack-error-message
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-kite-stack-error-type-voice
Personality used for kite-stack-error-type
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-kite-stack-file-name-voice
Personality used for kite-stack-file-name
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-kite-stack-function-name-voice
Personality used for kite-stack-function-name
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-kite-stack-line-number-voice
Personality used for kite-stack-line-number
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-kite-stack-pseudo-file-name-voice
Personality used for kite-stack-pseudo-file-name
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-kite-string-voice
Personality used for kite-string
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-kite-undefined-voice
Personality used for kite-undefined
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@node emacspeak-kmacro
@section emacspeak-kmacro

speech-enables kmacro --- a kbd macro interface

@node emacspeak-librivox
@section emacspeak-librivox

LIBRIVOX == http://wwwlibrivox.org Free Audio Books
It provides a simple Web  API http://wiki.librivox.org/index.php/LibriVoxAPI
This module implements an Emacspeak Librivox client.

@subsection emacspeak-librivox Commands

@deffn {Interactive Command} emacspeak-librivox  nil
Librivox Library Of Free Audio Books.
@end deffn

@deffn {Interactive Command} emacspeak-librivox-fetch-catalog  nil
Fetch catalog to our cache location.
@end deffn

@deffn {Interactive Command} emacspeak-librivox-mode  nil
A Librivox front-end for the Emacspeak Audio Desktop.

In addition to any hooks its parent mode `emacspeak-table-mode' might have run,
this mode runs the hook `emacspeak-librivox-mode-hook', as the final step
during initialization.

key             binding
---             -------

RET		emacspeak-librivox-open-rss
F		emacspeak-librivox-fetch-catalog
P		emacspeak-librivox-play
S		emacspeak-librivox-searcher
c		Prefix Command
u		emacspeak-librivox-open-url

c -		Prefix Command

S a		emacspeak-librivox-search-author
S g		emacspeak-librivox-search-genre
S t		emacspeak-librivox-search-title

c - R		Prefix Command

c - R E		Prefix Command

c - R E T	emacspeak-librivox-play

@end deffn

@deffn {Interactive Command} emacspeak-librivox-open-rss  nil
Open RSS  link for current Librivox book.
@end deffn

@deffn {Interactive Command} emacspeak-librivox-open-url  nil
Open Librivox URL  for current Librivox book.
@end deffn

@deffn {Interactive Command} emacspeak-librivox-play  nil
Play current book as a playlist.
@end deffn

@deffn {Interactive Command} emacspeak-librivox-search-author  (pattern)
Search in catalog for Author 1.
@end deffn

@deffn {Interactive Command} emacspeak-librivox-search-genre  (pattern)
Search in catalog for genre.
@end deffn

@deffn {Interactive Command} emacspeak-librivox-search-title  (pattern)
Search in catalog for title.
@end deffn

@subsection emacspeak-librivox Options

@defvar {User Option} emacspeak-librivox-directory
Location where we cache  librivox data.

@end defvar

@node emacspeak-m-player
@section emacspeak-m-player

Defines a simple derived mode for interacting with mplayer.
mplayer  is a versatile media player capable of playing many
streaming formats  and is especially useful for playing windows
media (WMA) and streaming windows media (ASF) files.
You may need the  win32 codecs which can be downloaded from
http://ftp.lug.udel.edu/MPlayer/releases/w32codec-0.60.tar.bz2
Mplayer FAQ at
http://www.mplayerhq.hu/DOCS/faq.html
Mplayer docs at
http://www.mplayerhq.hu/DOCS/

@subsection emacspeak-m-player Commands

@deffn {Interactive Command} emacspeak-m-player  (resource &optional play-list)
Play specified resource using m-player.  Optional prefix argument
play-list interprets resource as a play-list.  Second interactive
prefix arg adds option -allow-dangerous-playlist-parsing to mplayer.
Resource is a media resource or playlist containing media resources.
The player is placed in a buffer in emacspeak-m-player-mode.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-add-equalizer  (&optional reset)
Add equalizer to playing stream.  Equalizer is applied as each change
is made, and the final effect set by pressing RET.  Interactive prefix
arg `reset' starts with all filters set to 0.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-add-filter  nil
Adds specified filter  to use for the next invocation of MPlayer.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-alt-src-step  (step)
Move within an ASF playlist.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-amark-add  (name &optional prompt-position)
Set AMark `name' at current position in current audio stream.
Interactive prefix arg prompts for position.
As the default, use current position.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-amark-jump  nil
Jump to specified AMark.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-apply-reverb-preset  (preset)
Prompt for a predefined reverb preset and apply it if there is media playing.
You need to use mplayer built with ladspa support, and have package
tap-reverb already installed.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-backward-10min  nil
Move backward by ten minutes.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-backward-10s  nil
Move back by 10 seconds.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-backward-1min  nil
Move back by 1 minute.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-balance  nil
Set left/right balance.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-beginning-of-track  nil
Move to beginning of track.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-bind-accelerator  (directory key)
Binds key to invoke m-player  on specified directory.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-clear-filters  nil
Clear all active filters
@end deffn

@deffn {Interactive Command} emacspeak-m-player-command  (key)
Invoke MPlayer commands.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-customize-options  nil
Use Customize to manipulate MPlayer options.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-delete-filter  (filter)
Delete filter.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-display-percent  nil
Display current percentage.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-display-position  nil
Display current position in track and its length.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-double-speed  nil
Scale speed by 2.0
@end deffn

@deffn {Interactive Command} emacspeak-m-player-edit-reverb  nil
Add ladspa reverb filter.
See option emacspeak-m-player-reverb-filter to customize reverb filter values.
You need to use mplayer built with ladspa support, and have package
tap-reverb already installed.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-end-of-track  nil
Move to beginning of track.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-equalizer-control  (v)
Manipulate values in specified vector using minibuffer.
Applies  the resulting value at each step.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-faster  nil
Speed up  playback.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-forward-10min  nil
Move forward by ten minutes.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-forward-10s  nil
Move forward by 10 seconds.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-forward-1min  nil
Move forward by 1 minute.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-get-length  nil
Display length of track in seconds.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-half-speed  nil
Scale speed by 0.5.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-load  (resource &optional append)
Load specified resource into a running  m-player.
Interactive prefix arg appends the new resource to what is playing.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-load-file  (f)
Load specified file.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-load-playlist  (f)
Load specified playlist file.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-mode  nil
Major mode for m-player interaction. 

key             binding
---             -------

RET		emacspeak-m-player-load
ESC		Prefix Command
SPC		emacspeak-m-player-pause
%		emacspeak-m-player-display-percent
+		emacspeak-m-player-volume-up
,		emacspeak-m-player-backward-10s
-		emacspeak-m-player-volume-down
.		emacspeak-m-player-forward-10s
<		emacspeak-m-player-backward-1min
=		emacspeak-m-player-volume-up
>		emacspeak-m-player-forward-1min
?		emacspeak-m-player-display-position
C		emacspeak-m-player-clear-filters
L		emacspeak-m-player-load-file
O		emacspeak-m-player-reset-options
P		emacspeak-m-player-apply-reverb-preset
Q		emacspeak-m-player-quit
R		emacspeak-m-player-edit-reverb
S		emacspeak-amark-save
[		emacspeak-m-player-slower
]		emacspeak-m-player-faster
a		emacspeak-m-player-amark-add
b		emacspeak-m-player-balance
c		emacspeak-m-player-slave-command
d		emacspeak-m-player-delete-filter
e		emacspeak-m-player-add-equalizer
f		emacspeak-m-player-add-filter
g		emacspeak-m-player-seek-absolute
j		emacspeak-m-player-amark-jump
l		emacspeak-m-player-get-length
m		emacspeak-m-player-speak-mode-line
n		emacspeak-m-player-next-track
o		emacspeak-m-player-customize-options
p		emacspeak-m-player-previous-track
q		bury-buffer
r		emacspeak-m-player-seek-relative
s		emacspeak-m-player-scale-speed
t		emacspeak-m-player-play-tracks-jump
u		emacspeak-m-player-url
v		emacspeak-m-player-volume-change
@{		emacspeak-m-player-half-speed
@}		emacspeak-m-player-double-speed
DEL		emacspeak-m-player-reset-speed
<down>		emacspeak-m-player-forward-1min
<end>		emacspeak-m-player-end-of-track
<home>		emacspeak-m-player-beginning-of-track
<left>		emacspeak-m-player-backward-10s
<next>		emacspeak-m-player-forward-10min
<prior>		emacspeak-m-player-backward-10min
<right>		emacspeak-m-player-forward-10s
<up>		emacspeak-m-player-backward-1min

M-l		emacspeak-m-player-load-playlist

In addition to any hooks its parent mode `comint-mode' might have run,
this mode runs the hook `emacspeak-m-player-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-next-track  nil
Move to next track.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-pause  nil
Pause or unpause media player.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-play-tracks-jump  (step)
Move within the play tree.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-play-tree-up  (step)
Move within the play tree.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-previous-track  nil
Move to previous track.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-quit  nil
Quit media player.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-reset-options  nil
Reset MPlayer options to initial defaults.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-reset-speed  nil
Reset playing speed to normal.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-scale-speed  (factor)
Scale speed by specified factor.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-seek-absolute  (position)
Seek  to absolute specified position.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-seek-relative  (offset)
Seek  by offset into stream from current position.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-shuffle  nil
@kbd{C-e :}

Launch M-Player with shuffle turned on.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-slave-command  (command)
Dispatch slave command read from minibuffer.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-slower  nil
Slow down playback.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-speak-mode-line  nil
Speak mode line
@end deffn

@deffn {Interactive Command} emacspeak-m-player-url  (url)
Call emacspeak-m-player with specified URL.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-volume-change  (value)
Change volume to specified absolute value.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-volume-down  nil
Decrease volume.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-volume-up  nil
Increase volume.
@end deffn

@deffn {Interactive Command} emacspeak-m-player-youtube-player  (url)
Use youtube-dl and mplayer to stream YouTube content.
@end deffn

@deffn {Interactive Command} emacspeak-multimedia  nil
@kbd{C-e ;}

Start or control Emacspeak multimedia player.
@end deffn

@subsection emacspeak-m-player Options

@defvar {User Option} emacspeak-m-player-options
Options passed to mplayer.

@end defvar

@defvar {User Option} emacspeak-m-player-program
Media player program.

@end defvar

@defvar {User Option} emacspeak-m-player-recent-amark-name
Name used to  mark position where we quit a stream.

@end defvar

@defvar {User Option} emacspeak-m-player-reverb-filter
Tap Reverb Settings.

@end defvar

@defvar {User Option} emacspeak-m-player-youtube-dl
YouTube download tool

@end defvar

@defvar {User Option} emacspeak-media-location-bindings
*Map specific key sequences to launching MPlayer accelerators
on a specific directory.

@end defvar

@node emacspeak-magit
@section emacspeak-magit

MAGIT ==  Git interface in Emacs
git clone git://github.com/magit/magit.git

@node emacspeak-make-mode
@section emacspeak-make-mode

This module speech enables make-mode

@subsection emacspeak-make-mode Options

@defvar {User Option} emacspeak-makefile-makepp-perl-voice
Personality used for makefile-makepp-perl
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-makefile-shell-voice
Personality used for makefile-shell
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-makefile-space-voice
Personality used for makefile-space
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-makefile-targets-voice
Personality used for makefile-targets
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@node emacspeak-man
@section emacspeak-man

Provide additional advice to man-mode 

@subsection emacspeak-man Commands

@deffn {Interactive Command} emacspeak-man-browse-man-page  nil
Browse the man page --read it a paragraph at a time
@end deffn

@deffn {Interactive Command} emacspeak-man-speak-this-section  nil
Speak current section
@end deffn

@node emacspeak-markdown
@section emacspeak-markdown

MARKDOWN ==  Light-weight markup.
This module speech-enables markdown.el

@subsection emacspeak-markdown Options

@defvar {User Option} emacspeak-markdown-blockquote-personality
Personality used for markdown-blockquote-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-bold-personality
Personality used for markdown-bold-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-comment-personality
Personality used for markdown-comment-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-footnote-personality
Personality used for markdown-footnote-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-delimiter-personality
Personality used for markdown-header-delimiter-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-face-1-voice
Personality used for markdown-header-face-1
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-face-2-voice
Personality used for markdown-header-face-2
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-face-3-voice
Personality used for markdown-header-face-3
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-face-4-voice
Personality used for markdown-header-face-4
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-face-5-voice
Personality used for markdown-header-face-5
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-face-6-voice
Personality used for markdown-header-face-6
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-personality
Personality used for markdown-header-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-header-rule-personality
Personality used for markdown-header-rule-face
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-inline-code-personality
Personality used for markdown-inline-code-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-italic-personality
Personality used for markdown-italic-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-language-keyword-personality
Personality used for markdown-language-keyword-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-line-break-personality
Personality used for markdown-line-break-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-link-personality
Personality used for markdown-link-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-link-title-personality
Personality used for markdown-link-title-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-list-personality
Personality used for markdown-list-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-math-personality
Personality used for markdown-math-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-metadata-key-personality
Personality used for markdown-metadata-key-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-metadata-value-personality
Personality used for markdown-metadata-value-face
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-missing-link-personality
Personality used for markdown-missing-link-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-pre-personality
Personality used for markdown-pre-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-reference-personality
Personality used for markdown-reference-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-markdown-url-personality
Personality used for markdown-url-face
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@node emacspeak-message
@section emacspeak-message

advice for posting message commands

@subsection emacspeak-message Options

@defvar {User Option} emacspeak-message-punctuation-mode
Pronunciation mode to use for message buffers.

@end defvar

@node emacspeak-metapost
@section emacspeak-metapost

Speech-enables metapost mode.
metapost is a powerful drawing package
typically installed as mpost by modern TeX
installations.

@node emacspeak-midge
@section emacspeak-midge

This module speech enables  midge.
Midge is a MIDI composer/editor tool.
From the package README file:
                                        ; Midge, for midi generator, is a text to midi translator.
                                        ; It creates type 1 (ie multitrack) midi files from text
                                        ; descriptions of music. It is a single perl script, which
                                        ; does not require any additional modules.
The package also provides a convenient emacs mode for
editing and playing  midge files.
Midge's homepage is at:
http://www.dmriley.demon.co.uk/code/midge/ 

@node emacspeak-mpg123
@section emacspeak-mpg123

This module speech-enables  MPG123
MPG123 is an MP3 player.

@subsection emacspeak-mpg123 Commands

@deffn {Interactive Command} emacspeak-mp3-playlist-play  (playlist &optional dont-shuffle)
Play a playlist. 
Optional interactive prefix arg says not to shuffle  the list. 
Use command M-x emacspeak-mp3-playlist-skip 
to skip to the next track. 
@end deffn

@deffn {Interactive Command} emacspeak-mp3-playlist-skip  nil
Skip currently playing track. 
@end deffn

@deffn {Interactive Command} emacspeak-mp3-playlist-stop  nil
Kill currently playing playlist. 
@end deffn

@deffn {Interactive Command} emacspeak-mpg123-backward-minute  (arg)
Move back by specified number of minutes.
@end deffn

@deffn {Interactive Command} emacspeak-mpg123-forward-minute  (arg)
Forward by ARG minutes.
@end deffn

@deffn {Interactive Command} emacspeak-mpg123-speak-current-time  nil
Speak time in current track.
@end deffn

@deffn {Interactive Command} emacspeak-mpg123-speak-filename  nil
Speak filename of the current song.
@end deffn

@deffn {Interactive Command} emacspeak-mpg123-speak-length  nil
Speak duration of the current song.
@end deffn

@deffn {Interactive Command} emacspeak-mpg123-speak-title  nil
Speak title of the current song.
@end deffn

@node emacspeak-mspools
@section emacspeak-mspools

Speech-enable  mspools --a package that lets you monitor
multiple maildrops

@node emacspeak-muse
@section emacspeak-muse

Speech enable Muse

@subsection emacspeak-muse Options

@defvar {User Option} emacspeak-muse-bad-link-personality
Personality used for muse-bad-link-face
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-muse-emphasis-1-voice
Personality used for muse-emphasis-1
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-muse-emphasis-2-voice
Personality used for muse-emphasis-2
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-muse-emphasis-3-voice
Personality used for muse-emphasis-3
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-muse-header-1-voice
Personality used for muse-header-1
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-muse-header-2-voice
Personality used for muse-header-2
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-muse-header-3-voice
Personality used for muse-header-3
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-muse-header-4-voice
Personality used for muse-header-4
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-muse-header-5-voice
Personality used for muse-header-5
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-muse-link-personality
Personality used for muse-link-face
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-muse-verbatim-personality
Personality used for muse-verbatim-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@node emacspeak-net-utils
@section emacspeak-net-utils

This module speech enables net-utils

@node emacspeak-newsticker
@section emacspeak-newsticker

Newsticker provides a continuously updating newsticker using
RSS
Provides functionality similar to amphetadesk --but in pure elisp

@subsection emacspeak-newsticker Options

@defvar {User Option} emacspeak-newsticker-feed-personality
Personality used for newsticker-feed-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-newsticker-new-item-personality
Personality used for newsticker-new-item-face
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-newsticker-old-item-personality
Personality used for newsticker-old-item-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@node emacspeak-npr
@section emacspeak-npr

NPR == http://wwwnpr.org National Public Radio in the US
It provides a simple Web  API http://www.npr.org/api/index
This module implements an Emacspeak Npr client.
TODO: This module needs to be updated to the current NPR API (0.93) from the older 0.92

For now, users will need to get their own API key

@subsection emacspeak-npr Commands

@deffn {Interactive Command} emacspeak-npr-listing  nil
Display specified listing.
@end deffn

@deffn {Interactive Command} emacspeak-npr-listing-url-executor  (url)
Special executor for use in NPR  listings.
@end deffn

@deffn {Interactive Command} emacspeak-npr-view  (operation operand)
View results as Atom.
@end deffn

@subsection emacspeak-npr Options

@defvar {User Option} emacspeak-npr-api-key
Web API  key for this application.

@end defvar

@defvar {User Option} emacspeak-npr-user-id
Npr user Id.

@end defvar

@node emacspeak-nxml
@section emacspeak-nxml

nxml-mode is a new XML mode for emacs by James Clark.
 http://www.thaiopensource.com/download/

@subsection emacspeak-nxml Commands

@deffn {Interactive Command} emacspeak-nxml-summarize-outline  nil
Intelligent spoken display of current outline entry.
@end deffn

@subsection emacspeak-nxml Options

@defvar {User Option} emacspeak-nxml-attribute-colon-voice
Personality used for nxml-attribute-colon
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-attribute-local-name-voice
Personality used for nxml-attribute-local-name
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-attribute-prefix-voice
Personality used for nxml-attribute-prefix
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-attribute-value-delimiter-voice
Personality used for nxml-attribute-value-delimiter
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-attribute-value-voice
Personality used for nxml-attribute-value
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-cdata-section-CDATA-voice
Personality used for nxml-cdata-section-CDATA
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-cdata-section-content-voice
Personality used for nxml-cdata-section-content
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-cdata-section-delimiter-voice
Personality used for nxml-cdata-section-delimiter
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-char-ref-delimiter-voice
Personality used for nxml-char-ref-delimiter
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-char-ref-number-voice
Personality used for nxml-char-ref-number
This personality uses  voice-animate-medium whose  effect can be changed globally by customizing voice-animate-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-comment-content-voice
Personality used for nxml-comment-content
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-comment-delimiter-voice
Personality used for nxml-comment-delimiter
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-delimited-data-voice
Personality used for nxml-delimited-data
This personality uses  voice-animate-medium whose  effect can be changed globally by customizing voice-animate-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-delimiter-voice
Personality used for nxml-delimiter
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-element-colon-voice
Personality used for nxml-element-colon
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-element-local-name-voice
Personality used for nxml-element-local-name
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-element-prefix-voice
Personality used for nxml-element-prefix
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-entity-ref-delimiter-voice
Personality used for nxml-entity-ref-delimiter
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-entity-ref-name-voice
Personality used for nxml-entity-ref-name
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-hash-voice
Personality used for nxml-hash
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-markup-declaration-delimiter-voice
Personality used for nxml-markup-declaration-delimiter
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-name-voice
Personality used for nxml-name
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-namespace-attribute-colon-voice
Personality used for nxml-namespace-attribute-colon
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-namespace-attribute-prefix-voice
Personality used for nxml-namespace-attribute-prefix
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-namespace-attribute-value-delimiter-voice
Personality used for nxml-namespace-attribute-value-delimiter
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-namespace-attribute-value-voice
Personality used for nxml-namespace-attribute-value
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-namespace-attribute-xmlns-voice
Personality used for nxml-namespace-attribute-xmlns
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-processing-instruction-content-voice
Personality used for nxml-processing-instruction-content
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-processing-instruction-delimiter-voice
Personality used for nxml-processing-instruction-delimiter
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-processing-instruction-target-voice
Personality used for nxml-processing-instruction-target
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-prolog-keyword-voice
Personality used for nxml-prolog-keyword
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-prolog-literal-content-voice
Personality used for nxml-prolog-literal-content
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-prolog-literal-delimiter-voice
Personality used for nxml-prolog-literal-delimiter
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-ref-voice
Personality used for nxml-ref
This personality uses  voice-animate-medium whose  effect can be changed globally by customizing voice-animate-medium-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-tag-delimiter-voice
Personality used for nxml-tag-delimiter
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-nxml-tag-slash-voice
Personality used for nxml-tag-slash
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-rng-error-voice
Personality used for rng-error
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@node emacspeak-ocr
@section emacspeak-ocr

This module defines Emacspeak front-end to OCR.
This module assumes that sane is installed and working
for image acquisition,
and that there is an OCR engine that can take acquired
images and produce text.
Prerequisites:
Sane installed and working.
scanimage to generate tiff files from scanner.
tiffcp to compress the tiff file.
working ocr executable 
by default this module assumes that the OCR executable
is named "ocr"

@subsection emacspeak-ocr Commands

@deffn {Interactive Command} emacspeak-ocr  nil
@kbd{C-e C-o}

An OCR front-end for the Emacspeak desktop.  

Page image is acquired using tools from the SANE package.
The acquired image is run through the OCR engine if one is
available, and the results placed in a buffer that is
suitable for browsing the results.

For detailed help, invoke command emacspeak-ocr bound to
C-e C-o to launch emacspeak-ocr-mode, and press
`?' to display mode-specific help for emacspeak-ocr-mode.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-backward-page  (&optional count-ignored)
Like backward page, but tracks page number of current document.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-customize  nil
Customize OCR settings.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-flipflop-and-recognize-image  nil
Run OCR engine on current image after flip-flopping it.
Useful if you've scanned a page upside down and are using an engine that does not automatically flip the image for you.
You need the imagemagik family of tools --- we use mogrify to transform the image.
Prompts for image file if file corresponding to the expected
`current page' is not found.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-forward-page  (&optional count-ignored)
Like forward page, but tracks page number of current document.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-mode  nil
 An OCR front-end for the Emacspeak desktop.

Pre-requisites:

1) A working scanner back-end like SANE on Linux.

2) An OCR engine.

1: Make sure your scanner back-end works, and that you have
the utilities to scan a document and acquire an image as a
tiff file.  Then set variable
emacspeak-ocr-scan-image-program to point at this utility.
By default, this is set to `scanimage' which is the image
scanning utility provided by SANE.

By default, this front-end attempts to compress the acquired
tiff image; make sure you have a utility like tiffcp.
Variable emacspeak-ocr-compress-image is set to `tiffcp' by
default; if you use something else, you should customize
this variable.

2: Next, make sure you have an OCR engine installed and
working.  By default this front-end assumes that OCR is
available as /usr/bin/ocr.

Once you have ensured that acquiring an image and applying
OCR to it work independently of Emacs, you can use this
Emacspeak front-end to enable easy OCR access from within
Emacspeak.

The Emacspeak OCR front-end is launched by command
emacspeak-ocr bound to C-e C-o.  

This command switches to a special buffer that has OCR
commands bounds to single keystrokes-- see the key-binding
list at the end of this description.  Use Emacs online help
facility to look up help on these commands.

emacspeak-ocr-mode provides the necessary functionality to
scan, OCR, read and save documents.  By default, scanned
images and the resulting text are saved under directory
~/ocr; see variable emacspeak-ocr-working-directory.
Invoking command emacspeak-ocr-open-working-directory bound
to M-x emacspeak-ocr-open-working-directory will open this directory.

By default, the document being scanned is named `untitled'.
You can name the document by using command
emacspeak-ocr-name-document bound to
M-x emacspeak-ocr-name-document.  The document name is used
in constructing the name of the image and text files.

Key Bindings: 

See key             binding
---             -------

RET		emacspeak-ocr-scan-and-recognize
SPC		emacspeak-ocr-read-current-page
1 .. 9		emacspeak-ocr-page
?		describe-mode
C		emacspeak-ocr-set-compress-image-options
I		emacspeak-ocr-set-scan-image-options
[		emacspeak-ocr-backward-page
]		emacspeak-ocr-forward-page
c		emacspeak-ocr-customize
d		emacspeak-ocr-open-working-directory
f		emacspeak-ocr-flipflop-and-recognize-image
i		emacspeak-ocr-scan-image
j		emacspeak-ocr-scan-photo
n		emacspeak-ocr-name-document
o		emacspeak-ocr-recognize-image
p		emacspeak-ocr-page
q		bury-buffer
s		emacspeak-ocr-save-current-page
w		emacspeak-ocr-write-document

.

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-ocr-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-name-document  (name)
Name document being scanned in the current OCR buffer.
Pick a short but meaningful name.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-open-working-directory  nil
Launch dired on OCR working directory.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-page  nil
Move to specified page.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-read-current-page  nil
Speaks current page.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-recognize-image  nil
Run OCR engine on current image.
Prompts for image file if file corresponding to the expected
`current page' is not found.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-save-current-page  nil
Writes out recognized text from current page
to an appropriately named file.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-scan-and-recognize  nil
Scan in a page and run OCR engine on it.
Use this command once you've verified that the separate
steps of acquiring an image and running the OCR engine work
correctly by themselves.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-scan-image  nil
Acquire page image.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-scan-photo  (&optional metadata)
Scan in a photograph.
The scanned image is converted to JPEG.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-set-compress-image-options  (setting)
Interactively update  image compression options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-set-scan-image-options  (setting)
Interactively update scan image options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.
@end deffn

@deffn {Interactive Command} emacspeak-ocr-write-document  nil
Writes out recognized text from all pages in current document.
@end deffn

@subsection emacspeak-ocr Options

@defvar {User Option} emacspeak-ocr-compress-image
Command used to compress the scanned tiff file.

@end defvar

@defvar {User Option} emacspeak-ocr-compress-image-options
Options used for compressing tiff image.

@end defvar

@defvar {User Option} emacspeak-ocr-compress-photo-options
Options used when created JPEG from  scanned photographs.

@end defvar

@defvar {User Option} emacspeak-ocr-engine
OCR engine to process acquired image.

@end defvar

@defvar {User Option} emacspeak-ocr-engine-options
Command line options to pass to OCR engine.

@end defvar

@defvar {User Option} emacspeak-ocr-image-extension
Filename extension used for acquired image.

@end defvar

@defvar {User Option} emacspeak-ocr-jpeg-metadata-writer
Program to add metadata to JPEG files.

@end defvar

@defvar {User Option} emacspeak-ocr-keep-uncompressed-image
If set to T, uncompressed image is not removed.

@end defvar

@defvar {User Option} emacspeak-ocr-photo-compress
Program to create JPEG compressed images.

@end defvar

@defvar {User Option} emacspeak-ocr-scan-image
Name of image acquisition program.

@end defvar

@defvar {User Option} emacspeak-ocr-scan-image-options
Command line options to pass to image acquisition program.

@end defvar

@defvar {User Option} emacspeak-ocr-scan-photo-options
Options  used when scanning in photographs.

@end defvar

@defvar {User Option} emacspeak-ocr-working-directory
Directory where images and OCR results
will be placed.

@end defvar

@node emacspeak-org
@section emacspeak-org

Speech-enable org ---
 Org allows you to keep organized notes and todo lists.
Homepage: http://www.astro.uva.nl/~dominik/Tools/org/
or http://orgmode.org/

@subsection emacspeak-org Commands

@deffn {Interactive Command} emacspeak-org-bookmark  (&optional goto)
Bookmark from org.
@end deffn

@deffn {Interactive Command} emacspeak-org-popup-input  nil
Pops up an org input area.
@end deffn

@deffn {Interactive Command} emacspeak-org-table-speak-current-element  nil
echoes current table element
@end deffn

@subsection emacspeak-org Options

@defvar {User Option} emacspeak-org-agenda-calendar-event-voice
Personality used for org-agenda-calendar-event
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-calendar-sexp-voice
Personality used for org-agenda-calendar-sexp
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-column-dateline-voice
Personality used for org-agenda-column-dateline
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-diary-voice
Personality used for org-agenda-diary
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-dimmed-todo-personality
Personality used for org-agenda-dimmed-todo-face
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-done-voice
Personality used for org-agenda-done
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-filter-category-voice
Personality used for org-agenda-filter-category
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-filter-tags-voice
Personality used for org-agenda-filter-tags
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-restriction-lock-voice
Personality used for org-agenda-restriction-lock
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-agenda-structure-voice
Personality used for org-agenda-structure
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-org-archived-voice
Personality used for org-archived
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-beamer-tag-voice
Personality used for org-beamer-tag
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-org-block-background-voice
Personality used for org-block-background
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-block-voice
Personality used for org-block
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-bookmark-key
Key of template used for capturing  hot list.

@end defvar

@defvar {User Option} emacspeak-org-checkbox-voice
Personality used for org-checkbox
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-clock-overlay-voice
Personality used for org-clock-overlay
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-code-voice
Personality used for org-code
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-column-title-voice
Personality used for org-column-title
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-column-voice
Personality used for org-column
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-org-date-selected-voice
Personality used for org-date-selected
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-org-date-voice
Personality used for org-date
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-default-voice
Personality used for org-default
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-org-document-info-keyword-voice
Personality used for org-document-info-keyword
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-document-info-voice
Personality used for org-document-info
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-document-title-voice
Personality used for org-document-title
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-org-done-voice
Personality used for org-done
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-drawer-voice
Personality used for org-drawer
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-ellipsis-voice
Personality used for org-ellipsis
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-footnote-voice
Personality used for org-footnote
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-org-formula-voice
Personality used for org-formula
This personality uses  voice-animate-extra whose  effect can be changed globally by customizing voice-animate-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-alert-future-personality
Personality used for org-habit-alert-future-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-alert-personality
Personality used for org-habit-alert-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-clear-future-personality
Personality used for org-habit-clear-future-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-clear-personality
Personality used for org-habit-clear-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-overdue-future-personality
Personality used for org-habit-overdue-future-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-overdue-personality
Personality used for org-habit-overdue-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-ready-future-personality
Personality used for org-habit-ready-future-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-habit-ready-personality
Personality used for org-habit-ready-face
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-headline-done-voice
Personality used for org-headline-done
This personality uses  voice-monotone-medium whose  effect can be changed globally by customizing voice-monotone-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-hide-voice
Personality used for org-hide
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-indent-voice
Personality used for org-indent
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-org-inlinetask-voice
Personality used for org-inlinetask
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-latex-and-export-specials-voice
Personality used for org-latex-and-export-specials
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-1-voice
Personality used for org-level-1
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-2-voice
Personality used for org-level-2
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-3-voice
Personality used for org-level-3
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-4-voice
Personality used for org-level-4
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-5-voice
Personality used for org-level-5
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-6-voice
Personality used for org-level-6
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-7-voice
Personality used for org-level-7
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-level-8-voice
Personality used for org-level-8
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-link-voice
Personality used for org-link
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-org-meta-line-voice
Personality used for org-meta-line
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-property-value-voice
Personality used for org-property-value
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-scheduled-previously-voice
Personality used for org-scheduled-previously
This personality uses  voice-lighten-medium whose  effect can be changed globally by customizing voice-lighten-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-scheduled-today-voice
Personality used for org-scheduled-today
This personality uses  voice-bolden-extra whose  effect can be changed globally by customizing voice-bolden-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-scheduled-voice
Personality used for org-scheduled
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-sexp-date-voice
Personality used for org-sexp-date
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-special-keyword-voice
Personality used for org-special-keyword
This personality uses  voice-lighten-extra whose  effect can be changed globally by customizing voice-lighten-extra-settings.

@end defvar

@defvar {User Option} emacspeak-org-table-voice
Personality used for org-table
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-tag-voice
Personality used for org-tag
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@defvar {User Option} emacspeak-org-target-voice
Personality used for org-target
This personality uses  voice-bolden-medium whose  effect can be changed globally by customizing voice-bolden-medium-settings.

@end defvar

@defvar {User Option} emacspeak-org-time-grid-voice
Personality used for org-time-grid
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-org-todo-voice
Personality used for org-todo
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-upcoming-deadline-voice
Personality used for org-upcoming-deadline
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-org-verbatim-voice
Personality used for org-verbatim
This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.

@end defvar

@defvar {User Option} emacspeak-org-warning-voice
Personality used for org-warning
This personality uses  voice-bolden-and-animate whose  effect can be changed globally by customizing voice-bolden-and-animate-settings.

@end defvar

@node emacspeak-outline
@section emacspeak-outline

Provide additional advice to outline-mode

@subsection emacspeak-outline Commands

@deffn {Interactive Command} emacspeak-outline-speak-backward-heading  nil
Analogous to outline-backward-same-level
except that the outline section is  spoken
@end deffn

@deffn {Interactive Command} emacspeak-outline-speak-forward-heading  nil
Analogous to outline-forward-same-level,
except that the outline section is  spoken
@end deffn

@deffn {Interactive Command} emacspeak-outline-speak-next-heading  nil
Analogous to outline-next-visible-heading,
except that the outline section is  spoken
@end deffn

@deffn {Interactive Command} emacspeak-outline-speak-previous-heading  nil
Analogous to outline-previous-visible-heading,
except that the outline section is  spoken
@end deffn

@deffn {Interactive Command} emacspeak-outline-speak-this-heading  nil
Speak current outline section starting from point
@end deffn

@subsection emacspeak-outline Options

@defvar {User Option} emacspeak-outline-dont-query-before-speaking
*Option to control prompts when speaking  outline
sections.

@end defvar

@node emacspeak-package
@section emacspeak-package

PACKAGE == package.el
Manage Emacs packages.
This module speech-enables package.el with a few convenience commands.

@subsection emacspeak-package Commands

@deffn {Interactive Command} emacspeak-package-next-line  nil
Move to next line and speak it.
@end deffn

@deffn {Interactive Command} emacspeak-package-previous-line  nil
Move to next line and speak it.
@end deffn

@deffn {Interactive Command} emacspeak-package-summarize-line  nil
Succinct Summary.
@end deffn

@node emacspeak-perl
@section emacspeak-perl

Provide additional advice to perl-mode 

@node emacspeak-personality
@section emacspeak-personality

This module defines a personality interface for implementing voice
lock via font lock.

@subsection emacspeak-personality Options

@defvar {User Option} emacspeak-personality-show-unmapped-faces
If set, faces that dont have a corresponding personality are
displayed in the messages area.

@end defvar

@defvar {User Option} emacspeak-personality-voiceify-faces
Determines how and if we voiceify faces.

None means that  faces are not mapped to voices.
Prepend means that the corresponding personality is prepended to the
existing personalities on the text.

Append means place corresponding personality at the end.
Simple means that voiceification is not cumulative --this is the default.

@end defvar

@defvar {User Option} emacspeak-personality-voiceify-overlays
Determines how and if we voiceify overlays.

None means that overlay faces are not mapped to voices.
Prepend means that the corresponding personality is prepended to the
existing personalities on the text under overlay.

Append means place corresponding personality at the end.

@end defvar

@node emacspeak-php-mode
@section emacspeak-php-mode

speech-enable php-mode.el (available from sourceforge project
php-mode)

@node emacspeak-pianobar
@section emacspeak-pianobar

PIANOBAR ==  Pandora Client for Emacs

pianobar git://github.com/PromyLOPh/pianobar.git
Is a stand-alone client for Pandora Radio.
pianobar.el available on the Emacs Wiki at
http://www.emacswiki.org/emacs/pianobar.el
Provides access to Pandora Radio via pianobar from the comfort of Emacs.
This module speech-enables Pianobar and enhances it for the Complete Audio Desktop.

@subsection emacspeak-pianobar Commands

@deffn {Interactive Command} emacspeak-pianobar  nil
@kbd{C-e '}

Start or control Emacspeak Pianobar player.
@end deffn

@deffn {Interactive Command} emacspeak-pianobar-command  (key)
Invoke Pianobar  commands.
@end deffn

@deffn {Interactive Command} emacspeak-pianobar-electric-mode-toggle  nil
Toggle electric mode in pianobar buffer.
If electric mode is on, keystrokes invoke pianobar commands directly.
@end deffn

@deffn {Interactive Command} emacspeak-pianobar-switch-to-preset  nil
Switch to one of the  presets.
@end deffn

@node emacspeak-proced
@section emacspeak-proced

PROCED ==  Process Editor
A new Task Manager for Emacs.
Proced is part of emacs 23.

@subsection emacspeak-proced Commands

@deffn {Interactive Command} emacspeak-proced-jump-to-process  (name)
Jump to process by name.
@end deffn

@deffn {Interactive Command} emacspeak-proced-next-field  nil
Navigate to next field.
@end deffn

@deffn {Interactive Command} emacspeak-proced-next-line  nil
Move to next line and speak a summary.
@end deffn

@deffn {Interactive Command} emacspeak-proced-previous-field  nil
Navigate to previous field.
@end deffn

@deffn {Interactive Command} emacspeak-proced-previous-line  nil
Move to next line and speak a summary.
@end deffn

@deffn {Interactive Command} emacspeak-proced-speak-field  (field-name)
Speak value of specified field in current line.
@end deffn

@deffn {Interactive Command} emacspeak-proced-speak-that-field  nil
Speak desired field via single keystroke.
@end deffn

@deffn {Interactive Command} emacspeak-proced-speak-this-field  (&optional position)
Speak field at specified column --- defaults to current column.
@end deffn

@node emacspeak-pronounce
@section emacspeak-pronounce

This module implements user customizable pronunciation dictionaries
for emacspeak. Custom pronunciations can be defined per file, per
directory and/or per major mode. Emacspeak maintains a persistent
user dictionary upon request and loads these in new emacspeak
sessions. This module implements the user interface to the custom
dictionary as well as providing the internal API used by the rest
of emacspeak in using the dictionary.
Algorithm:

The persistent dictionary is a hash table where the hash keys are
filenames, directory names, or major-mode names. The hash values
are association lists defining the dictionary. Users of this module
can retrieve a dictionary made up of all applicable association
lists for a given file.

@subsection emacspeak-pronounce Commands

@deffn {Interactive Command} emacspeak-pronounce-clear-dictionaries  nil
Clear all current pronunciation dictionaries.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-define-local-pronunciation  (word pronunciation)
Define buffer local pronunciation.
Argument WORD specifies the word which should be pronounced as specified by PRONUNCIATION.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-define-pronunciation  nil
Interactively define entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-define-template-pronunciation  nil
Interactively define template entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-dispatch  nil
@kbd{C-e M-d}

Provides the user interface front-end to Emacspeak's pronunciation dictionaries.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-edit-pronunciations  (key)
Prompt for and launch a pronunciation editor on the
specified pronunciation dictionary key.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-load-dictionaries  (&optional filename)
Load pronunciation dictionaries.
Optional argument FILENAME specifies the dictionary file.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-refresh-pronunciations  nil
Refresh pronunciation table for current buffer.
Activates pronunciation dictionaries if not already active.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-save-dictionaries  nil
Writes out the persistent emacspeak pronunciation dictionaries.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-toggle-use-of-dictionaries  (&optional state)
Toggle use of pronunciation dictionaries in current buffer.
Pronunciations can be defined on a per file, per directory and/or per
mode basis.
Pronunciations are activated on a per buffer basis.
Turning on the use of pronunciation dictionaries results in emacspeak
composing a pronunciation table based on the currently defined
pronunciation dictionaries.
After this, the pronunciations will be applied whenever text in the
buffer is spoken.
Optional argument state can be used from Lisp programs to
explicitly turn pronunciations on or off.
@end deffn

@deffn {Interactive Command} emacspeak-pronounce-yank-word  nil
Yank word at point into minibuffer.
@end deffn

@subsection emacspeak-pronounce Options

@defvar {User Option} emacspeak-pronounce-common-xml-namespace-uri-pronunciations
Pronunciations for well known namespace URIs.

@end defvar

@defvar {User Option} emacspeak-pronounce-dictionaries-file
File that holds the persistent emacspeak pronunciation dictionaries.

@end defvar

@defvar {User Option} emacspeak-pronounce-internet-smileys-pronunciations
Pronunciation dictionary used in all instant messenger and IRC chat
modes.
See http://www.charm.net/~kmarsh/smiley.html. 

@end defvar

@defvar {User Option} emacspeak-pronounce-load-pronunciations-on-startup
Says if user dictionaries loaded on emacspeak startup.

@end defvar

@defvar {User Option} emacspeak-pronounce-pronunciation-personality
*Pronunciation personality.
This is the personality used when speaking things that have a pronunciation
applied.

@end defvar

@node emacspeak-py
@section emacspeak-py

This speech-enables python-mode available on sourceforge

@subsection emacspeak-py Commands

@deffn {Interactive Command} emacspeak-py-next-block  nil
Move forward to the beginning of the next block.
@end deffn

@deffn {Interactive Command} emacspeak-py-previous-block  nil
Move backward to the beginning of the current block.
If already at the beginning then move to previous block.
@end deffn

@node emacspeak-python
@section emacspeak-python

This speech-enables python-mode bundled with Emacs

@subsection emacspeak-python Commands

@deffn {Interactive Command} emacspeak-python-next-block  nil
Move forward to the beginning of the next block.
@end deffn

@deffn {Interactive Command} emacspeak-python-previous-block  nil
Move backward to the beginning of the current block.
If already at the beginning then move to previous block.
@end deffn

@node emacspeak-re-builder
@section emacspeak-re-builder

Speech-enable re-builder.
Will be used to advantage in efficiently setting up outline
regexp wizards



@subsection emacspeak-re-builder Options

@defvar {User Option} emacspeak-reb-match-0-voice
Personality used for reb-match-0
This personality uses  voice-lock-overlay-0 whose  effect can be changed globally by customizing voice-lock-overlay-0-settings.

@end defvar

@defvar {User Option} emacspeak-reb-match-1-voice
Personality used for reb-match-1
This personality uses  voice-lock-overlay-1 whose  effect can be changed globally by customizing voice-lock-overlay-1-settings.

@end defvar

@defvar {User Option} emacspeak-reb-match-2-voice
Personality used for reb-match-2
This personality uses  voice-lock-overlay-2 whose  effect can be changed globally by customizing voice-lock-overlay-2-settings.

@end defvar

@defvar {User Option} emacspeak-reb-match-3-voice
Personality used for reb-match-3
This personality uses  voice-lock-overlay-3 whose  effect can be changed globally by customizing voice-lock-overlay-3-settings.

@end defvar

@node emacspeak-redefine
@section emacspeak-redefine

This module redefines a few vital functions,
since advising them won't help.
Convention used:
To redefine function fn:
The original function will be renamed to Orig-fn.
A new function called emacspeak-fn will be defined.
 Finally, we will fset fn to emacspeak-fn
In the case of backward-char, forward-char, and self-insert-command
mere redefinition of the function will not do:
We will need to bind the new functions explicitly to the keys.

@subsection emacspeak-redefine Commands

@deffn {Interactive Command} emacspeak-backward-char  (&optional arg)
Backward-char redefined to speak char moved to. 
@end deffn

@deffn {Interactive Command} emacspeak-forward-char  (&optional arg)
Forward-char redefined to speak char moved to. 
@end deffn

@deffn {Interactive Command} emacspeak-self-insert-command  (&optional arg)
Insert a character.
Speaks the character if emacspeak-character-echo is true.
See  command emacspeak-toggle-word-echo bound to
C-e d w.
Speech flushes as you type.
@end deffn

@node emacspeak-reftex
@section emacspeak-reftex

This module speech-enables refteex --
reftex is a minor mode that makes navigation of TeX
documents  possible via a table of contents buffer.

@node emacspeak-remote
@section emacspeak-remote

In a running emacspeak session,
nuke the running server and start talking to a remote speech server,
after prompting for host and port

@subsection emacspeak-remote Commands

@deffn {Interactive Command} emacspeak-remote-connect-to-server  (host port)
@kbd{C-e M-r}

Connect to and start using remote speech server running on
host host and listening on port port. Host is the hostname of the
remote server, typically the desktop machine. Port is the tcp
port that that host is listening on for speech requests.
@end deffn

@deffn {Interactive Command} emacspeak-remote-edit-current-remote-hostname  nil
Interactively set up where we came from.
Value is persisted for use with ssh servers.
@end deffn

@deffn {Interactive Command} emacspeak-remote-home  nil
Open ssh session to where we came from.
Uses value returned by `emacspeak-remote-get-current-remote-hostname'.
@end deffn

@deffn {Interactive Command} emacspeak-remote-quick-connect-to-server  nil
Connect to remote server.
Does not prompt for host or port, but quietly uses the guesses
that appear as defaults when prompting. Use this once you are
sure the guesses are usually correct.
@end deffn

@deffn {Interactive Command} emacspeak-remote-quick-connect-via-ssh  nil
Connect via ssh to remote Emacspeak server.
Server is specified via custom option `emacspeak-remote-default-ssh-server'.
@end deffn

@deffn {Interactive Command} emacspeak-remote-ssh-to-server  (login host port)
Open ssh session to where we came from.
@end deffn

@subsection emacspeak-remote Options

@defvar {User Option} emacspeak-remote-default-ssh-server
Default ssh server to use for remote speech server.

@end defvar

@defvar {User Option} emacspeak-remote-hooks
List of hook functions that are run after
emacspeak is set to run as a remote application.
Use this to add actions you typically perform after you enter remote
mode.

@end defvar

@node emacspeak-replace
@section emacspeak-replace

This module causes emacs' replacement functions to use voice locking

@subsection emacspeak-replace Options

@defvar {User Option} emacspeak-replace-personality
Personality used in search and replace to indicate word
that is being replaced.

@end defvar

@node emacspeak-rmail
@section emacspeak-rmail

emacspeak extensions to rmail

@subsection emacspeak-rmail Commands

@deffn {Interactive Command} emacspeak-rmail-speak-current-message-labels  nil
Speak labels of current message
@end deffn

@deffn {Interactive Command} emacspeak-rmail-summarize-current-message  nil
Summarize current message
@end deffn

@node emacspeak-rpm
@section emacspeak-rpm

This module speech-enables rpm.el
rpm.el can be downloaded from
http://www.uni-karlsruhe.de/~Detlev.Zundel/download/rpm.el
and provides a nice interface to managing and browsing
rpm.

@node emacspeak-rpm-spec
@section emacspeak-rpm-spec

speech-enable rpm-spec-mode --part of Emacs 21 on RH 7.3

@subsection emacspeak-rpm-spec Options

@defvar {User Option} emacspeak-rpm-spec-dir-personality
Personality used for rpm-spec-dir-face
This personality uses  voice-lighten whose  effect can be changed globally by customizing voice-lighten-settings.

@end defvar

@defvar {User Option} emacspeak-rpm-spec-doc-personality
Personality used for rpm-spec-doc-face
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@defvar {User Option} emacspeak-rpm-spec-ghost-personality
Personality used for rpm-spec-ghost-face
This personality uses  voice-smoothen-medium whose  effect can be changed globally by customizing voice-smoothen-medium-settings.

@end defvar

@defvar {User Option} emacspeak-rpm-spec-macro-personality
Personality used for rpm-spec-macro-face
This personality uses  voice-bolden whose  effect can be changed globally by customizing voice-bolden-settings.

@end defvar

@defvar {User Option} emacspeak-rpm-spec-package-personality
Personality used for rpm-spec-package-face
This personality uses  voice-animate whose  effect can be changed globally by customizing voice-animate-settings.

@end defvar

@defvar {User Option} emacspeak-rpm-spec-tag-personality
Personality used for rpm-spec-tag-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@node emacspeak-ruby
@section emacspeak-ruby

Provide additional advice to Ruby mode 

@node emacspeak-sawfish
@section emacspeak-sawfish

Sawfish is a Gnome and KDE compliant window manager.
It is the window manager I use and is fully configurable
via Lisp.
sawfish.el is an emacs package for interacting with the
sawfish window manager.
This module speech-enables sawfish interaction from
Emacs

@node emacspeak-ses
@section emacspeak-ses

ses implements a simple spread sheet and is part of Emacs
21.4
This module speech-enables ses

@subsection emacspeak-ses Commands

@deffn {Interactive Command} emacspeak-ses-backward-column-and-summarize  nil
Move to previous column and summarize.
@end deffn

@deffn {Interactive Command} emacspeak-ses-backward-row-and-summarize  nil
Move to previous row  and summarize.
@end deffn

@deffn {Interactive Command} emacspeak-ses-forward-column-and-summarize  nil
Move to next column and summarize.
@end deffn

@deffn {Interactive Command} emacspeak-ses-forward-row-and-summarize  nil
Move to next row and summarize.
@end deffn

@deffn {Interactive Command} emacspeak-ses-summarize-cell  (cell-name)
Summarize specified  cell.
@end deffn

@deffn {Interactive Command} emacspeak-ses-summarize-current-cell  (&rest ignore)
Summarize current cell.
@end deffn

@node emacspeak-setup
@section emacspeak-setup

Entry point for Emacspeak.

@subsection emacspeak-setup Options

@defvar {User Option} dectalk-default-speech-rate
*Default speech rate at which TTS is started. 

@end defvar

@defvar {User Option} outloud-default-speech-rate
Default speech rate for outloud.

@end defvar

@node emacspeak-sgml-mode
@section emacspeak-sgml-mode

emacspeak extensions to sgml mode

@node emacspeak-sh-script
@section emacspeak-sh-script

This module speech-enables sh-script.el 

@node emacspeak-sigbegone
@section emacspeak-sigbegone

Speech-enables package sigbegone --voiceify sigs in email and news

@subsection emacspeak-sigbegone Options

@defvar {User Option} emacspeak-sigbegone-exorcized-personality
Personality used for sigbegone-exorcized-face
This personality uses  voice-smoothen-extra whose  effect can be changed globally by customizing voice-smoothen-extra-settings.

@end defvar

@node emacspeak-solitaire
@section emacspeak-solitaire

Auditory interface to solitaire

@subsection emacspeak-solitaire Commands

@deffn {Interactive Command} emacspeak-solitaire-show-column  nil
Audio format current column.
@end deffn

@deffn {Interactive Command} emacspeak-solitaire-show-row  nil
Audio format current row.
@end deffn

@deffn {Interactive Command} emacspeak-solitaire-speak-coordinates  nil
Speak coordinates of current position
@end deffn

@node emacspeak-sounds
@section emacspeak-sounds

This module provides the interface for generating auditory icons in emacspeak.
Design goal:
1) Auditory icons should be used to provide additional feedback,
not as a gimmick.
2) The interface should be usable at all times without the icons:
e.g. when on a machine without a sound card.
3) General principle for when to use an icon:
Convey information about events taking place in parallel.
For instance, if making a selection automatically moves the current focus
to the next choice,
We speak the next choice, while indicating the fact that something was selected with a sound cue.
 This interface will assume the availability of a shell command "play"
that can take one or more sound files and play them.
This module will also provide a mapping between names in the elisp world and actual sound files.
Modules that wish to use auditory icons should use these names, instead of actual file names.
As of Emacspeak 13.0, this module defines a themes
architecture for  auditory icons.
Sound files corresponding to a given theme are found in
appropriate subdirectories of emacspeak-sounds-directory

@subsection emacspeak-sounds Commands

@deffn {Interactive Command} emacspeak-audio-setup  nil
@kbd{C-e (}

Call appropriate audio environment set command.
@end deffn

@deffn {Interactive Command} emacspeak-play-all-icons  nil
Plays all defined icons and speaks their names.
@end deffn

@deffn {Interactive Command} emacspeak-set-auditory-icon-player  (player)
@kbd{C-e M-a}

Select  player used for producing auditory icons.
Recommended choices:

emacspeak-serve-auditory-icon for  the wave device.
emacspeak-queue-auditory-icon when using software TTS.
@end deffn

@deffn {Interactive Command} emacspeak-sounds-reset-local-player  nil
Ask Emacspeak to use a local audio player.
This lets me have Emacspeak switch to using audioplay on
solaris after I've used it for a while from a remote session
where it would use the more primitive speech-server based
audio player.
@end deffn

@deffn {Interactive Command} emacspeak-sounds-reset-sound  nil
Reload sound drivers.
@end deffn

@deffn {Interactive Command} emacspeak-sounds-select-theme  (theme)
@kbd{C-e )}

Select theme for auditory icons.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-auditory-icons  (&optional prefix)
@kbd{C-e C-a}

Toggle use of auditory icons.
Optional interactive PREFIX arg toggles global value.
@end deffn

@subsection emacspeak-sounds Options

@defvar {User Option} emacspeak-auditory-icon-function
*Function that plays auditory icons.
play : Launches play-program to play.
Serve: Send a command to the speech-server to play.
Queue : Add auditory icon to speech queue.
soxplay: Use sox to apply effect earwax for headphones.
Native : Use Emacs' builtin sound support.
Use Serve when working with remote speech servers.

@end defvar

@defvar {User Option} emacspeak-play-args
Set this to nil if using paplay from pulseaudio.

@end defvar

@defvar {User Option} emacspeak-play-program
Name of executable that plays sound files. 

@end defvar

@defvar {User Option} emacspeak-sounds-default-theme
Default theme for auditory icons. 

@end defvar

@defvar {User Option} emacspeak-sounds-reset-snd-module-command
Command to reset sound module.

@end defvar

@defvar {User Option} emacspeak-soxplay-command
Name of play executable from SoX

@end defvar

@node emacspeak-speak
@section emacspeak-speak

This module defines the core speech services used by emacspeak.
It depends on the speech server interface modules
It protects other parts of emacspeak
from becoming dependent on the speech server modules

@subsection emacspeak-speak Commands

@deffn {Interactive Command} emacspeak-blink-matching-open  nil
Move cursor momentarily to the beginning of the sexp before point.
Also display match context in minibuffer.
@end deffn

@deffn {Interactive Command} emacspeak-completion-pick-completion  nil
Pick completion and return safely where we came from.
@end deffn

@deffn {Interactive Command} emacspeak-completions-move-to-completion-group  nil
Move to group of choices beginning with character last
typed. If no such group exists, then we try to search for that
char, or dont move. 
@end deffn

@deffn {Interactive Command} emacspeak-dial-dtk  (number)
@kbd{C-e d t}

Prompt for and dial a phone NUMBER with the Dectalk.
@end deffn

@deffn {Interactive Command} emacspeak-execute-repeatedly  (command)
Execute COMMAND repeatedly.
@end deffn

@deffn {Interactive Command} emacspeak-goto-percent  (percent)
@kbd{C-e M-%}

Move to end  PERCENT of buffer like in View mode.
Display is centered at point.
Also set the mark at the position where point was.
@end deffn

@deffn {Interactive Command} emacspeak-mark-backward-mark  nil
@kbd{<C-up>}

Cycle backward through the mark ring.
@end deffn

@deffn {Interactive Command} emacspeak-owindow-next-line  (count)
@kbd{ESC <down>}

Move to the next line in the other window and speak it.
Numeric prefix arg COUNT can specify number of lines to move.
@end deffn

@deffn {Interactive Command} emacspeak-owindow-previous-line  (count)
@kbd{ESC <up>}

Move to the next line in the other window and speak it.
Numeric prefix arg COUNT specifies number of lines to move.
@end deffn

@deffn {Interactive Command} emacspeak-owindow-scroll-down  nil
@kbd{ESC <prior>}

Scroll down  the window that command `other-window' would move to.
Speak the window contents after scrolling.
@end deffn

@deffn {Interactive Command} emacspeak-owindow-scroll-up  nil
@kbd{ESC <next>}

Scroll up the window that command `other-window' would move to.
Speak the window contents after scrolling.
@end deffn

@deffn {Interactive Command} emacspeak-owindow-speak-line  nil
@kbd{ESC <select>}

Speak the current line in the other window.
@end deffn

@deffn {Interactive Command} emacspeak-read-next-line  (&optional arg)
@kbd{C-e <down>}

Read next line, specified by an offset, without moving.
Default is to read the next line. 
@end deffn

@deffn {Interactive Command} emacspeak-read-next-word  (&optional arg)
Read next word, specified as a numeric  arg, without moving.
Default is to read the next word. 
@end deffn

@deffn {Interactive Command} emacspeak-read-previous-line  (&optional arg)
@kbd{C-e <up>}

Read previous line, specified by an offset, without moving.
Default is to read the previous line. 
@end deffn

@deffn {Interactive Command} emacspeak-read-previous-word  (&optional arg)
Read previous word, specified as a prefix arg, without moving.
Default is to read the previous word. 
@end deffn

@deffn {Interactive Command} emacspeak-search  nil
@kbd{<search>}

Call search defined in <search>.
@end deffn

@deffn {Interactive Command} emacspeak-shell-command  (command)
Run shell command and speak its output.
@end deffn

@deffn {Interactive Command} emacspeak-silence  nil
@kbd{<silence>}

Silence is golden. Stop speech, and pause/resume any media
streams.
Runs `emacspeak-silence-hook' which can be used to configure
which media players get silenced or paused/resumed.
@end deffn

@deffn {Interactive Command} emacspeak-speak-and-skip-extent-upto-char  (char)
Search forward from point until we hit char.
Speak text between point and the char we hit.
@end deffn

@deffn {Interactive Command} emacspeak-speak-and-skip-extent-upto-this-char  nil
Speak extent delimited by point and last character typed.
@end deffn

@deffn {Interactive Command} emacspeak-speak-browse-buffer  (&optional browse)
@kbd{C-e ,}

Browse current buffer.
Default is to speak chunk having current personality.
Interactive prefix arg `browse'  repeatedly browses  through
  chunks having same personality as the current text chunk.
@end deffn

@deffn {Interactive Command} emacspeak-speak-buffer  (&optional arg)
@kbd{C-e b}

Speak current buffer  contents.
With prefix ARG, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.
 If voice lock mode is on, the paragraphs in the buffer are
voice annotated first,  see command `emacspeak-speak-voice-annotate-paragraphs'.
@end deffn

@deffn {Interactive Command} emacspeak-speak-buffer-filename  (&optional filename)
@kbd{C-e f}

Speak name of file being visited in current buffer.
Speak default directory if invoked in a dired buffer,
or when the buffer is not visiting any file.
Interactive prefix arg `filename' speaks only the final path
component.
The result is put in the kill ring for convenience.
@end deffn

@deffn {Interactive Command} emacspeak-speak-buffer-interactively  nil
@kbd{C-e B}

Speak the start of, rest of, or the entire buffer.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire buffer.
@end deffn

@deffn {Interactive Command} emacspeak-speak-char  (&optional prefix)
@kbd{C-e c}

Speak character under point.
Pronounces character phonetically unless  called with a PREFIX arg.
@end deffn

@deffn {Interactive Command} emacspeak-speak-char-name  (char)
tell me what this is
@end deffn

@deffn {Interactive Command} emacspeak-speak-completions-if-available  nil
Speak completions if available.
@end deffn

@deffn {Interactive Command} emacspeak-speak-continuously  nil
@kbd{C-e RET}

Speak a buffer continuously.
First prompts using the minibuffer for the kind of action to
perform after speaking each chunk.  E.G.  speak a line at a time
etc.  Speaking commences at current buffer position.  Pressing
C-g breaks out, leaving point on last chunk that
was spoken.  Any other key continues to speak the buffer.
@end deffn

@deffn {Interactive Command} emacspeak-speak-current-column  nil
@kbd{C-e =}

Speak the current column.
@end deffn

@deffn {Interactive Command} emacspeak-speak-current-field  nil
@kbd{C-e .}

Speak current field.
@end deffn

@deffn {Interactive Command} emacspeak-speak-current-kill  (count)
@kbd{C-e k}

Speak the current kill entry.
This is the text that will be yanked in by the next C-y.
Prefix numeric arg, COUNT, specifies that the text that will be yanked as a
result of a
C-y  followed by count-1 M-y
be spoken.
 The kill number that is spoken says what numeric prefix arg to give
to command yank.
@end deffn

@deffn {Interactive Command} emacspeak-speak-current-mark  (count)
@kbd{C-e C-@@}

Speak the line containing the mark.
With no argument, speaks the
line containing the mark--this is where `exchange-point-and-mark'
C-x C-x would jump.  Numeric prefix arg 'COUNT' speaks
line containing mark 'n' where 'n' is one less than the number of
times one has to jump using `set-mark-command' to get to this marked
position.  The location of the mark is indicated by an aural highlight
achieved by a change in voice personality.
@end deffn

@deffn {Interactive Command} emacspeak-speak-current-percentage  nil
@kbd{C-e %}

Announce the percentage into the current buffer.
@end deffn

@deffn {Interactive Command} emacspeak-speak-current-window  nil
Speak contents of current window.
Speaks entire window irrespective of point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-date-as-seconds  (time)
Read time value as a human-readable string, return seconds.
Seconds value is also placed in the kill-ring.
@end deffn

@deffn {Interactive Command} emacspeak-speak-display-char  (&optional prefix)
Display char under point using current speech display table.
Behavior is the same as command `emacspeak-speak-char'
bound to C-e c
for characters in the range 0--127.
Optional argument PREFIX  specifies that the character should be spoken phonetically.
@end deffn

@deffn {Interactive Command} emacspeak-speak-face-interval-and-move  nil
Speaks region delimited by text in current face, and moves past the chunk.
@end deffn

@deffn {Interactive Command} emacspeak-speak-front-of-buffer  nil
Speak   the buffer from start to   point
@end deffn

@deffn {Interactive Command} emacspeak-speak-header-line  nil
@kbd{C-e SPC}

Speak header line if set.
@end deffn

@deffn {Interactive Command} emacspeak-speak-help  (&optional arg)
@kbd{C-e h}

Speak help buffer if one present.
With prefix arg, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-help-interactively  nil
Speak the start of, rest of, or the entire help.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire help.
@end deffn

@deffn {Interactive Command} emacspeak-speak-hostname  nil
@kbd{C-e M-h}

Speak host name.
@end deffn

@deffn {Interactive Command} emacspeak-speak-line  (&optional arg)
@kbd{C-e l}

Speaks current line.  With prefix ARG, speaks the rest of the line
from point.  Negative prefix optional arg speaks from start of line to
point.  Voicifies if option `voice-lock-mode' is on.  Indicates
indentation with a tone if audio indentation is in use.  Indicates
position of point with an aural highlight if option
`emacspeak-show-point' is turned on --see command
`emacspeak-show-point' bound to M-x emacspeak-show-point.  Lines that
start hidden blocks of text, e.g.  outline header lines, or header
lines of blocks created by command `emacspeak-hide-or-expose-block'
are indicated with auditory icon ellipses.
@end deffn

@deffn {Interactive Command} emacspeak-speak-line-interactively  nil
@kbd{C-e L}

Speak the start of, rest of, or the entire line.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire line.
@end deffn

@deffn {Interactive Command} emacspeak-speak-line-number  nil
@kbd{C-e C-l}

Print the current buffer line number and narrowed line number of point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-line-set-column-filter  (filter)
@kbd{C-e |}

Set up filter for selectively speaking or ignoring portions of lines.
The filter is specified as a list of pairs.
For example, to filter  columns 1 -- 10 and 20 -- 25,
specify filter as
((0 9) (20 25)). Filter settings are persisted across sessions.  A
persisted filter is used as the default when prompting for a filter.
This allows one to accumulate a set of filters for specific files like
/var/adm/messages and /var/adm/maillog over time.
Option emacspeak-speak-line-invert-filter determines
the sense of the filter. 
@end deffn

@deffn {Interactive Command} emacspeak-speak-load-directory-settings  (&optional directory)
Load a directory specific Emacspeak settings file.
This is typically used to load up settings that are specific to
an electronic book consisting of many files in the same
directory.
@end deffn

@deffn {Interactive Command} emacspeak-speak-message-again  (&optional from-message-cache)
@kbd{C-e a}

Speak the last message from Emacs once again.
The message is also placed in the kill ring for convenient yanking
if `emacspeak-speak-message-again-should-copy-to-kill-ring' is set.
@end deffn

@deffn {Interactive Command} emacspeak-speak-message-at-time  (time message)
@kbd{C-e @@}

Set up ring-at-time to speak message at specified time.
Provides simple stop watch functionality in addition to other things.
See documentation for command run-at-time for details on time-spec.
@end deffn

@deffn {Interactive Command} emacspeak-speak-microseconds-since-epoch  (ms)
Speaks time value specified as microseconds  since epoch, e.g. as from float-time.
@end deffn

@deffn {Interactive Command} emacspeak-speak-milliseconds-since-epoch  (ms)
Speaks time value specified as milliseconds  since epoch, e.g. as from float-time.
@end deffn

@deffn {Interactive Command} emacspeak-speak-minibuffer  (&optional arg)
Speak the minibuffer contents
 With prefix arg, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-minor-mode-line  nil
@kbd{C-e M}

Speak the minor mode-information.
@end deffn

@deffn {Interactive Command} emacspeak-speak-mode-line  (&optional buffer-info)
@kbd{C-e m}

Speak the mode-line.
Speaks header-line if that is set when called non-interactively.
Interactive prefix arg speaks buffer info.
@end deffn

@deffn {Interactive Command} emacspeak-speak-next-face-chunk  nil
Moves to the front of next chunk having current face.
Speak that chunk after moving.
@end deffn

@deffn {Interactive Command} emacspeak-speak-next-field  nil
@kbd{C-e >}

Move to and speak next field.
@end deffn

@deffn {Interactive Command} emacspeak-speak-next-personality-chunk  nil
Moves to the front of next chunk having current personality.
Speak that chunk after moving.
@end deffn

@deffn {Interactive Command} emacspeak-speak-next-window  nil
@kbd{C-e C-n}

Speak the next window.
@end deffn

@deffn {Interactive Command} emacspeak-speak-other-buffer  (buffer)
@kbd{C-e M-b}

Speak specified buffer.
Useful to listen to a buffer without switching  contexts.
@end deffn

@deffn {Interactive Command} emacspeak-speak-other-window  (&optional arg)
Speak contents of `other' window.
Speaks entire window irrespective of point.
Semantics  of `other' is the same as for the builtin Emacs command
`other-window'.
Optional argument ARG  specifies `other' window to speak.
@end deffn

@deffn {Interactive Command} emacspeak-speak-page  (&optional arg)
@kbd{C-e [}

Speak a page.
With prefix ARG, speaks rest of current page.
Negative prefix arg will read from start of current page to point.
If option  `voice-lock-mode' is on, then it will use any defined personality.
@end deffn

@deffn {Interactive Command} emacspeak-speak-page-interactively  nil
@kbd{C-e ]}

Speak the start of, rest of, or the entire page.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire page.
@end deffn

@deffn {Interactive Command} emacspeak-speak-paragraph  (&optional arg)
@kbd{C-e @{ C-e p}

Speak paragraph.
With prefix arg, speaks rest of current paragraph.
Negative prefix arg will read from start of current paragraph to point.
If voice-lock-mode is on, then it will use any defined personality. 
@end deffn

@deffn {Interactive Command} emacspeak-speak-paragraph-interactively  nil
@kbd{C-e P}

Speak the start of, rest of, or the entire paragraph.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire paragraph.
@end deffn

@deffn {Interactive Command} emacspeak-speak-preceding-char  nil
Speak character before point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-predefined-window  (&optional arg)
@kbd{C-e 9 C-e 8 C-e 7 C-e 6 C-e 5 C-e 4 C-e 3 C-e 2 C-e 1 C-e 0}

Speak one of the first 10 windows on the screen.
Speaks entire window irrespective of point.
In general, you'll never have Emacs split the screen into more than
two or three.
Argument ARG determines the 'other' window to speak.
Semantics  of `other' is the same as for the builtin Emacs command
`other-window'.
@end deffn

@deffn {Interactive Command} emacspeak-speak-previous-face-chunk  nil
Moves to the front of previous chunk having current face.
Speak that chunk after moving.
@end deffn

@deffn {Interactive Command} emacspeak-speak-previous-field  nil
@kbd{C-e <}

Move to previous field and speak it.
@end deffn

@deffn {Interactive Command} emacspeak-speak-previous-personality-chunk  nil
Moves to the front of previous chunk having current personality.
Speak that chunk after moving.
@end deffn

@deffn {Interactive Command} emacspeak-speak-previous-window  nil
@kbd{C-e C-p}

Speak the previous window.
@end deffn

@deffn {Interactive Command} emacspeak-speak-rectangle  (start end)
@kbd{C-e R}

Speak a rectangle of text.
Rectangle is delimited by point and mark.
When call from a program,
arguments specify the START and END of the rectangle.
@end deffn

@deffn {Interactive Command} emacspeak-speak-region  (start end)
@kbd{C-e r}

Speak region.
Argument START  and END specify region to speak.
@end deffn

@deffn {Interactive Command} emacspeak-speak-rest-of-buffer  nil
@kbd{C-e n}

Speak remainder of the buffer starting at point
@end deffn

@deffn {Interactive Command} emacspeak-speak-seconds-since-epoch  (seconds)
Speaks time value specified as seconds  since epoch, e.g. as from float-time.
@end deffn

@deffn {Interactive Command} emacspeak-speak-sentence  (&optional arg)
Speak current sentence.
With prefix ARG, speaks the rest of the sentence  from point.
Negative prefix arg speaks from start of sentence to point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-set-display-table  (&optional prefix)
Sets up buffer specific speech display table that controls how
special characters are spoken. Interactive prefix argument causes
setting to be global.
@end deffn

@deffn {Interactive Command} emacspeak-speak-set-mode-punctuations  (setting)
@kbd{C-e d m}

Set punctuation mode for all buffers in current mode.
@end deffn

@deffn {Interactive Command} emacspeak-speak-sexp  (&optional arg)
Speak current sexp.
With prefix ARG, speaks the rest of the sexp  from point.
Negative prefix arg speaks from start of sexp to point.
If option  `voice-lock-mode' is on, then uses the personality.
@end deffn

@deffn {Interactive Command} emacspeak-speak-sexp-interactively  nil
@kbd{C-e "}

Speak the start of, rest of, or the entire sexp.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire sexp.
@end deffn

@deffn {Interactive Command} emacspeak-speak-show-active-network-interfaces  (&optional address)
@kbd{C-e I}

Shows all active network interfaces in the echo area.
With interactive prefix argument ADDRESS it prompts for a
specific interface and shows its address. The address is
also copied to the kill ring for convenient yanking.
@end deffn

@deffn {Interactive Command} emacspeak-speak-skim-buffer  nil
Skim the current buffer  a paragraph at a time.
@end deffn

@deffn {Interactive Command} emacspeak-speak-skim-next-paragraph  nil
Skim next paragraph.
@end deffn

@deffn {Interactive Command} emacspeak-speak-skim-paragraph  nil
Skim paragraph.
Skimming a paragraph results in the speech speeding up after
the first clause.
Speech is scaled by the value of dtk-speak-skim-scale
@end deffn

@deffn {Interactive Command} emacspeak-speak-spaces-at-point  nil
@kbd{C-e C-M-@@}

Speak the white space at point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-spell-current-word  nil
Spell word at  point.
@end deffn

@deffn {Interactive Command} emacspeak-speak-text-range  (property)
Speak text range identified by this PROPERTY.
@end deffn

@deffn {Interactive Command} emacspeak-speak-this-face-chunk  nil
Speak chunk of text around point that has current face.
@end deffn

@deffn {Interactive Command} emacspeak-speak-this-personality-chunk  nil
Speak chunk of text around point that has current
personality.
@end deffn

@deffn {Interactive Command} emacspeak-speak-time  (&optional world)
@kbd{C-e t}

Speak the time.
Optional interactive prefix arg `C-u'invokes world clock.
Timezone is specified using minibuffer completion.
Second interactive prefix sets clock to new timezone.
@end deffn

@deffn {Interactive Command} emacspeak-speak-version  (&optional update)
@kbd{C-e V}

Announce version information for running emacspeak.
@end deffn

@deffn {Interactive Command} emacspeak-speak-voice-annotate-paragraphs  nil
Locate paragraphs and voice annotate the first word.
Here, paragraph is taken to mean a chunk of text preceded by a blank line.
Useful to do this before you listen to an entire buffer.
@end deffn

@deffn {Interactive Command} emacspeak-speak-window-information  nil
@kbd{C-e C-w}

Speaks information about current window.
@end deffn

@deffn {Interactive Command} emacspeak-speak-word  (&optional arg)
@kbd{C-e w}

Speak current word.
With prefix ARG, speaks the rest of the word from point.
Negative prefix arg speaks from start of word to point.
If executed  on the same buffer position a second time, the word is
spelled out  instead of being spoken.
@end deffn

@deffn {Interactive Command} emacspeak-speak-word-interactively  nil
Speak the start of, rest of, or the entire word.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire word.
@end deffn

@deffn {Interactive Command} emacspeak-speak-world-clock  (zone &optional set)
Display current date and time  for specified zone.
Optional second arg `set' sets the TZ environment variable as well.
@end deffn

@deffn {Interactive Command} emacspeak-switch-to-reference-buffer  nil
Switch back to buffer that generated completions.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-action-mode  (&optional prefix)
Toggle state of  Emacspeak  action mode.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-audio-indentation  (&optional prefix)
@kbd{C-e d i}

Toggle state of  Emacspeak  audio indentation.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Specifying the method of indentation as `tones'
results in the Dectalk producing a tone whose length is a function of the
line's indentation.  Specifying `speak'
results in the number of initial spaces being spoken.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-character-echo  (&optional prefix)
@kbd{C-e d k}

Toggle state of  Emacspeak  character echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-comint-autospeak  (&optional prefix)
@kbd{C-e C-q}

Toggle state of Emacspeak comint autospeak.
When turned on, comint output is automatically spoken.  Turn this on if
you want your shell to speak its results.  Interactive
PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-comint-output-monitor  (&optional prefix)
@kbd{C-e o}

Toggle state of Emacspeak comint monitor.
When turned on, comint output is automatically spoken.  Turn this on if
you want your shell to speak its results.  Interactive
PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-header-line  nil
Toggle Emacspeak's default header line.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-line-echo  (&optional prefix)
@kbd{C-e d l}

Toggle state of  Emacspeak  line echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-mail-alert  (&optional prefix)
@kbd{C-e M-m}

Toggle state of  Emacspeak  mail alert.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Turning on this option results in Emacspeak producing an auditory icon
indicating the arrival  of new mail when displaying the mode line.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-show-point  (&optional prefix)
@kbd{C-e C-d}

Toggle state of  Emacspeak-show-point.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-speak-line-invert-filter  (&optional prefix)
@kbd{C-e \}

Toggle state of   how column filter is interpreted.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-speak-messages  (&optional prefix)
@kbd{C-e q}

Toggle the state of whether emacspeak echoes messages.
@end deffn

@deffn {Interactive Command} emacspeak-toggle-word-echo  (&optional prefix)
@kbd{C-e d w}

Toggle state of  Emacspeak  word echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end deffn

@deffn {Interactive Command} emacspeak-use-customized-blink-paren  nil
A customized blink-paren to speak  matching opening paren.
We need to call this in case Emacs is anal and loads its own
builtin blink-paren function which does not talk.
@end deffn

@deffn {Interactive Command} emacspeak-voiceify-rectangle  (start end &optional personality)
Voicify the current rectangle.
When calling from a program,arguments are
START END personality
Prompts for PERSONALITY  with completion when called interactively.
@end deffn

@deffn {Interactive Command} emacspeak-voiceify-region  (start end &optional personality)
Voicify the current region.
When calling from a program,arguments are
START END personality.
Prompts for PERSONALITY  with completion when called interactively.
@end deffn

@deffn {Interactive Command} emacspeak-zap-tts  nil
@kbd{C-e d z}

Send this command to the TTS directly.
@end deffn

@subsection emacspeak-speak Options

@defvar {User Option} emacspeak-audio-indentation
Option indicating if line indentation is cued.
If non-nil , then speaking a line indicates its indentation.
You can use  command `emacspeak-toggle-audio-indentation' bound
to C-e d i to toggle this
setting..

@end defvar

@defvar {User Option} emacspeak-audio-indentation-method
*Current technique used to cue indentation.  Default is
`speak'.  You can specify `tone' for producing a beep
indicating the indentation.  Automatically becomes local in
any buffer where it is set.

@end defvar

@defvar {User Option} emacspeak-character-echo
If t, then emacspeak echoes characters  as you type.
You can
use C-e d k to toggle this
setting.

@end defvar

@defvar {User Option} emacspeak-comint-autospeak
Says if comint output is automatically spoken.
You can use
  `emacspeak-toggle-comint-autospeak` bound to
  C-e C-q to toggle this
setting.

@end defvar

@defvar {User Option} emacspeak-decoration-rule
*Regular expressions to match lines that are purely
decorative ascii.

@end defvar

@defvar {User Option} emacspeak-horizontal-rule
*Regular expression to match horizontal rules in ascii
text.

@end defvar

@defvar {User Option} emacspeak-line-echo
If t, then emacspeak echoes lines as you type.
You can use C-e d l to set this
option.

@end defvar

@defvar {User Option} emacspeak-mail-alert
*Option to indicate cueing of new mail.
If t, emacspeak will alert you about newly arrived mail
with an auditory icon when
displaying the mode line.
You can use command
`emacspeak-toggle-mail-alert' bound to
C-e M-m to set this option.
If you have online access to a voicemail drop, you can have a
  voice-mail alert set up by specifying the location of the
  voice-mail drop via custom option
emacspeak-voicemail-spool-file.

@end defvar

@defvar {User Option} emacspeak-mail-alert-interval
Interval in seconds between mail alerts for the same pending
  message.

@end defvar

@defvar {User Option} emacspeak-mail-spool-file
Mail spool file examined  to alert you about newly
arrived mail.

@end defvar

@defvar {User Option} emacspeak-search
Default search engine.

@end defvar

@defvar {User Option} emacspeak-silence-hook
Functions run after emacspeak-silence is called.

@end defvar

@defvar {User Option} emacspeak-speak-directory-settings
*Name of file that holds directory specific settings.

@end defvar

@defvar {User Option} emacspeak-speak-embedded-url-pattern
Pattern to recognize embedded URLs.

@end defvar

@defvar {User Option} emacspeak-speak-filter-persistent-store
File where emacspeak filters are persisted.

@end defvar

@defvar {User Option} emacspeak-speak-line-column-filter
*List that specifies columns to be filtered.
The list when set holds pairs of start-col.end-col pairs
that specifies the columns that should not be spoken.
Each column contains a single character --this is inspired
by cut -c on UNIX.

@end defvar

@defvar {User Option} emacspeak-speak-line-invert-filter
Non-nil means the sense of `filter' is inverted when filtering
columns in a line --see
command emacspeak-speak-line-set-column-filter.

@end defvar

@defvar {User Option} emacspeak-speak-load-directory-settings-quietly
*User option that affects loading of directory specific settings.
If set to T,Emacspeak will not prompt before loading
directory specific settings.

@end defvar

@defvar {User Option} emacspeak-speak-maximum-line-length
*Threshold for determining `long' lines.
Emacspeak will ask for confirmation before speaking lines
that are longer than this length.  This is to avoid accidentally
opening a binary file and torturing the speech synthesizer
with a long string of gibberish.

@end defvar

@defvar {User Option} emacspeak-speak-messages
*Option indicating if messages are spoken.  If nil,
emacspeak will not speak messages as they are echoed to the
message area.  You can use command
`emacspeak-toggle-speak-messages' bound to
C-e q.

@end defvar

@defvar {User Option} emacspeak-speak-paragraph-personality
*Personality used to mark start of paragraph.

@end defvar

@defvar {User Option} emacspeak-speak-space-regexp
Pattern that matches white space.

@end defvar

@defvar {User Option} emacspeak-speak-time-format-string
*Format string that specifies how the time should be spoken.
See the documentation for function
`format-time-string'

@end defvar

@defvar {User Option} emacspeak-speak-zoneinfo-directory
Directory containing timezone data.

@end defvar

@defvar {User Option} emacspeak-unspeakable-rule
*Pattern to match lines of special chars.
This is a regular expression that matches lines containing only
non-alphanumeric characters.  emacspeak will generate a tone
instead of speaking such lines when punctuation mode is set
to some.

@end defvar

@defvar {User Option} emacspeak-use-header-line
Use default header line defined  by Emacspeak for buffers that
dont customize the header.

@end defvar

@defvar {User Option} emacspeak-voicemail-spool-file
Mail spool file examined  to alert you about newly
arrived voicemail.

@end defvar

@defvar {User Option} emacspeak-word-echo
If t, then emacspeak echoes words as you type.
You can use C-e d w to toggle this
option.

@end defvar

@node emacspeak-speedbar
@section emacspeak-speedbar

This module advises speedbar.el for use with Emacs.  The
latest speedbar can be obtained from
ftp://ftp.ultranet.com/pub/zappo/ This module ensures
that speedbar works smoothly outside a windowing system
in addition to speech enabling all interactive
commands. Emacspeak also adds an Emacspeak environment
specific entry point to speedbar
--emacspeak-speedbar-goto-speedbar-- and binds this

@subsection emacspeak-speedbar Commands

@deffn {Interactive Command} emacspeak-speedbar-click  nil
Does the equivalent of the mouse click from the keyboard
@end deffn

@deffn {Interactive Command} emacspeak-speedbar-goto-speedbar  nil
Switch to the speedbar
@end deffn

@subsection emacspeak-speedbar Options

@defvar {User Option} emacspeak-speedbar-button-personality
personality used for speedbar buttons

@end defvar

@defvar {User Option} emacspeak-speedbar-default-personality
Default personality used in speedbar buffers

@end defvar

@defvar {User Option} emacspeak-speedbar-directory-personality
Speedbar personality for directory buttons

@end defvar

@defvar {User Option} emacspeak-speedbar-file-personality
Personality used for file buttons

@end defvar

@defvar {User Option} emacspeak-speedbar-highlight-personality
Personality used for for speedbar highlight.

@end defvar

@defvar {User Option} emacspeak-speedbar-selected-personality
Personality used to indicate speedbar selection

@end defvar

@defvar {User Option} emacspeak-speedbar-tag-personality
Personality used for speedbar tags

@end defvar

@node emacspeak-sql
@section emacspeak-sql

This module speech enables sql-mode--
available from
http://paddington.ic.uva.nl/public/sql-modes.zip
sql-mode.el implemented by the above package
sets up an Emacs to SQL interface where you can
interactively evaluate SQL expressions.

@node emacspeak-sudoku
@section emacspeak-sudoku

Playing SuDoku using speech output.
Written to discover what type of feedback one needs for  this
task.
See http://emacspeak.blogspot.com/2006/02/playing-sudoku-using-auditory-feedback.html

@subsection emacspeak-sudoku Commands

@deffn {Interactive Command} emacspeak-sudoku-board-columns-summarize  nil
Summarize columns --- speaks number of remaining cells.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-board-distribution-summarize  nil
Shows distribution of filled numbers.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-board-rows-summarize  nil
Summarize rows --- speaks number of remaining cells.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-board-sub-squares-summarize  nil
Summarize sub-squares --- speaks number of remaining cells.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-board-summarizer  nil
Dispatch to  appropriate summarizer.

d   Number Distribution
r   Row Distribution
c   Column Distribution
s   Sub-square Distribution.

@end deffn

@deffn {Interactive Command} emacspeak-sudoku-down-sub-square  nil
Move to top-left corner of  sub-square below current one.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-erase-current-column  nil
Erase current column.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-erase-current-row  nil
Erase current row.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-erase-current-sub-square  nil
Erase current sub-square.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-hint  nil
Provide hint for current cell.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-history-pop  nil
Pop saved state off stack and redraw board.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-history-push  nil
Push current state on to history stack.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-how-many-remaining  nil
Speak number of remaining squares to fill.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-next-sub-square  nil
Move to top-left corner of next sub-square.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-previous-sub-square  nil
Move to top-left corner of previous sub-square.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-current-cell-coordinates  nil
speak current cell coordinates.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-current-cell-value  nil
Speak value in current cell.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-current-column  nil
Speak current column.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-current-row  nil
Speak current row.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-current-sub-square  nil
Speak current sub-square.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-remaining-in-column  nil
Speaks number of remaining cells in current column.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-remaining-in-row  nil
Speaks number of remaining cells in current row.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-speak-remaining-in-sub-square  nil
Speaks number of remaining cells in current sub-square.
@end deffn

@deffn {Interactive Command} emacspeak-sudoku-up-sub-square  nil
Move to top-left corner of  sub-square above current one.
@end deffn

@node emacspeak-supercite
@section emacspeak-supercite

Speech-enable supercite.

@node emacspeak-table
@section emacspeak-table

Implements a module that provides a high level interface to
tabulated information.

@node emacspeak-table-ui
@section emacspeak-table-ui

User interface to tables

@subsection emacspeak-table-ui Commands

@deffn {Interactive Command} emacspeak-table-copy-current-element-to-kill-ring  nil
Copy current table element to kill ring.
@end deffn

@deffn {Interactive Command} emacspeak-table-copy-current-element-to-register  (&rest rest)
:around advice: `ad-Advice-emacspeak-table-copy-current-element-to-register'

Copy current table element to specified register.

(fn REGISTER)
@end deffn

@deffn {Interactive Command} emacspeak-table-copy-to-clipboard  nil
Copy table in current buffer to the table clipboard.
Current buffer must be in emacspeak-table mode.
@end deffn

@deffn {Interactive Command} emacspeak-table-display-table-in-region  (start end)
@kbd{C-e TAB}

Recognize tabular data in current region and display it in table
browsing mode in a a separate buffer.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command `describe-mode' bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser.
@end deffn

@deffn {Interactive Command} emacspeak-table-find-csv-file  (filename)
Process a csv (comma separated values) file.
The processed  data and presented using emacspeak table navigation. 
@end deffn

@deffn {Interactive Command} emacspeak-table-find-file  (filename)
@kbd{C-e C-t}

Open a file containing table data and display it in table mode.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The etc/tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command `describe-mode' bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser.
@end deffn

@deffn {Interactive Command} emacspeak-table-get-entry-with-headers  (row column &optional row-head-p col-head-p)
Return   both row and column header and table element
@end deffn

@deffn {Interactive Command} emacspeak-table-goto  (row column)
Prompt for a table cell coordinates and jump to it.
@end deffn

@deffn {Interactive Command} emacspeak-table-goto-bottom  nil
Goes to the bottom of the current column.
@end deffn

@deffn {Interactive Command} emacspeak-table-goto-left  nil
Goes to the left of the current row.
@end deffn

@deffn {Interactive Command} emacspeak-table-goto-right  nil
Goes to the right of the current row.
@end deffn

@deffn {Interactive Command} emacspeak-table-goto-top  nil
Goes to the top of the current column.
@end deffn

@deffn {Interactive Command} emacspeak-table-next-column  (&optional count)
Move to the next column if possible
@end deffn

@deffn {Interactive Command} emacspeak-table-next-row  (&optional count)
Move to the next row if possible
@end deffn

@deffn {Interactive Command} emacspeak-table-paste-from-clipboard  nil
Paste the emacspeak table clipboard into the current buffer.
Use the major  mode of this buffer to  decide what kind of table
markup to use.
@end deffn

@deffn {Interactive Command} emacspeak-table-previous-column  (&optional count)
Move to the previous column  if possible
@end deffn

@deffn {Interactive Command} emacspeak-table-previous-row  (&optional count)
Move to the previous row if possible
@end deffn

@deffn {Interactive Command} emacspeak-table-search  (&optional what)
Search the table for matching elements.  Interactively prompts for
row or column to search and pattern to look for.    If there is a match, makes
the matching cell current. When called from a program, `what' can
  be either `row' or `column'.
@end deffn

@deffn {Interactive Command} emacspeak-table-search-column  nil
Search in current table column.
@end deffn

@deffn {Interactive Command} emacspeak-table-search-headers  nil
Search the table row or column headers.  Interactively prompts for
row or column to search and pattern to look for.  If there is a
match, makes the matching row or column current.
@end deffn

@deffn {Interactive Command} emacspeak-table-search-row  nil
Search in current table row.
@end deffn

@deffn {Interactive Command} emacspeak-table-select-automatic-speaking-method  nil
Interactively select the kind of automatic speech to produce when
browsing table elements
@end deffn

@deffn {Interactive Command} emacspeak-table-sort-on-current-column  nil
Sort table on current column. 
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-both-headers-and-element  nil
Speak  both row and column header and table element
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-column-filtered  (&optional prefix)
Speaks a table column after applying a specified column filter.
Optional prefix arg prompts for a new filter.
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-column-header-and-element  nil
Speak  column header and table element
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-coordinates  nil
Speak current table coordinates.
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-current-element  nil
Speak current table element
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-dimensions  nil
Speak current table dimensions.
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-row-filtered  (&optional prefix)
Speaks a table row after applying a specified row filter.
Optional prefix arg prompts for a new filter.
@end deffn

@deffn {Interactive Command} emacspeak-table-speak-row-header-and-element  nil
Speak  row header and table element
@end deffn

@deffn {Interactive Command} emacspeak-table-ui-filter-load  (file)
Load saved filter settings.
@end deffn

@deffn {Interactive Command} emacspeak-table-ui-filter-save  (file)
Save out filter settings.
@end deffn

@deffn {Interactive Command} emacspeak-table-view-csv-buffer  (&optional buffer-name)
Process a csv (comma separated values) data.
The processed  data and presented using emacspeak table navigation. 
@end deffn

@subsection emacspeak-table-ui Options

@defvar {User Option} emacspeak-table-column-header-personality
personality for speaking column headers.

@end defvar

@defvar {User Option} emacspeak-table-row-header-personality
Personality for speaking row headers

@end defvar

@node emacspeak-tabulate
@section emacspeak-tabulate

This module is a simple table recognizer.
Can recognize the columns in tabulated output, e.g. ps, ls output

@subsection emacspeak-tabulate Commands

@deffn {Interactive Command} emacspeak-tabulate-region  (start end &optional mark-fields)
@kbd{C-e i}

Voicifies the white-space of a table if one found.  Optional interactive prefix
arg mark-fields specifies if the header row information is used to mark fields
in the white-space.
@end deffn

@node emacspeak-tapestry
@section emacspeak-tapestry

emacspeak extensions to speak window widnow layouts 

@subsection emacspeak-tapestry Commands

@deffn {Interactive Command} emacspeak-tapestry-describe-tapestry  (&optional details)
@kbd{C-e M-t}

Describe the current layout of visible buffers in current frame.
Use interactive prefix arg to get coordinate positions of the
displayed buffers.
@end deffn

@deffn {Interactive Command} emacspeak-tapestry-select-window-by-name  (buffer-name)
@kbd{C-e W}

Select window by the name of the buffer it displays.
This is useful when using modes like ECB or the new GDB UI where
  you want to preserve the window layout 
but quickly switch to a window by name.
@end deffn

@node emacspeak-tar
@section emacspeak-tar

Auditory interface to tar mode

@subsection emacspeak-tar Commands

@deffn {Interactive Command} emacspeak-tar-speak-file-date  nil
Speak date of file current entry 
@end deffn

@deffn {Interactive Command} emacspeak-tar-speak-file-permissions  nil
Speak permissions of file current entry 
@end deffn

@deffn {Interactive Command} emacspeak-tar-speak-file-size  nil
Speak size of file current entry 
@end deffn

@node emacspeak-tcl
@section emacspeak-tcl

Provide additional advice to tcl-mode 

@node emacspeak-tdtd
@section emacspeak-tdtd

tdtd is an emacs package for authoring and maintaining
XML and SGML DTDs
tdtd is at http://www.mulberrytech.com/tdtd/index.html
this module speech-enables tdtd

@node emacspeak-tempo
@section emacspeak-tempo

tempo.el provides the
infrastructure  for building up templates.
This is used by html-helper-mode to allow for easy writing of HTML
This module extends Emacspeak to provide fluent spoken feedback

@node emacspeak-tetris
@section emacspeak-tetris

Speech-enables tetris.

@subsection emacspeak-tetris Commands

@deffn {Interactive Command} emacspeak-tetris-goto-bottom-row  nil
Move to and speak bottom row
@end deffn

@deffn {Interactive Command} emacspeak-tetris-goto-top-row  nil
Move to and speak the top row
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-column  (&optional x)
Speak  column --default is to speak current column
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-coordinates  nil
Speak current position
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-current-shape  nil
Speak current shape
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-current-shape-and-coordinates  nil
Speak shape orientation and coordinates
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-next-shape  nil
Speak next shape
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-row  nil
Speak current tetris row
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-row-number  nil
Speak where on the tetris board we are
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-score  nil
Speak the score
@end deffn

@deffn {Interactive Command} emacspeak-tetris-speak-x-coordinate  nil
Speak current position
@end deffn

@node emacspeak-texinfo
@section emacspeak-texinfo

This module speech enables net-texinfo mode

@node emacspeak-todo-mode
@section emacspeak-todo-mode

todo-mode (part of Emacs 21) provides todo-lists that can be
integrated with the Emacs calendar.
This module speech-enables todo-mode

@node emacspeak-twittering
@section emacspeak-twittering

 module twittering-mode.el  is found on  the emacs wiki
This module speech-enables twittering-mode which works using
 oauth for authentication.
Note: As of Thu Sep  2 08:11:25 PDT 2010
twit.el is broken.

Advises interactive functions to speak

@subsection emacspeak-twittering Commands

@deffn {Interactive Command} emacspeak-twittering-jump-to-following-url  nil
Move to and open closest URI  following point.
@end deffn

@deffn {Interactive Command} emacspeak-twittering-speak-this-tweet  nil
Speak tweet under point.
@end deffn

@subsection emacspeak-twittering Options

@defvar {User Option} emacspeak-twittering-uri-personality
Personality used for twittering-uri-face
This personality uses  voice-brighten whose  effect can be changed globally by customizing voice-brighten-settings.

@end defvar

@defvar {User Option} emacspeak-twittering-username-personality
Personality used for twittering-username-face
This personality uses  voice-smoothen whose  effect can be changed globally by customizing voice-smoothen-settings.

@end defvar

@node emacspeak-url-template
@section emacspeak-url-template

It is often useful to have ``parametrized hot list entries''
i.e., hotlist entries that are ``templates'' for the
actual URL.
The user provides values for the parametrized portions
of the URL e.g. the date.
See @xref{URL Templates}, for details on the URL templates
that are presently defined.

@subsection emacspeak-url-template Commands

@deffn {Interactive Command} emacspeak-url-template-fetch  (&optional documentation)
@kbd{C-e u}

Fetch a pre-defined resource.
Use Emacs completion to obtain a list of available resources.
Resources typically prompt for the relevant information
before completing the request.
Optional interactive prefix arg displays documentation for specified resource.
@end deffn

@deffn {Interactive Command} emacspeak-url-template-help  nil
Display documentation for a URL template.
Use Emacs completion to obtain a list of available
resources.
@end deffn

@deffn {Interactive Command} emacspeak-url-template-load  (file)
Load URL template resources from specified location.
@end deffn

@deffn {Interactive Command} emacspeak-url-template-save  (file)
Save out url templates.
@end deffn

@subsection emacspeak-url-template Options

@defvar {User Option} emacspeak-url-template-weather-city-state
Default city/state for weather forecasts

@end defvar

@node emacspeak-view
@section emacspeak-view

Provide additional advice to view-mode

@subsection emacspeak-view Commands

@deffn {Interactive Command} emacspeak-view-line-to-top  nil
Moves current line to top of window
@end deffn

@node emacspeak-vm
@section emacspeak-vm

This module extends the mail reader vm.
Uses voice locking for message headers and cited messages

@subsection emacspeak-vm Commands

@deffn {Interactive Command} emacspeak-vm-browse-message  nil
Browse an email message --read it paragraph at a time. 
@end deffn

@deffn {Interactive Command} emacspeak-vm-catch-up-all-messages  nil
Mark all messages in folder to be deleted. Use with caution.
@end deffn

@deffn {Interactive Command} emacspeak-vm-locate-subject-line  nil
Locates the subject line in a message being read.
Useful when you're reading a message
that has been forwarded multiple times.
@end deffn

@deffn {Interactive Command} emacspeak-vm-mode-line  nil
VM mode line information. 
@end deffn

@deffn {Interactive Command} emacspeak-vm-next-button  (n)
Move point to N buttons forward.
If N is negative, move backward instead.
@end deffn

@deffn {Interactive Command} emacspeak-vm-speak-labels  nil
Speak a message's labels
@end deffn

@deffn {Interactive Command} emacspeak-vm-speak-message  nil
Move point to the message body.
@end deffn

@deffn {Interactive Command} emacspeak-vm-yank-header  nil
Yank specified header into kill ring.
@end deffn

@subsection emacspeak-vm Options

@defvar {User Option} emacspeak-vm-cal2text
Executable that converts calendar invitations    on
  standard input to plain text.

@end defvar

@defvar {User Option} emacspeak-vm-customize-mime-settings
Non-nil will cause Emacspeak to configure VM mime
settings to match what the author of Emacspeak uses.

@end defvar

@defvar {User Option} emacspeak-vm-doc2text
Executable that converts MSWord documents on standard input to plain
text using wvText.

@end defvar

@defvar {User Option} emacspeak-vm-headers-strip-octals
Specify whether non-ascii chars should be stripped when
  speaking email headers.

@end defvar

@defvar {User Option} emacspeak-vm-pdf2text
Executable that converts PDF on standard input to plain
text using pdftotext.

@end defvar

@defvar {User Option} emacspeak-vm-ppt2html
Executable that converts MSPPT documents on standard input to HTML
 using xlhtml.

@end defvar

@defvar {User Option} emacspeak-vm-use-raman-settings
Should VM  use the customizations used by the author of Emacspeak.

@end defvar

@defvar {User Option} emacspeak-vm-voice-lock-messages
Set this to T if you want messages automatically voice locked.
Note that some badly formed mime messages  cause trouble.

@end defvar

@defvar {User Option} emacspeak-vm-xls2html
Executable that converts MSXL documents on standard input to HTML
 using xlhtml.

@end defvar

@node emacspeak-w3
@section emacspeak-w3

Ensure that speech support for W3 gets installed and
loaded correctly.
The emacs W3 browser comes with builtin support for
Emacspeak and ACSS

@subsection emacspeak-w3 Commands

@deffn {Interactive Command} emacspeak-w3-curl-url-under-point  nil
Display contents of URL under point using Curl and W3.  The
document is displayed in a separate buffer. 
@end deffn

@deffn {Interactive Command} emacspeak-w3-customize-base-uri-pronunciation  nil
Defines custom buffer local pronunciation for base URI.
@end deffn

@deffn {Interactive Command} emacspeak-w3-do-onclick  nil
Do  onclick action.
@end deffn

@deffn {Interactive Command} emacspeak-w3-javascript-follow-link  nil
Follow URL hidden inside a javascript link
@end deffn

@deffn {Interactive Command} emacspeak-w3-jump-to-submit  nil
Jump to next available submit button.
@end deffn

@deffn {Interactive Command} emacspeak-w3-lynx-url-under-point  nil
Display contents of URL under point using LYNX.  The
document is displayed in a separate buffer. Note that the
hyperlinks in that display are not active-- this facility is
present only to help me iron out the remaining problems with
the table structure extraction code in W3.
@end deffn

@deffn {Interactive Command} emacspeak-w3-next-block  nil
Move by block level displays.
@end deffn

@deffn {Interactive Command} emacspeak-w3-next-doc-element  (&optional count)
Move forward  to the next document element.
Optional interactive prefix argument COUNT
specifies by how many elements to move.
@end deffn

@deffn {Interactive Command} emacspeak-w3-next-parsed-item  nil
Move to and speak next parsed item.
@end deffn

@deffn {Interactive Command} emacspeak-w3-previous-doc-element  (&optional count)
Move back  to the previous document element.
Optional interactive prefix argument COUNT
specifies by how many elements to move.
@end deffn

@deffn {Interactive Command} emacspeak-w3-show-anchor-class  nil
Display any class attributes set on corresponding anchor
element. 
@end deffn

@deffn {Interactive Command} emacspeak-w3-show-http-headers  nil
Show HTTP headers using lwp-request
@end deffn

@deffn {Interactive Command} emacspeak-w3-speak-next-block  nil
Move to next block and speak it.
@end deffn

@deffn {Interactive Command} emacspeak-w3-speak-next-element  nil
Speak next document element.
@end deffn

@deffn {Interactive Command} emacspeak-w3-speak-this-element  nil
Speak document element under point.
@end deffn

@deffn {Interactive Command} emacspeak-w3-toggle-table-borders  nil
Toggle drawing of W3 table borders
@end deffn

@subsection emacspeak-w3 Options

@defvar {User Option} emacspeak-w3-base-uri-pronunciation
Custom pronunciation for base URIs in w3 buffers.

@end defvar

@defvar {User Option} emacspeak-w3-create-imenu-index
Create IMenu index by default.

@end defvar

@defvar {User Option} emacspeak-w3-lwp-request
LWP Request command from perl LWP.

@end defvar

@defvar {User Option} emacspeak-w3-lynx-program
Name of lynx executable

@end defvar

@defvar {User Option} emacspeak-w3-tidy-html
Tidy HTML before rendering.

@end defvar

@defvar {User Option} emacspeak-w3-tidy-options
Options to pass to tidy program

@end defvar

@defvar {User Option} emacspeak-w3-tidy-program
Name of tidy executable

@end defvar

@node emacspeak-w3m
@section emacspeak-w3m

@subsection emacspeak-w3m Commands

@deffn {Interactive Command} emacspeak-w3m-preview-this-buffer  nil
Preview this buffer in w3m.
@end deffn

@subsection emacspeak-w3m Options

@defvar {User Option} emacspeak-w3m-speak-titles-on-switch
Speak the document title when switching between w3m buffers.
If non-nil, switching between w3m buffers will speak the title
instead of the modeline.

@end defvar

@node emacspeak-wdired
@section emacspeak-wdired

Speech-enable wdired to permit in-place renaming of groups of files.

@node emacspeak-we
@section emacspeak-we

we is for webedit
Invoke XSLT to edit/transform Web pages before they get
rendered.
we makes emacspeak's webedit layer independent of a given
Emacs web browser like W3 or W3M
This module will use the abstraction provided by browse-url
to handle Web pages.
Module emacspeak-webutils provides the needed additional
abstractions not already covered by browse-url

@subsection emacspeak-we Commands

@deffn {Interactive Command} emacspeak-we-class-filter-and-follow  (class url)
Follow url and point, and filter the result by specified class.
Class can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.
@end deffn

@deffn {Interactive Command} emacspeak-we-class-filter-and-follow-link  (&optional prompt)
Follow url and point, and filter the result by specified class.
Class can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.
@end deffn

@deffn {Interactive Command} emacspeak-we-count-matches  (url locator)
Count matches for locator  in Web page.
@end deffn

@deffn {Interactive Command} emacspeak-we-count-nested-tables  (url)
Count nested tables in Web page.
@end deffn

@deffn {Interactive Command} emacspeak-we-count-tables  (url)
Count  tables in Web page.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-by-class  (class url &optional speak)
Extract elements having specified class attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of class values as completion.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-by-class-list  (classes url &optional speak)
Extract elements having class specified in list `classes' from HTML.
Extracts specified elements from current WWW page and displays it
in a separate buffer.  Interactive use provides list of class
values as completion. 
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-by-id  (id url &optional speak)
Extract elements having specified id attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer.
Interactive use provides list of id values as completion.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-by-id-list  (ids url &optional speak)
Extract elements having id specified in list `ids' from HTML.
Extracts specified elements from current WWW page and displays it in a
separate buffer. Interactive use provides list of id values as completion. 
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-by-property  (url &optional speak)
Interactively prompt for an HTML property, e.g. id or class,
and provide a completion list of applicable  property values. Filter document by property that is specified.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-by-role  (role url &optional speak)
Extract elements having specified role attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of role values as completion.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-id-list-text  (ids url &optional speak)
Extract text nodes from elements having id specified in list `ids' from HTML.
Extracts specified elements from current WWW page and displays it in a
separate buffer. Interactive use provides list of id values as completion. 
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-id-text  (id url &optional speak)
Extract text nodes from elements having specified id attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer.
Interactive use provides list of id values as completion.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-matching-urls  (pattern url &optional speak)
Extracts links whose URL matches pattern.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-media-streams  (url &optional speak)
Extract links to media streams.
operate on current web page when in a browser buffer; otherwise
 prompt for url.  Optional arg `speak' specifies if the result
 should be spoken automatically.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-media-streams-under-point  nil
In browser buffers, extract media streams from url under point.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-nested-table  (index url &optional speak)
Extract nested table specified by `table-index'. Default is to
operate on current web page when in a browser buffer; otherwise
prompt for URL. Optional arg `speak' specifies if the result should be
spoken automatically.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-nested-table-list  (tables url &optional speak)
Extract specified list of tables from a Web page.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-print-streams  (url &optional speak)
Extract links to printable  streams.
operate on current web page when in a browser buffer; otherwise
 prompt for url.  Optional arg `speak' specifies if the result
 should be spoken automatically.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-table-by-match  (match url &optional speak)
Extract table containing  specified match.
 Optional arg url specifies the page to extract content from.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-table-by-position  (position url &optional speak)
Extract table at specified position.
Default is to extract from current page.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-tables-by-match-list  (match-list url &optional speak)
Extract specified  tables from a WWW page.
Tables are specified by containing  match pattern
 found in the match list.
@end deffn

@deffn {Interactive Command} emacspeak-we-extract-tables-by-position-list  (positions url &optional speak)
Extract specified list of nested tables from a WWW page.
Tables are specified by their position in the list
 of nested tables found in the page.
@end deffn

@deffn {Interactive Command} emacspeak-we-follow-and-extract-main  (&optional speak)
Follow URL, then extract role=main.
@end deffn

@deffn {Interactive Command} emacspeak-we-follow-and-filter-by-id  (id)
Follow url and point, and filter the result by specified id.
Id can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.
@end deffn

@deffn {Interactive Command} emacspeak-we-junk-by-class  (class url &optional speak)
Extract elements not having specified class attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of class values as completion.
@end deffn

@deffn {Interactive Command} emacspeak-we-junk-by-class-list  (classes url &optional speak)
Extract elements not having class specified in list `classes' from HTML.
Extracts specified elements from current WWW page and displays it
in a separate buffer.  Interactive use provides list of class
values as completion. 
@end deffn

@deffn {Interactive Command} emacspeak-we-style-filter  (style url &optional speak)
Extract elements matching specified style
from HTML.  Extracts specified elements from current WWW
page and displays it in a separate buffer.  Optional arg url
specifies the page to extract contents  from.
@end deffn

@deffn {Interactive Command} emacspeak-we-toggle-xsl-keep-result  nil
Toggle xsl keep result flag.
@end deffn

@deffn {Interactive Command} emacspeak-we-url-expand-and-execute  nil
Applies buffer-specific URL expander/executor function.
@end deffn

@deffn {Interactive Command} emacspeak-we-url-rewrite-and-follow  (&optional prompt)
Apply a url rewrite rule as specified in the current buffer
before following link under point.  If no rewrite rule is
defined, first prompt for one.  Rewrite rules are of the
form `(from to)' where from and to are strings.  Typically, the
rewrite rule is automatically set up by Emacspeak tools like
websearch where a rewrite rule is known.  Rewrite rules are
useful in jumping directly to the printer friendly version of an
article for example.  Optional interactive prefix arg prompts for
a rewrite rule even if one is already defined.
@end deffn

@deffn {Interactive Command} emacspeak-we-xpath-filter-and-follow  (&optional prompt)
Follow url and point, and filter the result by specified xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.
@end deffn

@deffn {Interactive Command} emacspeak-we-xpath-junk-and-follow  (&optional prompt)
Follow url and point, and filter the result by junking
elements specified by xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.
@end deffn

@deffn {Interactive Command} emacspeak-we-xsl-toggle  nil
Toggle  application of XSL transformations.
@end deffn

@deffn {Interactive Command} emacspeak-we-xslt-apply  (xsl)
Apply specified transformation to current Web page.
@end deffn

@deffn {Interactive Command} emacspeak-we-xslt-filter  (path url &optional speak)
Extract elements matching specified XPath path locator
from Web page -- default is the current page being viewed.
@end deffn

@deffn {Interactive Command} emacspeak-we-xslt-junk  (path url &optional speak)
Junk elements matching specified locator.
@end deffn

@deffn {Interactive Command} emacspeak-we-xslt-select  (xsl)
Select XSL transformation applied to Web pages before they are displayed .
@end deffn

@subsection emacspeak-we Options

@defvar {User Option} emacspeak-we-cleanup-bogus-quotes
Clean up bogus Unicode chars for magic quotes.

@end defvar

@defvar {User Option} emacspeak-we-filters-rename-buffer
Set to T  if you want the buffer name to contain the applied filter.

@end defvar

@defvar {User Option} emacspeak-we-media-stream-suffixes
Suffixes that identify   URLs   to media streams.

@end defvar

@defvar {User Option} emacspeak-we-paragraphs-xpath-filter
Filter paragraphs.

@end defvar

@defvar {User Option} emacspeak-we-recent-class-filter
Caches most recently used class filter.
Can be customized to set up initial default.

@end defvar

@defvar {User Option} emacspeak-we-recent-xpath-filter
Caches most recently used xpath filter.
Can be customized to set up initial default.

@end defvar

@defvar {User Option} emacspeak-we-xsl-p
T means we apply XSL before displaying HTML.

@end defvar

@defvar {User Option} emacspeak-we-xsl-transform
Specifies transform to use before displaying a page.
Nil means no transform is used. 

@end defvar

@node emacspeak-websearch
@section emacspeak-websearch

This module provides utility functions for searching the WWW

@subsection emacspeak-websearch Commands

@deffn {Interactive Command} emacspeak-websearch-accessible-google  (query &optional options)
Use Google Lite (Experimental).
Optional prefix arg prompts for toolbelt options.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-amazon-search  nil
Amazon search.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-ask-jeeves  (query)
Ask Jeeves for the answer.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-biblio-search  (query)
Search Computer Science Bibliographies.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-citeseer-search  (term)
Perform a CiteSeer search. 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-company-news  (ticker &optional prefix)
Perform an company news lookup.
Retrieves company news, research, profile, insider trades,  or upgrades/downgrades.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-cpan-search  (query)
Search CPAN  Comprehensive Perl Archive Network   Site. 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-ctan-search  (query)
Search CTAN Comprehensive TeX Archive Network   Site. 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-dispatch  (&optional prefix)
@kbd{C-e ?}

 Press `?' to list available search engines.
When using supported browsers,  this interface attempts to speak the most relevant information on the result page.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-display-form  (form-markup)
Display form specified by form-markup.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-exchange-rate-converter  (conversion-spec)
Currency converter.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-foldoc-search  (query)
Perform a FolDoc search. 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-freshmeat-search  (query)
Search Freshmeat  Site. 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-google  (query &optional flag)
Perform a Google search.
First optional interactive prefix arg `flag' prompts for
additional search options. Second interactive prefix arg is
equivalent to hitting the I'm Feeling Lucky button on
Google. Uses customizable option
`emacspeak-websearch-google-results-only' to determine if we show
just results.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-google-feeling-lucky  (query)
Do a I'm Feeling Lucky Google search.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-google-news  nil
Invoke Google News url template.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-google-search-in-date-range  nil
Use this from inside the calendar to do Google date-range searches.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-google-specialize  (specialize query)
Perform a specialized Google search. See the Google site for
  what is possible here:
https://www.google.com/options/specialsearches.html 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-google-with-toolbelt  (query)
Launch Google search with toolbelt.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-gutenberg  (type query)
Perform an Gutenberg search
@end deffn

@deffn {Interactive Command} emacspeak-websearch-help  nil
Displays key mapping used by Emacspeak Websearch.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-merriam-webster-search  (query)
Search the Merriam Webster Dictionary.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-news-yahoo  (query &optional no-rss)
Perform an Yahoo News search.
Optional prefix arg no-rss scrapes information from HTML.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-open-directory-search  (query)
Perform an Open Directory search
@end deffn

@deffn {Interactive Command} emacspeak-websearch-software-search  nil
Search SourceForge, Freshmeat and other sites. 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-sourceforge-search  (query)
Search SourceForge Site. 
@end deffn

@deffn {Interactive Command} emacspeak-websearch-swik-search  (query)
Search swik software community site.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-weather  (query)
Get weather forecast for specified zip code.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-wikipedia-search  (query)
Search Wikipedia using Google.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-yahoo  (query)
Perform an Yahoo  search
@end deffn

@deffn {Interactive Command} emacspeak-websearch-yahoo-exchange-rate-converter  (conversion-spec)
Currency converter.
@end deffn

@deffn {Interactive Command} emacspeak-websearch-yahoo-historical-chart  (ticker &optional as-html)
Look up historical stock data.
Optional second arg as-html processes the results as HTML rather than data.
@end deffn

@subsection emacspeak-websearch Options

@defvar {User Option} emacspeak-websearch-google-number-of-results
Number of results to return from google search.

@end defvar

@defvar {User Option} emacspeak-websearch-google-options
Additional options to pass to Google e.g. &xx=yy...

@end defvar

@defvar {User Option} emacspeak-websearch-google-results-only
Specify if we show just results or the complete Google page.

@end defvar

@defvar {User Option} emacspeak-websearch-google-use-https
Specify whether we use secure connections for Google search.

@end defvar

@node emacspeak-webspace
@section emacspeak-webspace

WEBSPACE == Smart Web Gadgets For The Emacspeak Desktop

@subsection emacspeak-webspace Commands

@deffn {Interactive Command} emacspeak-webspace-feed-reader  (&optional refresh)
Display Feed Reader Feed list in a WebSpace buffer.
Optional interactive prefix arg forces a refresh.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-filter  nil
Open headline at point by following its link property and filter for content.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-freebase-search  (query)
Perform a Freebase search and display results.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-google  nil
Display Google Search in a WebSpace buffer.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-headlines  nil
@kbd{C-; SPC h C-x @@ h SPC h}

Startup Headlines ticker.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-headlines-browse  nil
@kbd{<C-return>}

Display buffer of browsable headlines.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-headlines-update  nil
Setup news updates.
Updated headlines found in emacspeak-webspace-headlines.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-mode  nil
Major mode for Webspace interaction.

key             binding
---             -------

TAB		forward-button
ESC		Prefix Command
'		emacspeak-speak-rest-of-buffer
.		emacspeak-webspace-filter
/		search-forward
<		beginning-of-buffer
>		end-of-buffer
?		search-backward
b		backward-button
f		forward-button
n		forward-button
p		backward-button
q		bury-buffer
y		emacspeak-webspace-yank-link
<backtab>	backward-button

C-M-i		backward-button

In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `emacspeak-webspace-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-open  nil
Open headline at point by following its link property.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-transcode  nil
Transcode headline at point by following its link property.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-weather  nil
@kbd{C-; SPC w C-x @@ h SPC w}

Speak current weather.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-weather-update  nil
Setup periodic weather updates.
Updated weather is found in `emacspeak-webspace-current-weather'.
@end deffn

@deffn {Interactive Command} emacspeak-webspace-yank-link  nil
Yank link under point into kill ring.
@end deffn

@node emacspeak-webutils
@section emacspeak-webutils

This module provides common Web utilities for emacspeak.
This is to avoid duplication of code between emacspeak-w3.el
and emacspeak-w3m.el

@subsection emacspeak-webutils Commands

@deffn {Interactive Command} emacspeak-webutils-google-extract-from-cache  (&optional prefix)
Extract current  page from the Google cache.
With a prefix argument, extracts url under point.
@end deffn

@deffn {Interactive Command} emacspeak-webutils-google-on-this-site  nil
Perform a google search restricted to the current WWW site.
@end deffn

@deffn {Interactive Command} emacspeak-webutils-google-similar-to-this-page  (url)
Ask Google to find documents similar to this one.
@end deffn

@deffn {Interactive Command} emacspeak-webutils-google-who-links-to-this-page  nil
Perform a google search to locate documents that link to the
current page.
@end deffn

@deffn {Interactive Command} emacspeak-webutils-jump-to-title-in-content  nil
Jumps to the title in web document.
The first time it is called, it jumps to the first
instance  of the title.  Repeated calls jump to further
instances.
@end deffn

@deffn {Interactive Command} emacspeak-webutils-open-in-other-browser  nil
Opens link in alternate browser.
@end deffn

@deffn {Interactive Command} emacspeak-webutils-play-media-at-point  (&optional playlist-p)
@kbd{C-e M-;}

Play media url under point.
Optional interactive prefix arg `playlist-p' says to treat the link as a playlist.
 A second interactive prefix arg adds mplayer option -allow-dangerous-playlist-parsing
@end deffn

@deffn {Interactive Command} emacspeak-webutils-transcode-current-url-via-google  (&optional untranscode)
Transcode current URL via Google.
  Reverse effect with prefix arg.
@end deffn

@deffn {Interactive Command} emacspeak-webutils-transcode-via-google  (&optional untranscode)
Transcode URL under point via Google.
 Reverse effect with prefix arg for links on a transcoded page.
@end deffn

@subsection emacspeak-webutils Options

@defvar {User Option} emacspeak-webutils-charent-alist
Entities to unescape when treating badly escaped XML.

@end defvar

@node emacspeak-widget
@section emacspeak-widget

This module implements the necessary extensions to provide talking
widgets.

@subsection emacspeak-widget Commands

@deffn {Interactive Command} emacspeak-widget-browse-widget-interactively  nil
Allows you to browse a widget
@end deffn

@deffn {Interactive Command} emacspeak-widget-help  nil
Speak help for widget under point.
@end deffn

@deffn {Interactive Command} emacspeak-widget-summarize-parent  nil
Summarize parent of widget at point.
@end deffn

@deffn {Interactive Command} emacspeak-widget-summarize-widget-under-point  (&optional level)
Summarize a widget if any under point.
Optional interactive prefix specifies how many levels to go up from current
widget before summarizing.
@end deffn

@deffn {Interactive Command} emacspeak-widget-update-from-minibuffer  (point)
Sets widget at point by invoking its prompter.
@end deffn

@node emacspeak-windmove
@section emacspeak-windmove

Package  windmove (bundled with Emacs 21)
provides commands for navigating to windows based on
relative position.

@node emacspeak-winring
@section emacspeak-winring

window configurations in emacs are very useful 
you can display the same file in different windows,
and have different  portions of the file displayed.
winring allows you to manage window configurations,
and this module speech-enables it.

@node emacspeak-wizards
@section emacspeak-wizards

Contains various wizards for the Emacspeak desktop.

@subsection emacspeak-wizards Commands

@deffn {Interactive Command} emacspeak-annotate-add-annotation  (&optional reset)
Add annotation to the annotation working buffer.
Prompt for annotation buffer if not already set.
Interactive prefix arg `reset' prompts for the annotation
buffer even if one is already set.
Annotation is entered in a temporary buffer and the
annotation is inserted into the working buffer when complete.
@end deffn

@deffn {Interactive Command} emacspeak-clipboard-copy  (start end &optional prompt)
@kbd{C-e C-c}

Copy contents of the region to the emacspeak clipboard.
Previous contents of the clipboard will be overwritten.  The Emacspeak
clipboard is a convenient way of sharing information between
independent Emacspeak sessions running on the same or different
machines.  Do not use this for sharing information within an Emacs
session --Emacs' register commands are far more efficient and
light-weight.  Optional interactive prefix arg results in Emacspeak
prompting for the clipboard file to use.
Argument START and END specifies  region.
Optional argument PROMPT  specifies whether we prompt for the name of a clipboard file.
@end deffn

@deffn {Interactive Command} emacspeak-clipboard-paste  (&optional paste-table)
@kbd{C-e C-y}

Yank contents of the Emacspeak clipboard at point.
The Emacspeak clipboard is a convenient way of sharing information between
independent Emacspeak sessions running on the same or different
machines.  Do not use this for sharing information within an Emacs
session --Emacs' register commands are far more efficient and
light-weight.  Optional interactive prefix arg pastes from
the emacspeak table clipboard instead.
@end deffn

@deffn {Interactive Command} emacspeak-copy-current-file  nil
@kbd{C-e M-c}

Copy file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when copying.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Asks for confirmation if the copy will result in an
  existing file being overwritten.
@end deffn

@deffn {Interactive Command} emacspeak-curl  (url)
Grab URL using Curl, and preview it with a browser .
@end deffn

@deffn {Interactive Command} emacspeak-customize  nil
@kbd{C-e C}

Customize Emacspeak.
@end deffn

@deffn {Interactive Command} emacspeak-customize-personal-settings  (file)
Create a customization buffer for browsing and updating
personal customizations.
@end deffn

@deffn {Interactive Command} emacspeak-emergency-tts-restart  nil
@kbd{C-e <insert>}

For use in an emergency.
Will start TTS engine specified by
emacspeak-emergency-tts-server.
@end deffn

@deffn {Interactive Command} emacspeak-frame-label-or-switch-to-labelled-frame  (&optional prefix)
@kbd{C-e M-f}

Switch to labelled frame.
With optional PREFIX argument, label current frame.
@end deffn

@deffn {Interactive Command} emacspeak-frame-read-frame-label  nil
Read a frame label with completion.
@end deffn

@deffn {Interactive Command} emacspeak-kill-buffer-quietly  nil
Kill current buffer without asking for confirmation.
@end deffn

@deffn {Interactive Command} emacspeak-learn-emacs-mode  nil
@kbd{C-e <f1> C-h C-l <f1> C-l <help> C-l}

Helps you learn the keys.  You can press keys and hear what they do.
To leave, press C-g.
@end deffn

@deffn {Interactive Command} emacspeak-link-current-file  nil
@kbd{C-e M-l}

Link (hard link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists.
@end deffn

@deffn {Interactive Command} emacspeak-links  (url)
Launch links on  specified URL in a new terminal.
@end deffn

@deffn {Interactive Command} emacspeak-lynx  (url)
Launch lynx on  specified URL in a new terminal.
@end deffn

@deffn {Interactive Command} emacspeak-next-frame-or-buffer  (&optional frame)
@kbd{<C-right>}

Move to next buffer.
With optional interactive prefix arg `frame', move to next frame instead.
@end deffn

@deffn {Interactive Command} emacspeak-previous-frame-or-buffer  (&optional frame)
@kbd{<C-left>}

Move to previous buffer.
With optional interactive prefix arg `frame', move to previous frame instead.
@end deffn

@deffn {Interactive Command} emacspeak-select-this-buffer-next-display  nil
@kbd{C-e <C-<right>}

Select this buffer as displayed in a `next' frame.
See documentation for command
`emacspeak-select-this-buffer-other-window-display' for the
meaning of `next'.
@end deffn

@deffn {Interactive Command} emacspeak-select-this-buffer-other-window-display  (&optional arg)
Switch  to this buffer as displayed in a different frame.  Emacs
allows you to display the same buffer in multiple windows or
frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a
book open at places at once.  This command allows you to
move to the places where you have left the book open.  The
number used to invoke this command specifies which of the
displays you wish to select.  Typically you will have two or
at most three such displays open.  The current display is 0,
the next is 1, and so on.  Optional argument ARG specifies
the display to select.
@end deffn

@deffn {Interactive Command} emacspeak-select-this-buffer-previous-display  nil
@kbd{C-e <C-<left>}

Select this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-select-this-buffer-other-window-display' for the
meaning of `previous'.
@end deffn

@deffn {Interactive Command} emacspeak-show-personality-at-point  nil
@kbd{C-e M-v}

Show value of property personality (and possibly face)
at point.
@end deffn

@deffn {Interactive Command} emacspeak-show-property-at-point  (&optional property)
Show value of PROPERTY at point.
If optional arg property is not supplied, read it interactively.
Provides completion based on properties that are of interest.
If no property is set, show a message and exit.
@end deffn

@deffn {Interactive Command} emacspeak-skip-blank-lines-backward  nil
@kbd{<S-up>}

Move backward  across blank lines.
The line under point is   then spoken.
Signals beginning  of buffer.
@end deffn

@deffn {Interactive Command} emacspeak-skip-blank-lines-forward  nil
@kbd{<S-down>}

Move forward across blank lines.
The line under point is then spoken.
Signals end of buffer.
@end deffn

@deffn {Interactive Command} emacspeak-speak-popup-messages  nil
@kbd{C-h M <f1> M <help> M}

Pop up messages buffer.
If it is already selected then hide it and try to restore
previous window configuration.
@end deffn

@deffn {Interactive Command} emacspeak-speak-run-shell-command  (command &optional read-as-csv)
@kbd{C-e !}

Invoke shell COMMAND and display its output as a table. The
results are placed in a buffer in Emacspeak's table browsing
mode. Optional interactive prefix arg read-as-csv interprets the
result as csv. . Use this for running shell commands that produce
tabulated output. This command should be used for shell commands
that produce tabulated output that works with Emacspeak's table
recognizer. Verify this first by running the command in a shell
and executing command `emacspeak-table-display-table-in-region'
normally bound to C-e TAB.
@end deffn

@deffn {Interactive Command} emacspeak-speak-telephone-directory  (&optional edit)
Lookup and display a phone number.
With prefix arg, opens the phone book for editing.
@end deffn

@deffn {Interactive Command} emacspeak-speak-this-buffer-next-display  nil
@kbd{C-e <right>}

Speak this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-speak-this-buffer-other-window-display' for the
meaning of `next'.
@end deffn

@deffn {Interactive Command} emacspeak-speak-this-buffer-other-window-display  (&optional arg)
@kbd{C-e /}

Speak this buffer as displayed in a different frame.  Emacs
allows you to display the same buffer in multiple windows or
frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a
book open at places at once.  This command allows you to
listen to the places where you have left the book open.  The
number used to invoke this command specifies which of the
displays you wish to speak.  Typically you will have two or
at most three such displays open.  The current display is 0,
the next is 1, and so on.  Optional argument ARG specifies
the display to speak.
@end deffn

@deffn {Interactive Command} emacspeak-speak-this-buffer-previous-display  nil
@kbd{C-e <left>}

Speak this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-speak-this-buffer-other-window-display' for the
meaning of `previous'.
@end deffn

@deffn {Interactive Command} emacspeak-ssh-tts-restart  nil
@kbd{C-e <delete> C-e <(deletechar>}

Restart specified ssh tts server.
@end deffn

@deffn {Interactive Command} emacspeak-switch-to-previous-buffer  nil
Switch to most recently used interesting buffer.
Obsoleted by `previous-buffer' in Emacs 22
@end deffn

@deffn {Interactive Command} emacspeak-symlink-current-file  nil
@kbd{C-e M-s}

Link (symbolic link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists.
@end deffn

@deffn {Interactive Command} emacspeak-view-emacspeak-news  nil
@kbd{C-e N}

Display info on recent change to Emacspeak.
@end deffn

@deffn {Interactive Command} emacspeak-view-emacspeak-tips  nil
@kbd{C-e T}

Browse  Emacspeak productivity tips.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-add-autoload-cookies  (&optional f)
Add autoload cookies to file f.
Default is to add autoload cookies to current file.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-braille  (s)
Insert Braille string at point.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-byte-compile-current-buffer  nil
byte compile current buffer
@end deffn

@deffn {Interactive Command} emacspeak-wizards-cleanup-shell-path  nil
Cleans up duplicates in shell path env variable.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-comma-at-end-of-word  nil
Move to the end of current word and add a comma.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-count-slides-in-region  (start end)
Count slides starting from point.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-cycle-browser  nil
Cycles through available browsers.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-cycle-to-next-buffer  nil
Cycles to next buffer having same mode.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-display-pod-as-manpage  (filename)
Create a virtual manpage in Emacs from the Perl Online Documentation.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-dvi-display  nil
Called to set up preview of an DVI file.
Assumes we are in a buffer visiting a .DVI file.
Previews those contents as text and nukes the buffer
visiting the DVI file.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-dvi-mode  nil
Major mode for browsing DVI files.

DVI files  are converted to text and previewed using text mode.

This mode runs the hook `emacspeak-wizards-dvi-mode-hook', as the final step
during initialization.

key             binding
---             -------

@end deffn

@deffn {Interactive Command} emacspeak-wizards-end-of-word  (arg)
move to end of word
@end deffn

@deffn {Interactive Command} emacspeak-wizards-enumerate-matching-commands  (pattern)
Prompt for a string pattern and return list of commands whose names match pattern.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-enumerate-matching-faces  (pattern)
Enumerate  faces matching pattern.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-enumerate-obsolete-faces  nil
utility function to enumerate old, obsolete maps that we have still  mapped to voices.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-enumerate-uncovered-commands  (pattern)
Enumerate unadvised commands matching pattern.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-enumerate-unmapped-faces  (&optional pattern)
Enumerate unmapped faces matching pattern.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-espeak-region  (start end)
Speak region using ESpeak polyglot wizard.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-espeak-string  (string)
Speak string in lang via ESpeak.
Lang is obtained from property `lang' on string, or  via an interactive prompt.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-eww-buffer-list  nil
Display list of open EWW buffers.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-find-emacspeak-source  nil
Like find-file, but binds default-directory to emacspeak-directory.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-find-file-as-root  nil
Like `ido-find-file, but automatically edit the file with
root-privileges (using tramp/sudo), if the file is not writable by
user.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-find-grep  (glob pattern)
Run compile using find and grep.
Interactive  arguments specify filename pattern and search pattern.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-find-longest-line-in-region  (start end)
Find longest line in region.
Moves to the longest line when called interactively.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-find-longest-paragraph-in-region  (start end)
Find longest paragraph in region.
Moves to the longest paragraph when called interactively.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-find-shortest-line-in-region  (start end)
Find shortest line in region.
Moves to the shortest line when called interactively.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-finder-find  (directory)
Run find-dired on specified switches after prompting for the
directory to where find is to be launched.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-finder-mode  nil
Emacspeak Finder

This mode runs the hook `emacspeak-wizards-finder-mode-hook', as the final step
during initialization.

key             binding
---             -------

@end deffn

@deffn {Interactive Command} emacspeak-wizards-fix-read-only-text  (start end)
Nuke read-only property on text range.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-fix-typo  (ext word correction)
Search and replace  recursively in all files with extension `ext'
for `word' and replace it with correction.
Use with caution.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-generate-finder  nil
Generate a widget-enabled finder wizard.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-generate-voice-sampler  (step)
Generate a buffer that shows a sample line in all the ACSS settings
for the current voice family.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-get-table-content-from-file  (file depth count)
Extract table specified by depth and count from HTML
content at file.
Extracted content is sent to STDOUT.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-get-table-content-from-url  (url depth count)
Extract table specified by depth and count from HTML
content at URL.
Extracted content is placed as a csv file in task.csv.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-google-transcode  nil
View Web through Google Transcoder.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-how-many-matches  (start end &optional prefix)
If you define a file local variable
called `emacspeak-occur-pattern' that holds a regular expression
that matches  lines of interest, you can use this command to conveniently
run `how-many' to count  matching header lines.
With interactive prefix arg, prompts for and remembers the file local pattern.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-lacheck-buffer-file  nil
Run Lacheck on current buffer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-load-current-file  nil
load file into emacs
@end deffn

@deffn {Interactive Command} emacspeak-wizards-move-and-speak  (command count)
Speaks a chunk of text bounded by point and a target position.
Target position is specified using a navigation command and a
count that specifies how many times to execute that command
first.  Point is left at the target position.  Interactively,
command is specified by pressing the key that invokes the
command.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-next-bullet  nil
Navigate to and speak next `bullet'.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-next-interactive-defun  nil
Move point to the next interactive defun
@end deffn

@deffn {Interactive Command} emacspeak-wizards-next-shell  nil
Switch to next shell.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-occur-header-lines  (start end &optional prefix)
If you define a file local variable called
`emacspeak-occur-pattern' that holds a regular expression that
matches header lines, you can use this command to conveniently
run `occur' to find matching header lines. With prefix arg,
prompts for and sets value of the file local pattern.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-pdf-open  (filename &optional ask-pwd)
Open pdf file as text.
Optional interactive prefix arg ask-pwd prompts for password.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-popup-input-buffer  (mode)
Provide an input buffer in a specified mode.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-portfolio-quotes  nil
Bring up detailed stock quotes for portfolio specified by
emacspeak-wizards-personal-portfolio.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-ppt-display  nil
Called to set up preview of an PPT file.
Assumes we are in a buffer visiting a .ppt file.
Previews those contents as HTML and nukes the buffer
visiting the ppt file.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-ppt-mode  nil
Major mode for browsing PPT slides.

PPT files  are converted to HTML and previewed using a browser.

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-wizards-ppt-mode-hook', as the final step
during initialization.

key             binding
---             -------

@end deffn

@deffn {Interactive Command} emacspeak-wizards-previous-bullet  nil
Navigate to and speak previous `bullet'.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-previous-shell  nil
Switch to previous shell.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-refresh-shell-history  nil
Refresh shell history from disk.
This is for use in conjunction with bash to allow multiple emacs
  shell buffers to   share history information.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-rivo  (when channel stop-time output directory)
Rivo wizard.
Prompts for relevant information and schedules a rivo job using
  UNIX At scheduling facility.
RIVO is implemented by rivo.pl ---
 a Perl script  that can be used to launch streaming media and record
   streaming media for  a specified duration.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-rpm-query-in-dired  nil
Run rpm -qi on current dired entry.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-shell  (&optional prefix)
Run Emacs built-in `shell' command when not in a shell buffer, or when called with a prefix argument.
When called from a shell buffer, switches to `next' shell buffer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-shell-command-on-current-file  (command)
@kbd{C-e &}

Prompts for and runs shell command on current file.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-shell-toggle  nil
@kbd{C-e <f11>}

Switch to the shell buffer and cd to
 the directory of the current buffer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-show-commentary  (&optional file)
Display commentary. Default is to display commentary from current buffer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-show-environment-variable  (v)
Display value of specified environment variable.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-show-eval-result  (form)
@kbd{M-ESC :}

Convenience command to pretty-print and view Lisp evaluation results.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-show-face  (face)
Show salient properties of specified face.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-show-memory-used  nil
Convenience command to view state of memory used in this session so far.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-speak-iso-datetime  (iso)
Make ISO date-time speech friendly.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-spot-words  (ext word)
Searches recursively in all files with extension `ext'
for `word' and displays hits in a compilation buffer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-squeeze-blanks  (start end)
Squeeze multiple blank lines in current buffer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-sunrise-sunset  (address &optional arg)
Display sunrise/sunset for specified address.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-switch-shell  (direction)
Switch to next/previous shell buffer.
Direction specifies previous/next.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-term  (create)
Switch to an ansi-term buffer or create one.
With prefix arg, always creates a new terminal.
Otherwise cycles through existing terminals, creating the first
term if needed.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-terminal  (program)
Launch terminal and rename buffer appropriately.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-tex-tie-current-word  (n)
Tie the next n  words.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-thanks-mail-signature  nil
insert thanks , --Raman at the end of mail message
@end deffn

@deffn {Interactive Command} emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer  nil
Toggle pronunciation of mm-dd-yyyy dates.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-toggle-yyyymmdd-date-pronouncer  nil
Toggle pronunciation of yyyymmdd  dates.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-tramp-open-location  (name)
Open specified tramp location.
Location is specified by name.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-tune-in-radio-browse  nil
Browse Tune-In Radio.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-tune-in-radio-search  nil
Search Tune-In Radio.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-unhex-uri  (uri)
UnEscape URI
@end deffn

@deffn {Interactive Command} emacspeak-wizards-units  nil
Run units in a comint sub-process.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-vc-n  nil
Accelerator for VC viewer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-vc-viewer  (console)
View contents of specified virtual console.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-vc-viewer-mode  nil
Major mode for interactively viewing virtual console contents.

key             binding
---             -------

C-l		emacspeak-wizards-vc-viewer-refresh

This mode runs the hook `emacspeak-wizards-vc-viewer-mode-hook', as the final step
during initialization.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-vc-viewer-refresh  nil
Refresh view of VC we're viewing.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-vi-as-su-file  (file)
Launch sudo vi on specified file in a terminal.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-view-buffers-filtered-by-mode  (mode)
Display list of buffers filtered by specified mode.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-view-buffers-filtered-by-this-mode  nil
Buffer menu filtered by  mode of current-buffer.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-view-url  nil
Open a new buffer containing the contents of URL.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-voice-sampler  (personality)
Read a personality  and apply it to the current line.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-xl-display  nil
Called to set up preview of an XL file.
Assumes we are in a buffer visiting a .xls file.
Previews those contents as HTML and nukes the buffer
visiting the xls file.
@end deffn

@deffn {Interactive Command} emacspeak-wizards-xl-mode  nil
Major mode for browsing XL spreadsheets.

XL Sheets are converted to HTML and previewed using a browser.

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-wizards-xl-mode-hook', as the final step
during initialization.

key             binding
---             -------

@end deffn

@subsection emacspeak-wizards Options

@defvar {User Option} emacspeak-clipboard-file
File used to save Emacspeak clipboard.
The emacspeak clipboard provides a convenient mechanism for exchanging
information between different Emacs sessions.

@end defvar

@defvar {User Option} emacspeak-curl-cookie-store
Cookie store used by Curl.

@end defvar

@defvar {User Option} emacspeak-emergency-tts-server
TTS server to use in an emergency.
Set this to a TTS server that is known to work at all times.
If you are debugging another speech server and that server
gets wedged for some reason,
you can use command emacspeak-emergency-tts-restart
to get speech back using the reliable TTS server.
It's useful to bind the above command to a convenient key.

@end defvar

@defvar {User Option} emacspeak-speak-telephone-directory
File holding telephone directory.
This is just a text file, and we use grep to search it.

@end defvar

@defvar {User Option} emacspeak-speak-telephone-directory-command
Command used to look up names in the telephone
directory.

@end defvar

@defvar {User Option} emacspeak-ssh-tts-server
SSH TTS server to use by default.

@end defvar

@defvar {User Option} emacspeak-wizards-curl-program
Name of curl executable.

@end defvar

@defvar {User Option} emacspeak-wizards-dvi2txt-program
Program for converting dvi  to txt.
Set this to nil if you do not want to use the DVI wizard.

@end defvar

@defvar {User Option} emacspeak-wizards-find-switches-that-need-quoting
Find switches whose args need quoting.

@end defvar

@defvar {User Option} emacspeak-wizards-find-switches-widget
Widget to get find switch.

@end defvar

@defvar {User Option} emacspeak-wizards-links-program
Name of links executable.

@end defvar

@defvar {User Option} emacspeak-wizards-lynx-program
Lynx executable.

@end defvar

@defvar {User Option} emacspeak-wizards-pdf-to-text-options
options to Command for running pdftotext.

@end defvar

@defvar {User Option} emacspeak-wizards-pdf-to-text-program
Command for running pdftotext.

@end defvar

@defvar {User Option} emacspeak-wizards-personal-portfolio
Set this to the stock tickers you want to check.
Tickers are separated by white-space and are sorted in lexical
order with duplicates removed.

@end defvar

@defvar {User Option} emacspeak-wizards-ppthtml-program
Program for converting PPT  to HTML.
Set this to nil if you do not want to use the PPTHTML wizard.

@end defvar

@defvar {User Option} emacspeak-wizards-quote-command
Command for pulling up detailed stock quotes.
this requires Perl module Finance::YahooQuote.

@end defvar

@defvar {User Option} emacspeak-wizards-quote-row-filter
Format used to filter rows.

@end defvar

@defvar {User Option} emacspeak-wizards-spot-words-extension
Default file extension  used when spotting words.

@end defvar

@defvar {User Option} emacspeak-wizards-tramp-locations
Tramp locations used by Emacspeak tramp wizard.
Locations added here via custom can be opened using command
emacspeak-wizards-tramp-open-location
bound to M-x emacspeak-wizards-tramp-open-location.

@end defvar

@defvar {User Option} emacspeak-wizards-vc-viewer-command
Command line for dumping out virtual console.

@end defvar

@defvar {User Option} emacspeak-wizards-xlhtml-program
Program for converting XL to HTML.
Set this to nil if you do not want to use the XLHTML wizard.

@end defvar

@node emacspeak-woman
@section emacspeak-woman

WOMAN ==  Man pages implemented in Emacs Lisp

@node emacspeak-xkcd
@section emacspeak-xkcd

XKCD ==  emacs-xkcd
View XKCD comics in Emacs.
Speech enables package emacs-xkcd
Augments it by displaying the alt text and the transcript.

@subsection emacspeak-xkcd Commands

@deffn {Interactive Command} emacspeak-xkcd-open-explanation-browser  nil
Open explanation of current xkcd in default browser
@end deffn

@node emacspeak-xml-shell
@section emacspeak-xml-shell

Use xmllint from package libxml2 to implement 
an XML browser.
Uses the interactive shell provided by xmllint to do the hard
work.
Results of traversal are transformed  using xsltproc from libxslt 

@subsection emacspeak-xml-shell Commands

@deffn {Interactive Command} emacspeak-xml-shell  (system-id)
Start Xml-Shell on contents of system-id.
@end deffn

@deffn {Interactive Command} emacspeak-xml-shell-browse-current  nil
Display current node.
@end deffn

@deffn {Interactive Command} emacspeak-xml-shell-browse-result  (xpath)
Display XPath  and display its result using W3.
@end deffn

@deffn {Interactive Command} emacspeak-xml-shell-goto-children  nil
Navigate down to the children of current node.
@end deffn

@deffn {Interactive Command} emacspeak-xml-shell-goto-next-child  nil
Navigate forward  to the next child  of current node.
@end deffn

@deffn {Interactive Command} emacspeak-xml-shell-goto-parent  nil
Navigate up to the parent of current node.
@end deffn

@deffn {Interactive Command} emacspeak-xml-shell-goto-previous-child  nil
Navigate backward  to the previous child  of current node.
@end deffn

@deffn {Interactive Command} emacspeak-xml-shell-mode  nil
XML Shell

Interactive XML browser.
key             binding
---             -------

C-c		Prefix Command
<down>		emacspeak-xml-shell-goto-children
<left>		emacspeak-xml-shell-goto-previous-child
<right>		emacspeak-xml-shell-goto-next-child
<up>		emacspeak-xml-shell-goto-parent

C-c C-v		emacspeak-xml-shell-browse-result
C-c v		emacspeak-xml-shell-browse-current

In addition to any hooks its parent mode `comint-mode' might have run,
this mode runs the hook `emacspeak-xml-shell-mode-hook', as the final step
during initialization.
@end deffn

@subsection emacspeak-xml-shell Options

@defvar {User Option} emacspeak-xml-shell-command
Executable that provides the XML browser shell.
Default is xmllint.
If you want an XML Shell on steroids get XSH and use emacs custom to
customize the default to be xsh.

@end defvar

@defvar {User Option} emacspeak-xml-shell-hooks
Start up hooks run after XML browser  process is started.

@end defvar

@defvar {User Option} emacspeak-xml-shell-options
Command-line options for XML browse command.

@end defvar

@defvar {User Option} emacspeak-xml-shell-xslt
XSL transform to apply when displaying current node.

@end defvar

@node emacspeak-xref
@section emacspeak-xref

XREF ==  Cross-references in source code.
This is part of Emacs 25.
This module speech-enables xref

@node emacspeak-xslt
@section emacspeak-xslt

libxml and libxsl are XML libraries for GNOME.
xsltproc is a  xslt processor using libxsl
this module defines routines for applying xsl transformations
using xsltproc

@subsection emacspeak-xslt Commands

@deffn {Interactive Command} emacspeak-xslt-view  (style url)
Browse URL with specified XSL style.
@end deffn

@deffn {Interactive Command} emacspeak-xslt-view-file  (style file)
Transform `file' using `style' and preview via browse-url.
@end deffn

@deffn {Interactive Command} emacspeak-xslt-view-region  (style start end &optional unescape-charent)
Browse XML region with specified XSL style.
@end deffn

@deffn {Interactive Command} emacspeak-xslt-view-xml  (style url &optional unescape-charent)
Browse XML URL with specified XSL style.
@end deffn

@subsection emacspeak-xslt Options

@defvar {User Option} emacspeak-xslt-keep-errors
If non-nil, xslt errors will be preserved in an errors buffer.

@end defvar

@defvar {User Option} emacspeak-xslt-nuke-null-char
If T null chars in the region will be nuked.
This is useful when handling bad HTML.

@end defvar

@defvar {User Option} emacspeak-xslt-options
Options passed to xsltproc.

@end defvar

@defvar {User Option} emacspeak-xslt-program
Name of XSLT transformation engine.

@end defvar

@node espeak-voices
@section espeak-voices

This module defines the various voices used in voice-lock mode.
This module is Espeak specific.

@node g
@section g

Top-level bootstrap module for Google Client.
Loads in authentication module and sets up per-service
modules:
gmaps: Google Maps 
gweb: Google Web Search
gblogger: Blogger
gphoto: Google Photos 

@node g-app
@section g-app

Common Code  For Google Apps
Used by modules like gphoto, gblogger etc.

@subsection g-app Commands

@deffn {Interactive Command} g-app-mode  nil
Major mode for APP interaction

Uses keymap `g-app-mode-map

In addition to any hooks its parent mode `nxml-mode' might have run,
this mode runs the hook `g-app-mode-hook', as the final step
during initialization.', which is not currently defined.

@end deffn

@deffn {Interactive Command} g-app-post-entry  nil
Post buffer contents  as  updated entry.
@end deffn

@deffn {Interactive Command} g-app-publish  nil
Publish current entry.
@end deffn

@deffn {Interactive Command} g-app-put-entry  nil
PUT buffer contents as new entry.
@end deffn

@deffn {Interactive Command} g-app-view  (auth-handle feed-url)
View feed using auth credentials in auth-handle.
@end deffn

@node g-auth
@section g-auth

Google Auth using Curl
Implements an authentication component for use in Google
Clients -- see http://code.google.com/apis/accounts/AuthForInstalledApps.html

@subsection g-auth Options

@defvar {User Option} g-user-email
Google account  address.

@end defvar

@node g-utils
@section g-utils

Common Code  e.g. helper functions.
Used by modules like gphoto, gblogger etc.

@subsection g-utils Options

@defvar {User Option} g-atom-edit-filter
XSLT transform used to tidy up an entry before posting.
For now, this is blogger specific.

@end defvar

@defvar {User Option} g-atom-titles-xsl
XSLT transform to convert Atom feed to alist of title/url pairs.

@end defvar

@defvar {User Option} g-atom-view-xsl
XSLT transform to convert Atom feed to HTML.

@end defvar

@defvar {User Option} g-cookie-jar
Cookie jar used for Google services.
Customize this to live on your local disk.

@end defvar

@defvar {User Option} g-curl-common-options
Common options to pass to all Curl invocations.

@end defvar

@defvar {User Option} g-curl-debug
Set to T to see Curl stderr output.

@end defvar

@defvar {User Option} g-curl-program
Name of CURL executable.

@end defvar

@defvar {User Option} g-html-handler
Function that processes HTML.
Receives buffer containing HTML as its argument.

@end defvar

@defvar {User Option} g-url-under-point
Function used to get URL from current context.

@end defvar

@defvar {User Option} g-xslt-program
XSLT Processor.

@end defvar

@node gblogger
@section gblogger

Simple wrapper using Curl to post/edit Blogger.com Blogs
posts are edited as XML
nxml-mode is highly recommend and will be used if available.

@subsection gblogger Commands

@deffn {Interactive Command} gblogger-add-label  (label)
Adds labels to gblogger entry being edited.
@end deffn

@deffn {Interactive Command} gblogger-atom-display  (feed-url)
Retrieve and display specified feed after authenticating.
@end deffn

@deffn {Interactive Command} gblogger-blog  nil
Retrieve and display feed of feeds after authenticating.
@end deffn

@deffn {Interactive Command} gblogger-delete-entry  (edit-url)
Delete item at specified edit URL.
@end deffn

@deffn {Interactive Command} gblogger-edit-entry  (url)
Retrieve entry and prepare it for editing.
The retrieved entry is placed in a buffer ready for editing.
`url' is the URL of the entry.
@end deffn

@deffn {Interactive Command} gblogger-new-entry  (url &optional title text)
Create a new Blog post.
@end deffn

@deffn {Interactive Command} gblogger-sign-in  nil
Resets client so you can start with a different userid.
@end deffn

@deffn {Interactive Command} gblogger-sign-out  nil
Resets client so you can start with a different userid.
@end deffn

@subsection gblogger Options

@defvar {User Option} gblogger-author
Author name under which we post.

@end defvar

@defvar {User Option} gblogger-posting-url
URL for posting to this post.
You can get the URL from a [post] link shown by `gblogger-blog'

@end defvar

@defvar {User Option} gblogger-user-email
Mail address that identifies blogger user.

@end defvar

@defvar {User Option} gblogger-user-password
Password for authenticating to reader account.

@end defvar

@node gf
@section gf

Explore Freebase graph search results

@node gfeeds
@section gfeeds

Fast feed access from Google for use in Emacs

@subsection gfeeds Commands

@deffn {Interactive Command} gfeeds-view  (&rest rest)
:around advice: `ad-Advice-gfeeds-view'

Display Feed in a browser.
Interactive prefix arg causes the feed url to be looked up given a Web site.

(fn URL &optional LOOKUP)
@end deffn

@subsection gfeeds Options

@defvar {User Option} gfeeds-freshness
Freshness used to decide if we return titles.

@end defvar

@defvar {User Option} gfeeds-referer
Referer URL to send to the API.
Customize this to point to your Web location.

@end defvar

@node gm-nnir
@section gm-nnir

Makes search GMail more convenient.
IMap search operators, GMail search extensions.

@subsection gm-nnir Commands

@deffn {Interactive Command} gm-nnir-group-make-gmail-group  nil
Use GMail search syntax exclusively.
See https://support.google.com/mail/answer/7190?hl=en for syntax.
Default is to search All Mail when not on a Group line.
@end deffn

@deffn {Interactive Command} gm-nnir-group-make-nnir-group  nil
GMail equivalent of gnus-group-make-nnir-group.
Default is to search All Mail when not on a group.
@end deffn

@node gmaps
@section gmaps

Implements the Google Maps API

@subsection gmaps Commands

@deffn {Interactive Command} gmaps  (&rest rest)
:around advice: `ad-Advice-gmaps'

Google Maps Interaction.

(fn)
@end deffn

@deffn {Interactive Command} gmaps-bicycling-directions  (&rest rest)
:around advice: `ad-Advice-gmaps-bicycling-directions'

Biking directions from Google Maps.

(fn ORIGIN DESTINATION)
@end deffn

@deffn {Interactive Command} gmaps-directions  (origin destination mode)
Display  directions obtained from Google Maps.
@end deffn

@deffn {Interactive Command} gmaps-driving-directions  (&rest rest)
:around advice: `ad-Advice-gmaps-driving-directions'

Driving directions from Google Maps.

(fn ORIGIN DESTINATION)
@end deffn

@deffn {Interactive Command} gmaps-mode  nil
A Google Maps front-end for the Emacspeak desktop.

In addition to any hooks its parent mode `special-mode' might have run,
this mode runs the hook `gmaps-mode-hook', as the final step
during initialization.

key             binding
---             -------

TAB		forward-button
ESC		Prefix Command
SPC		gmaps-place-details
[		backward-page
]		forward-page
b		gmaps-bicycling-directions
c		gmaps-set-current-location
d		gmaps-driving-directions
f		gmaps-set-current-filter
n		gmaps-places-nearby
r		gmaps-set-current-radius
s		gmaps-places-search
t		gmaps-transit-directions
w		gmaps-walking-directions

M-i		backward-button

@end deffn

@deffn {Interactive Command} gmaps-place-details  (&rest rest)
:around advice: `ad-Advice-gmaps-place-details'

Display details for place at point.
Insert reviews if already displaying details.

(fn)
@end deffn

@deffn {Interactive Command} gmaps-place-reviews  nil
Display reviews for place at point.
Place details need to have been expanded first.
@end deffn

@deffn {Interactive Command} gmaps-places-nearby  (&rest rest)
:around advice: `ad-Advice-gmaps-places-nearby'

Find places near current location.
Uses default radius. optional interactive prefix arg clears any active filters.

(fn &optional CLEAR-FILTER)
@end deffn

@deffn {Interactive Command} gmaps-places-search  (&rest rest)
:around advice: `ad-Advice-gmaps-places-search'

Perform a places search.
Use this only if you dont know the locality  of the place you're looking for.
Optional  prefix arg clears any active filters.

(fn QUERY &optional CLEAR-FILTER)
@end deffn

@deffn {Interactive Command} gmaps-set-current-filter  (&optional all)
Set up filter in current buffer.
Optional interactive prefix arg prompts for all filter fields.
@end deffn

@deffn {Interactive Command} gmaps-set-current-location  (&rest rest)
:around advice: `ad-Advice-gmaps-set-current-location'

 Set current location.

(fn ADDRESS)
@end deffn

@deffn {Interactive Command} gmaps-set-current-radius  (&rest rest)
:around advice: `ad-Advice-gmaps-set-current-radius'

Set current radius

(fn RADIUS)
@end deffn

@deffn {Interactive Command} gmaps-transit-directions  (&rest rest)
:around advice: `ad-Advice-gmaps-transit-directions'

Transit directions from Google Maps.

(fn ORIGIN DESTINATION)
@end deffn

@deffn {Interactive Command} gmaps-walking-directions  (&rest rest)
:around advice: `ad-Advice-gmaps-walking-directions'

Walking directions from Google Maps.

(fn ORIGIN DESTINATION)
@end deffn

@subsection gmaps Options

@defvar {User Option} gmaps-places-key
Places API  key --- goto  https://code.google.com/apis/console to get one.

@end defvar

@defvar {User Option} gweb-my-address
Location address. Setting this updates gweb-my-location coordinates  via geocoding.

@end defvar

@node gphoto
@section gphoto

Emacs client for accessing Picasa --- Google Photo Albums
See  http://code.google.com/apis/picasaweb/overview.html

@subsection gphoto Commands

@deffn {Interactive Command} gphoto-album-create  nil
Create a new GPhoto album.
@end deffn

@deffn {Interactive Command} gphoto-albums  (&optional prompt)
Display feed of albums.
Interactive prefix arg prompts for userid whose albums we request.
@end deffn

@deffn {Interactive Command} gphoto-comment-or-tag  (type resource)
Add comments or tags  to an existing photo.
@end deffn

@deffn {Interactive Command} gphoto-community-search  (query)
Search all public photos.
@end deffn

@deffn {Interactive Command} gphoto-delete-item  (url)
Delete specified item.
@end deffn

@deffn {Interactive Command} gphoto-directory-add-photos  (directory album-name)
Add all jpeg files in a directory to specified album.
@end deffn

@deffn {Interactive Command} gphoto-download  (resource)
Download resource after authenticating.
@end deffn

@deffn {Interactive Command} gphoto-edit-entry  (url)
Retrieve metadata for entry and prepare it for editting.
The retrieved entry is placed in a buffer ready for editing.
`url' is the URL of the entry.
@end deffn

@deffn {Interactive Command} gphoto-feeds  (kind user)
Retrieve and display feed of albums or tags after authenticating.
@end deffn

@deffn {Interactive Command} gphoto-photo-add  (album-name photo)
Add a photo to an existing album.
@end deffn

@deffn {Interactive Command} gphoto-recent  (user kind)
Retrieve feed of recently uploaded photos or comments.
@end deffn

@deffn {Interactive Command} gphoto-sign-in  nil
Resets client so you can start with a different userid.
@end deffn

@deffn {Interactive Command} gphoto-sign-out  nil
Resets client so you can start with a different userid.
@end deffn

@deffn {Interactive Command} gphoto-tags  nil
View feed of tags.
@end deffn

@deffn {Interactive Command} gphoto-user-search  (user query)
Retrieve feed of recently uploaded comments for  specified user.
@end deffn

@deffn {Interactive Command} gphoto-user-tagsearch  (user tag)
Retrieve feed o matches comments for  specified user.
@end deffn

@deffn {Interactive Command} gphoto-view  (resource)
Retrieve and display resource after authenticating.
@end deffn

@subsection gphoto Options

@defvar {User Option} gphoto-album-default-access
Default access mode for newly created albums.

@end defvar

@defvar {User Option} gphoto-album-default-commenting-enabled
Default commenting mode for newly created albums.

@end defvar

@defvar {User Option} gphoto-user-email
Mail address that identifies Picasa user.

@end defvar

@defvar {User Option} gphoto-user-password
Password for authenticating to Picasa account.

@end defvar

@node gweb
@section gweb

Provide Google services --- such as search, search-based completion etc.
For use from within Emacs tools.
This is meant to be fast and efficient --- and uses WebAPIs as opposed to HTML  scraping.

@subsection gweb Commands

@deffn {Interactive Command} gweb-google-at-point  (search-term &optional refresh)
Google for term at point, and display top result succinctly.
Attach URL at point so we can follow it later --- subsequent invocations of this command simply follow that URL.
Optional interactive prefix arg refresh forces this cached URL to be refreshed.
@end deffn

@deffn {Interactive Command} gweb-news-view  (query)
Display News Search results  in a browser.
@end deffn

@node mac-voices
@section mac-voices

This module defines the various voices used in voice-lock mode.
This module is Apple Mac specific.

@node multispeech-voices
@section multispeech-voices

This module defines the various voices used in voice-lock mode.
This module is Multispeech specific.

@node outloud-voices
@section outloud-voices

This module defines the various voices used in voice-lock mode.
This module is IBM ViaVoice Outloud specific.

@node plain-voices
@section plain-voices

This module defines the various voices used in voice-lock mode.
This module is Plain  i.e. suitable for a device  for which you haven't yet implemented appropriate voice-locking controls

@node sox
@section sox

This module defines a convenient speech-enabled
interface for editing mp3 and wav files using SoX.

Launching M-x sox  creates a special interaction buffer
that provides single keystroke commands for editing and
applying effects to a selected sound file. For adding mp3
support to sox,

sudo apt-get libsox-fmt-mp3 install

This module can be used independent of Emacspeak.

@node stack-f
@section stack-f

The stack is implemented as a linked list with a tag 'STACK
as the first element.  All entries and removals are done using
destructive functions.

@node tetris
@section tetris

@node toy-braille
@section toy-braille

This is a bit of toy code to write in braille.

To try this, load this file (`M-x load-file path/to/toy-braille.el'), then do:

  M-: (get-toy-braille-string "just a test")

That's just a toy, meant as an excuse and maybe a tool to learn a
bit of braille, nothing more.

Unicode fonts are needed.

You can try:

  M-: (set-default-font "-*-unifont-*-*-*-*-*-*-*-*-*-*-*-*")

or

  M-: (set-default-font "-*-clearlyu-*-*-*-*-*-*-*-*-*-*-iso10646-*")

(it will only work if the relative font is installed and properly configured).

References:

  http://www.nbp.org/ic/nbp/braille/index.html

  http://www.unicode.org/Public/4.0-Update1/UnicodeData-4.0.1.txt

@node voice-setup
@section voice-setup

A voice is to audio as a font is to a visual display.
A personality is to audio as a face is to a visual display.

Voice-lock-mode is a minor mode that causes your comments to be
spoken in one personality, strings in another, reserved words in another,
documentation strings in another, and so on.

Comments will be spoken in `emacspeak-voice-lock-comment-personality'.
Strings will be spoken in `emacspeak-voice-lock-string-personality'.
Function and variable names (in their defining forms) will be
 spoken in `emacspeak-voice-lock-function-name-personality'.
Reserved words will be spoken in `emacspeak-voice-lock-keyword-personality'.

To make the text you type be voiceified, use M-x voice-lock-mode.
When this minor mode is on, the voices of the current line are
updated with every insertion or deletion.

How faces map to voices: TTS engine specific modules e.g.,
dectalk-voices.el and outloud-voices.el define a standard set
of voice names.  This module maps standard "personality"
names to these pre-defined voices.  It does this via special
form def-voice-font which takes a personality name, a voice
name and a face name to set up the mapping between face and
personality, and personality and voice.
Newer Emacspeak modules should use voice-setup-add-map when
defining face->personality mappings.
Older code calls def-voice-font directly, but over time those
calls will be changed to the more succinct form provided by
voice-setup-add-map. For use from other modules, also see
function voice-setup-map-face which is useful when mapping a
single face.
Both voice-setup-add-map and voice-setup-map-face call
special form def-voice-font.

Special form def-voice-font sets up the personality name to
be available via custom.  new voices can be defined using CSS
style specifications see special form defvoice Voices defined
via defvoice can be customized via custom see the
documentation for defvoice.

@subsection voice-setup Commands

@deffn {Interactive Command} voice-setup-list-voices  (pattern)
Show all defined voice-face mappings  in a help buffer.
Sample text to use comes from variable
  `voice-setup-sample-text'. 
@end deffn

@deffn {Interactive Command} voice-setup-toggle-silence-personality  nil
@kbd{C-e M-q}

Toggle audibility of personality under point  .
If personality at point is currently audible, its
face->personality map is cached in a buffer local variable, and
its face->personality map is replaced by face->inaudible.  If
personality at point is inaudible, and there is a cached value,
then the original face->personality mapping is restored.  In
either case, the buffer is refontified to have the new mapping
take effect.
@end deffn

@subsection voice-setup Options

@defvar {User Option} voice-animate-extra-settings
Adds extra animation  current voice.

@end defvar

@defvar {User Option} voice-animate-medium-settings
Adds medium animation  current voice.

@end defvar

@defvar {User Option} voice-animate-settings
Animates current voice.

@end defvar

@defvar {User Option} voice-annotate-settings
Indicate annotation.

@end defvar

@defvar {User Option} voice-bolden-and-animate-settings
Bolden and animate  current voice.

@end defvar

@defvar {User Option} voice-bolden-extra-settings
Extra bolden current voice.

@end defvar

@defvar {User Option} voice-bolden-medium-settings
Add medium bolden current voice.

@end defvar

@defvar {User Option} voice-bolden-settings
Bolden current voice.

@end defvar

@defvar {User Option} voice-brighten-extra-settings
Extra brighten current voice.

@end defvar

@defvar {User Option} voice-brighten-medium-settings
Brighten current voice.

@end defvar

@defvar {User Option} voice-brighten-settings
Brighten current voice.

@end defvar

@defvar {User Option} voice-indent-settings
Indicate indentation .

@end defvar

@defvar {User Option} voice-lighten-extra-settings
Add extra lighten current voice.

@end defvar

@defvar {User Option} voice-lighten-medium-settings
Add medium lighten current voice.

@end defvar

@defvar {User Option} voice-lighten-settings
Lighten current voice.

@end defvar

@defvar {User Option} voice-lock-overlay-0-settings
Overlay voice that sets dimension 0 of ACSS structure to 8.

@end defvar

@defvar {User Option} voice-lock-overlay-1-settings
Overlay voice that sets dimension 1 of ACSS structure to 8.

@end defvar

@defvar {User Option} voice-lock-overlay-2-settings
Overlay voice that sets dimension 2 of ACSS structure to 8.

@end defvar

@defvar {User Option} voice-lock-overlay-3-settings
Overlay voice that sets dimension 3 of ACSS structure to 8.

@end defvar

@defvar {User Option} voice-monotone-medium-settings
Turns current voice into a medium monotone.

@end defvar

@defvar {User Option} voice-monotone-settings
Turns current voice into a monotone and speaks all punctuations.

@end defvar

@defvar {User Option} voice-punctuations-all-settings
Turns current voice into one that  speaks all
punctuations.

@end defvar

@defvar {User Option} voice-punctuations-none-settings
Turns current voice into one that  speaks no punctuations.

@end defvar

@defvar {User Option} voice-punctuations-some-settings
Turns current voice into one that  speaks some
punctuations.

@end defvar

@defvar {User Option} voice-setup-sample-text
Sample text used  when displaying available voices.

@end defvar

@defvar {User Option} voice-smoothen-extra-settings
Extra smoothen current voice.

@end defvar

@defvar {User Option} voice-smoothen-medium-settings
Add medium smoothen current voice.

@end defvar

@defvar {User Option} voice-smoothen-settings
Smoothen current voice.

@end defvar

@defvar {User Option} voice-womanize-1-settings
Apply first female voice.

@end defvar

@node URL Templates 
@section URL Templates

This section documents a total of 70 URL Templates.

All of these URL templates can be invoked via command
 @kbd{M-x emacspeak-url-template-fetch} normally bound to
 @kbd{C-e u}.
This command prompts for the name of the template, and completion
 is available via Emacs' minibuffer completion.
Each URL template carries out the following steps:
@itemize @bullet
@item Prompt for the relevant information.
@item Fetch the resulting URL using an appropriate fetcher.
@item Set up the resulting resource with appropriate
 customizations.
@end itemize

As an example, the URL template for weather forecasts
prompts for a location and speaks the forecast. 

@b{Air Traffic Control}

Find live streams for Air Traffic Control.

@b{Airport conditions}

Display airport conditions from the FAA.

@b{Amazon Product Details By ASIN}

Retrieve product details from Amazon by either ISBN or ASIN.

@b{Anonymize Google Search}

Logout from Google to do an anonymous search.

@b{BBC Genre Using IPlayer}

BBC iPlayer Genre

@b{BBC Podcast Directory}

BBC PodCast Directory

@b{BBC Program Guide}

Display interactive BBC Program Guide.

@b{BBC iPlayer}

BBC iPlayer

@b{Baseball Game Index}

Display baseball Play By Play.

@b{Baseball Play By Play}

Display baseball Play By Play.

@b{Baseball scores}

Display baseball scores.

@b{Baseball standings}

Display MLB standings.

@b{Bing News}

Bing News results as RSS feed.

@b{Bing Search}

Bing results as RSS feed.

@b{CNN Content}

Filter down to CNN content area.

@b{CNN Market Data }

CNN Money

@b{CNN technology }

CNN Technology news.

@b{CNNPodCasts}

List CNN Podcast media links.

@b{Dictionary Lookup}

Dictionary Lookup

@b{Earthquakes}

Show table of recent quakes.

@b{EmacsWiki Search}

EmacsWiki Search

@b{Finance Google Search}

Display content from Google Finance.

@b{Finance Google news}

Display content from Google Finance.

@b{Geek Linux Daily}

Play specified edition of Geek Linux DailyShow

@b{GitHub Search}

Perform a GitHub Search.

@b{Google Image Search}

Google Image Search

@b{Google News Search}

Search Google news.

@b{Google NewsPaper}

Retrieve and speak Google News Overview.

@b{Google Recent News Search}

Search Google news.

@b{Google Scholar}

Google Scholar Search

@b{Google Transcoder}

Transcode site via Google.

@b{Google Webmaster Page Analysis}

Page Analysis From Google Webmaster tools.

@b{Google topical News}

Display specified news feed.

@b{IToRSS}

Pull RSS feed corresponding to an ITunes Podcast.

@b{MLB Scorecard}

Show MLB Scorecard.

@b{Market summary from Google}

Display financial market summary.

@b{Mobile Finance Google Search}

Display content from Google Finance.

@b{Money Content }

CNN Money Content

@b{Multilingual dictionary via Google.}

Translate word using Google.
Source and target languages
are specified as two-letter language codes, e.g. en|de translates
from English to German

@b{NY Times Mobile}

NYTimes Mobile Site

@b{NY Times RSS Feeds}

Display browsable list of NY Times RSS Feeds.

@b{Old Time Radio}

This months Old Time Radio Programming

@b{PHC Prairie Home Companion}

Play Prairie Home Companion

@b{Patent Search From Google}

Perform patent search via Google

@b{PodCast CNet}

Play Podcast from CNET

@b{RadioTime Browser}

RadioTime Entry point.

@b{RadioTime Search}

RadioTime Search.

@b{Recent YouTube Results}

YouTube Search Via Feeds

@b{Redhat Linux Show}

Play specified edition of Redhat Linux Show

@b{Reuters Finance}

Reuters Finance Lookup

@b{Seeking Alpha Stock Search}

Seeking Alpha search.

@b{Sign in to Google}

Login to Google.

@b{StreamWorld Radio}

Play radio stream.
See http://www.cbsradio.com/streaming/index.html for a list of CBS stations that use StreamTheWorld.

@b{Tech News From CNet}

Display tech news from CNET

@b{Times Of India}

Retrieve Times Of India.
Set up URL rewrite rule to get print page.

@b{TuneIn Radio}

Translate StreamId to playable stream.

@b{UPS Packages}

Display package tracking information from UPS.

@b{Weather forecast from Weather Underground}

Weather forecast from weather underground mobile.

@b{WordNet Search}

Look up term in WordNet.

@b{Yahoo Business News}

Retrieve and speak business section from Yahoo Daily News.

@b{Yahoo RSS Feeds}

List Yahoo RSS Feeds.

@b{YouTube Results}

YouTube Search Via Feeds

@b{fedex packages}

Display package tracking information from Fedex.

@b{html5IRC}

Show HTML5 IRC log.

@b{rss weather from wunderground}

Pull RSS weather feed for specified state/city.

@b{sourceforge Download}

Download specified file.

@b{sourceforge browse mirrors}

Retrieve download page at Sourceforge for specified project.

@b{sourceforge project}

Open specified project page at SourceForge.

@b{w3c IRC Logs}

Use this to pull up the
archived logs from the W3C IRC. You need to know the exact
name of the channel.

@b{w3c Lists}

Use this to pull up the
archived mail from the W3C list. You need to know the exact
name of the list.

