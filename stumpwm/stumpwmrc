;;; -*- mode: stumpwm -*-
;;; StumpWmRC: 
;;; $Author: tv.raman.tv $
;;; Keywords: StumpWM, Emacspeak, Audio Desktop
(in-package :stumpwm)

;;; {Prefix key matches my screen setup:
(set-prefix-key (kbd "C-\\"))

;;; }
;;; {Lock screen C-t D

(defparameter *my-lock-command*
  "exec ~/bin/xlock ")

(defcommand lock-screen ()
  ()
  "Lock my screen."
  (eval-command *my-lock-command*))

(define-key *root-map* (kbd "D") "lock-screen")
;;; }
;;; {TTS

(load "/home/raman/emacs/lisp/emacspeak/stumpwm/tts.lisp")
(setq *tts-engine* *tts-32-outloud*)
(tts-say "TTS: Ready to talk! ")

;;; }
;;; {Speak Actions:
(defvar *tts-window-icon* "/home/raman/emacs/lisp/emacspeak/sounds/classic/window-resize.wav"
  "Window change icon.")
(defun speak-window-change (new old)
  "Speak current window  information."
  (declare (special *tts-window-icon*))
  (when new
    (tts-serve-icon *tts-window-icon*)
    (tts-speak (window-name new))))

(defun speak-this-window (window)
  "Speak this window  information."
  (tts-speak (window-name window)))

(defun speak-current-window ()
  "Speak current window  information."
  (tts-speak (window-name (current-window))))

(defvar *tts-on-icon* "/home/raman/emacs/lisp/emacspeak/sounds/chimes/on.wav"
  "On icon.")

(defvar *tts-off-icon* "/home/raman/emacs/lisp/emacspeak/sounds/chimes/off.wav"
  "Off icon.")

(defvar *tts-speak-messages* t
  "Switch messages on and off.")

(defcommand  tts-toggle-speak-messages ()
  ()
  "Toggle state of speak messages switch."
  (declare (special *tts-speak-messages* *tts-on-icon*
                    *tts-off-icon*))
  (setq *tts-speak-messages* (not *tts-speak-messages*))
  (tts-serve-icon
   (if *tts-speak-messages*
   *tts-on-icon*
   *tts-off-icon*)))

(define-key *root-map* (kbd "t") "tts-toggle-speak-messages")

(defun speak-messages (&rest messages)
  "Speak messages, a list of lines."
  (tts-speak-list  messages))

;;; }
;;; {Attach Handlers:

(setq  *focus-window-hook* (list 'speak-window-change))
(setq *new-window-hook* (list 'speak-this-window))
(setq *message-hook* (list 'speak-messages))

;;; }
;;; {emacs  is emacsclient 

;;; Avoid activity in a window causing it to get raised:
(setf stumpwm:*deny-raise-request* t)
(defcommand emacs () ()
            "Start emacs unless it is already running, in which case focus it."
            (run-or-raise "emacsclient -c" '(:class "Emacs")))

(define-key *root-map* (kbd "D") "lock-screen")

;;; }
;;; {Chrome:

(defcommand chrome ()
  ()
  "Start  or switch to Chrome."
  (run-or-raise "$HOME/bin/g" '(:class "chrome" :title "Chrome")))

(define-key *root-map* (kbd "g") "chrome")


;;; }
;;; {Emacs local variables

;;; local variables:
;;; mode: stumpwm
;;; mode: folding
;;; folded-file: t
;;; end:

;;; }

